(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{215:function(t,a,s){"use strict";s.r(a);var e=s(3),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream"}},[t._v("#")]),t._v(" Stream")]),t._v(" "),s("blockquote",[s("p",[t._v("Stability: 2 - Stable")])]),t._v(" "),s("p",[t._v("A stream is an abstract interface for working with streaming data in Node.js.\nThe "),s("code",[t._v("stream")]),t._v(" module provides an API for implementing the stream interface.")]),t._v(" "),s("p",[t._v("There are many stream objects provided by Node.js. For instance, a\n"),s("router-link",{attrs:{to:"/node/http.html#http_class_http_incomingmessage"}},[t._v("request to an HTTP server")]),t._v(" and "),s("router-link",{attrs:{to:"/node/process.html#process_process_stdout"}},[s("code",[t._v("process.stdout")])]),t._v("\nare both stream instances.")],1),t._v(" "),s("p",[t._v("Streams can be readable, writable, or both. All streams are instances of\n"),s("router-link",{attrs:{to:"/node/events.html#events_class_eventemitter"}},[s("code",[t._v("EventEmitter")])]),t._v(".")],1),t._v(" "),s("p",[t._v("To access the "),s("code",[t._v("stream")]),t._v(" module:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("stream")]),t._v(" module is useful for creating new types of stream instances. It is\nusually not necessary to use the "),s("code",[t._v("stream")]),t._v(" module to consume streams.")]),t._v(" "),s("h2",{attrs:{id:"organization-of-this-document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#organization-of-this-document"}},[t._v("#")]),t._v(" Organization of this Document")]),t._v(" "),s("p",[t._v("This document contains two primary sections and a third section for notes. The\nfirst section explains how to use existing streams within an application. The\nsecond section explains how to create new types of streams.")]),t._v(" "),s("h2",{attrs:{id:"types-of-streams"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#types-of-streams"}},[t._v("#")]),t._v(" Types of Streams")]),t._v(" "),s("p",[t._v("There are four fundamental stream types within Node.js:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(": streams to which data can be written (for example,\n"),s("router-link",{attrs:{to:"/node/fs.html#fs_fs_createwritestream_path_options"}},[s("code",[t._v("fs.createWriteStream()")])]),t._v(").")],1),t._v(" "),s("li",[s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(": streams from which data can be read (for example,\n"),s("router-link",{attrs:{to:"/node/fs.html#fs_fs_createreadstream_path_options"}},[s("code",[t._v("fs.createReadStream()")])]),t._v(").")],1),t._v(" "),s("li",[s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(": streams that are both "),s("code",[t._v("Readable")]),t._v(" and "),s("code",[t._v("Writable")]),t._v(" (for example,\n"),s("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[s("code",[t._v("net.Socket")])]),t._v(").")],1),t._v(" "),s("li",[s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(": "),s("code",[t._v("Duplex")]),t._v(" streams that can modify or transform the data as it\nis written and read (for example, "),s("router-link",{attrs:{to:"/node/zlib.html#zlib_zlib_createdeflate_options"}},[s("code",[t._v("zlib.createDeflate()")])]),t._v(").")],1)]),t._v(" "),s("p",[t._v("Additionally, this module includes the utility functions\n"),s("a",{attrs:{href:"#stream_stream_pipeline_streams_callback"}},[s("code",[t._v("stream.pipeline()")])]),t._v(", "),s("a",{attrs:{href:"#stream_stream_finished_stream_options_callback"}},[s("code",[t._v("stream.finished()")])]),t._v(" and\n"),s("a",{attrs:{href:"#stream_stream_readable_from_iterable_options"}},[s("code",[t._v("stream.Readable.from()")])]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"object-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-mode"}},[t._v("#")]),t._v(" Object Mode")]),t._v(" "),s("p",[t._v("All streams created by Node.js APIs operate exclusively on strings and "),s("code",[t._v("Buffer")]),t._v("\n(or "),s("code",[t._v("Uint8Array")]),t._v(") objects. It is possible, however, for stream implementations\nto work with other types of JavaScript values (with the exception of "),s("code",[t._v("null")]),t._v(',\nwhich serves a special purpose within streams). Such streams are considered to\noperate in "object mode".')]),t._v(" "),s("p",[t._v("Stream instances are switched into object mode using the "),s("code",[t._v("objectMode")]),t._v(" option\nwhen the stream is created. Attempting to switch an existing stream into\nobject mode is not safe.")]),t._v(" "),s("h3",{attrs:{id:"buffering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#buffering"}},[t._v("#")]),t._v(" Buffering")]),t._v(" "),s("p",[t._v("Both "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" and "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" streams will store data in an internal\nbuffer that can be retrieved using "),s("code",[t._v("writable.writableBuffer")]),t._v(" or\n"),s("code",[t._v("readable.readableBuffer")]),t._v(", respectively.")]),t._v(" "),s("p",[t._v("The amount of data potentially buffered depends on the "),s("code",[t._v("highWaterMark")]),t._v(" option\npassed into the stream's constructor. For normal streams, the "),s("code",[t._v("highWaterMark")]),t._v("\noption specifies a "),s("a",{attrs:{href:"#stream_highwatermark_discrepancy_after_calling_readable_setencoding"}},[t._v("total number of bytes")]),t._v(". For streams operating\nin object mode, the "),s("code",[t._v("highWaterMark")]),t._v(" specifies a total number of objects.")]),t._v(" "),s("p",[t._v("Data is buffered in "),s("code",[t._v("Readable")]),t._v(" streams when the implementation calls\n"),s("a",{attrs:{href:"#stream_readable_push_chunk_encoding"}},[s("code",[t._v("stream.push(chunk)")])]),t._v(". If the consumer of the Stream does not\ncall "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read()")])]),t._v(", the data will sit in the internal\nqueue until it is consumed.")]),t._v(" "),s("p",[t._v("Once the total size of the internal read buffer reaches the threshold specified\nby "),s("code",[t._v("highWaterMark")]),t._v(", the stream will temporarily stop reading data from the\nunderlying resource until the data currently buffered can be consumed (that is,\nthe stream will stop calling the internal "),s("code",[t._v("readable._read()")]),t._v(" method that is\nused to fill the read buffer).")]),t._v(" "),s("p",[t._v("Data is buffered in "),s("code",[t._v("Writable")]),t._v(" streams when the\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("writable.write(chunk)")])]),t._v(" method is called repeatedly. While the\ntotal size of the internal write buffer is below the threshold set by\n"),s("code",[t._v("highWaterMark")]),t._v(", calls to "),s("code",[t._v("writable.write()")]),t._v(" will return "),s("code",[t._v("true")]),t._v(". Once\nthe size of the internal buffer reaches or exceeds the "),s("code",[t._v("highWaterMark")]),t._v(", "),s("code",[t._v("false")]),t._v("\nwill be returned.")]),t._v(" "),s("p",[t._v("A key goal of the "),s("code",[t._v("stream")]),t._v(" API, particularly the "),s("a",{attrs:{href:"#stream_readable_pipe_destination_options"}},[s("code",[t._v("stream.pipe()")])]),t._v(" method,\nis to limit the buffering of data to acceptable levels such that sources and\ndestinations of differing speeds will not overwhelm the available memory.")]),t._v(" "),s("p",[t._v("Because "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" and "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(" streams are both "),s("code",[t._v("Readable")]),t._v(" and\n"),s("code",[t._v("Writable")]),t._v(", each maintains "),s("em",[t._v("two")]),t._v(" separate internal buffers used for reading and\nwriting, allowing each side to operate independently of the other while\nmaintaining an appropriate and efficient flow of data. For example,\n"),s("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[s("code",[t._v("net.Socket")])]),t._v(" instances are "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" streams whose "),s("code",[t._v("Readable")]),t._v(" side allows\nconsumption of data received "),s("em",[t._v("from")]),t._v(" the socket and whose "),s("code",[t._v("Writable")]),t._v(" side allows\nwriting data "),s("em",[t._v("to")]),t._v(" the socket. Because data may be written to the socket at a\nfaster or slower rate than data is received, each side should\noperate (and buffer) independently of the other.")],1),t._v(" "),s("h2",{attrs:{id:"api-for-stream-consumers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-for-stream-consumers"}},[t._v("#")]),t._v(" API for Stream Consumers")]),t._v(" "),s("p",[t._v("Almost all Node.js applications, no matter how simple, use streams in some\nmanner. The following is an example of using streams in a Node.js application\nthat implements an HTTP server:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `req` is an http.IncomingMessage, which is a Readable Stream.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `res` is an http.ServerResponse, which is a Writable Stream.")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the data as utf8 strings.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If an encoding is not set, Buffer objects will be received.")]),t._v("\n  req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEncoding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Readable streams emit 'data' events once a listener is added.")]),t._v("\n  req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The 'end' event indicates that the entire body has been received.")]),t._v("\n  req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write back something interesting to the user:")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("er"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// uh oh! bad json!")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("error: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("er"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1337")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// $ curl localhost:1337 -d "{}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// $ curl localhost:1337 -d "\\"foo\\""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// $ curl localhost:1337 -d "not json"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: Unexpected token o in JSON at position 1")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" streams (such as "),s("code",[t._v("res")]),t._v(" in the example) expose methods such as\n"),s("code",[t._v("write()")]),t._v(" and "),s("code",[t._v("end()")]),t._v(" that are used to write data onto the stream.")]),t._v(" "),s("p",[s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" streams use the "),s("router-link",{attrs:{to:"/node/events.html#events_class_eventemitter"}},[s("code",[t._v("EventEmitter")])]),t._v(" API for notifying application\ncode when data is available to be read off the stream. That available data can\nbe read from the stream in multiple ways.")],1),t._v(" "),s("p",[t._v("Both "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" and "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" streams use the "),s("router-link",{attrs:{to:"/node/events.html#events_class_eventemitter"}},[s("code",[t._v("EventEmitter")])]),t._v(" API in\nvarious ways to communicate the current state of the stream.")],1),t._v(" "),s("p",[s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" and "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(" streams are both "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" and\n"),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(".")]),t._v(" "),s("p",[t._v("Applications that are either writing data to or consuming data from a stream\nare not required to implement the stream interfaces directly and will generally\nhave no reason to call "),s("code",[t._v("require('stream')")]),t._v(".")]),t._v(" "),s("p",[t._v("Developers wishing to implement new types of streams should refer to the\nsection "),s("a",{attrs:{href:"#stream_api_for_stream_implementers"}},[t._v("API for Stream Implementers")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"writable-streams"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-streams"}},[t._v("#")]),t._v(" Writable Streams")]),t._v(" "),s("p",[t._v("Writable streams are an abstraction for a "),s("em",[t._v("destination")]),t._v(" to which data is\nwritten.")]),t._v(" "),s("p",[t._v("Examples of "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" streams include:")]),t._v(" "),s("ul",[s("li",[s("router-link",{attrs:{to:"/node/http.html#http_class_http_clientrequest"}},[t._v("HTTP requests, on the client")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/http.html#http_class_http_serverresponse"}},[t._v("HTTP responses, on the server")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/fs.html#fs_class_fs_writestream"}},[t._v("fs write streams")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/zlib.html"}},[t._v("zlib streams")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/crypto.html"}},[t._v("crypto streams")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[t._v("TCP sockets")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/child_process.html#child_process_subprocess_stdin"}},[t._v("child process stdin")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/process.html#process_process_stdout"}},[s("code",[t._v("process.stdout")])]),t._v(", "),s("router-link",{attrs:{to:"/node/process.html#process_process_stderr"}},[s("code",[t._v("process.stderr")])])],1)]),t._v(" "),s("p",[t._v("Some of these examples are actually "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" streams that implement the\n"),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" interface.")]),t._v(" "),s("p",[t._v("All "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" streams implement the interface defined by the\n"),s("code",[t._v("stream.Writable")]),t._v(" class.")]),t._v(" "),s("p",[t._v("While specific instances of "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" streams may differ in various ways,\nall "),s("code",[t._v("Writable")]),t._v(" streams follow the same fundamental usage pattern as illustrated\nin the example below:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myStream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWritableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some more data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'done writing data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"class-stream-writable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-stream-writable"}},[t._v("#")]),t._v(" Class: stream.Writable")]),t._v(" "),s("h5",{attrs:{id:"event-close"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-close"}},[t._v("#")]),t._v(" Event: 'close'")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'close'")]),t._v(" event is emitted when the stream and any of its underlying\nresources (a file descriptor, for example) have been closed. The event indicates\nthat no more events will be emitted, and no further computation will occur.")]),t._v(" "),s("p",[t._v("A "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" stream will always emit the "),s("code",[t._v("'close'")]),t._v(" event if it is\ncreated with the "),s("code",[t._v("emitClose")]),t._v(" option.")]),t._v(" "),s("h5",{attrs:{id:"event-drain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-drain"}},[t._v("#")]),t._v(" Event: 'drain'")]),t._v(" "),s("p",[t._v("If a call to "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write(chunk)")])]),t._v(" returns "),s("code",[t._v("false")]),t._v(", the\n"),s("code",[t._v("'drain'")]),t._v(" event will be emitted when it is appropriate to resume writing data\nto the stream.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write the data to the supplied writable stream one million times.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Be attentive to back-pressure.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeOneMillionTimes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ok "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Last time!")]),t._v("\n        writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// See if we should continue, or wait.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Don't pass the callback, because we're not done yet.")]),t._v("\n        ok "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ok"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Had to stop early!")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write some more once it drains.")]),t._v("\n      writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'drain'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h5",{attrs:{id:"event-error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-error"}},[t._v("#")]),t._v(" Event: 'error'")]),t._v(" "),s("ul",[s("li",[t._v("{Error}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'error'")]),t._v(" event is emitted if an error occurred while writing or piping\ndata. The listener callback is passed a single "),s("code",[t._v("Error")]),t._v(" argument when called.")]),t._v(" "),s("p",[t._v("The stream is not closed when the "),s("code",[t._v("'error'")]),t._v(" event is emitted unless the\n"),s("a",{attrs:{href:"#stream_constructor_new_stream_writable_options"}},[s("code",[t._v("autoDestroy")])]),t._v(" option was set to "),s("code",[t._v("true")]),t._v(" when creating the\nstream.")]),t._v(" "),s("p",[t._v("After "),s("code",[t._v("'error'")]),t._v(", no further events other than "),s("code",[t._v("'close'")]),t._v(" "),s("em",[t._v("should")]),t._v(" be emitted\n(including "),s("code",[t._v("'error'")]),t._v(" events).")]),t._v(" "),s("h5",{attrs:{id:"event-finish"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-finish"}},[t._v("#")]),t._v(" Event: 'finish'")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'finish'")]),t._v(" event is emitted after the "),s("a",{attrs:{href:"#stream_writable_end_chunk_encoding_callback"}},[s("code",[t._v("stream.end()")])]),t._v(" method\nhas been called, and all data has been flushed to the underlying system.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWritableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("hello, #")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("!\\n")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nwriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is the end\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'finish'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'All writes are now complete.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"event-pipe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-pipe"}},[t._v("#")]),t._v(" Event: 'pipe'")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("src")]),t._v(" {stream.Readable} source stream that is piping to this writable")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'pipe'")]),t._v(" event is emitted when the "),s("a",{attrs:{href:"#stream_readable_pipe_destination_options"}},[s("code",[t._v("stream.pipe()")])]),t._v(" method is called on\na readable stream, adding this writable to its set of destinations.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWritableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pipe'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something is piping into the writer.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  assert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"event-unpipe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-unpipe"}},[t._v("#")]),t._v(" Event: 'unpipe'")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("src")]),t._v(" {stream.Readable} The source stream that\n"),s("a",{attrs:{href:"#stream_readable_unpipe_destination"}},[t._v("unpiped")]),t._v(" this writable")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'unpipe'")]),t._v(" event is emitted when the "),s("a",{attrs:{href:"#stream_readable_unpipe_destination"}},[s("code",[t._v("stream.unpipe()")])]),t._v(" method is called\non a "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" stream, removing this "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" from its set of\ndestinations.")]),t._v(" "),s("p",[t._v("This is also emitted in case this "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" stream emits an error when a\n"),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" stream pipes into it.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWritableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unpipe'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something has stopped piping into the writer.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  assert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unpipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"writable-cork"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-cork"}},[t._v("#")]),t._v(" writable.cork()")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("writable.cork()")]),t._v(" method forces all written data to be buffered in memory.\nThe buffered data will be flushed when either the "),s("a",{attrs:{href:"#stream_writable_uncork"}},[s("code",[t._v("stream.uncork()")])]),t._v(" or\n"),s("a",{attrs:{href:"#stream_writable_end_chunk_encoding_callback"}},[s("code",[t._v("stream.end()")])]),t._v(" methods are called.")]),t._v(" "),s("p",[t._v("The primary intent of "),s("code",[t._v("writable.cork()")]),t._v(" is to avoid a situation where writing\nmany small chunks of data to a stream do not cause a backup in the internal\nbuffer that would have an adverse impact on performance. In such situations,\nimplementations that implement the "),s("code",[t._v("writable._writev()")]),t._v(" method can perform\nbuffered writes in a more optimized manner.")]),t._v(" "),s("p",[t._v("See also: "),s("a",{attrs:{href:"#stream_writable_uncork"}},[s("code",[t._v("writable.uncork()")])]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"writable-destroy-error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-destroy-error"}},[t._v("#")]),t._v(" writable.destroy([error])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("error")]),t._v(" {Error} Optional, an error to emit with "),s("code",[t._v("'error'")]),t._v(" event.")]),t._v(" "),s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("Destroy the stream. Optionally emit an "),s("code",[t._v("'error'")]),t._v(" event, and emit a "),s("code",[t._v("'close'")]),t._v("\nevent (unless "),s("code",[t._v("emitClose")]),t._v(" is set to "),s("code",[t._v("false")]),t._v("). After this call, the writable\nstream has ended and subsequent calls to "),s("code",[t._v("write()")]),t._v(" or "),s("code",[t._v("end()")]),t._v(" will result in\nan "),s("code",[t._v("ERR_STREAM_DESTROYED")]),t._v(" error.\nThis is a destructive and immediate way to destroy a stream. Previous calls to\n"),s("code",[t._v("write()")]),t._v(" may not have drained, and may trigger an "),s("code",[t._v("ERR_STREAM_DESTROYED")]),t._v(" error.\nUse "),s("code",[t._v("end()")]),t._v(" instead of destroy if data should flush before close, or wait for\nthe "),s("code",[t._v("'drain'")]),t._v(" event before destroying the stream.\nImplementors should not override this method,\nbut instead implement "),s("a",{attrs:{href:"#stream_writable_destroy_err_callback"}},[s("code",[t._v("writable._destroy()")])]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"writable-destroyed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-destroyed"}},[t._v("#")]),t._v(" writable.destroyed")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Is "),s("code",[t._v("true")]),t._v(" after "),s("a",{attrs:{href:"#stream_writable_destroy_error"}},[s("code",[t._v("writable.destroy()")])]),t._v(" has been called.")]),t._v(" "),s("h5",{attrs:{id:"writable-end-chunk-encoding-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-end-chunk-encoding-callback"}},[t._v("#")]),t._v(" writable.end([chunk[, encoding]][, callback])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" {string|Buffer|Uint8Array|any} Optional data to write. For streams\nnot operating in object mode, "),s("code",[t._v("chunk")]),t._v(" must be a string, "),s("code",[t._v("Buffer")]),t._v(" or\n"),s("code",[t._v("Uint8Array")]),t._v(". For object mode streams, "),s("code",[t._v("chunk")]),t._v(" may be any JavaScript value\nother than "),s("code",[t._v("null")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" {string} The encoding if "),s("code",[t._v("chunk")]),t._v(" is a string")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} Optional callback for when the stream is finished")]),t._v(" "),s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("Calling the "),s("code",[t._v("writable.end()")]),t._v(" method signals that no more data will be written\nto the "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(". The optional "),s("code",[t._v("chunk")]),t._v(" and "),s("code",[t._v("encoding")]),t._v(" arguments allow one\nfinal additional chunk of data to be written immediately before closing the\nstream. If provided, the optional "),s("code",[t._v("callback")]),t._v(" function is attached as a listener\nfor the "),s("a",{attrs:{href:"#stream_event_finish"}},[s("code",[t._v("'finish'")])]),t._v(" event.")]),t._v(" "),s("p",[t._v("Calling the "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(" method after calling\n"),s("a",{attrs:{href:"#stream_writable_end_chunk_encoding_callback"}},[s("code",[t._v("stream.end()")])]),t._v(" will raise an error.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write 'hello, ' and then end with 'world!'.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'example.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Writing more now is not allowed!")]),t._v("\n")])])]),s("h5",{attrs:{id:"writable-setdefaultencoding-encoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-setdefaultencoding-encoding"}},[t._v("#")]),t._v(" writable.setDefaultEncoding(encoding)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("encoding")]),t._v(" {string} The new default encoding")]),t._v(" "),s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("writable.setDefaultEncoding()")]),t._v(" method sets the default "),s("code",[t._v("encoding")]),t._v(" for a\n"),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" stream.")]),t._v(" "),s("h5",{attrs:{id:"writable-uncork"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-uncork"}},[t._v("#")]),t._v(" writable.uncork()")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("writable.uncork()")]),t._v(" method flushes all data buffered since\n"),s("a",{attrs:{href:"#stream_writable_cork"}},[s("code",[t._v("stream.cork()")])]),t._v(" was called.")]),t._v(" "),s("p",[t._v("When using "),s("a",{attrs:{href:"#stream_writable_cork"}},[s("code",[t._v("writable.cork()")])]),t._v(" and "),s("code",[t._v("writable.uncork()")]),t._v(" to manage the buffering\nof writes to a stream, it is recommended that calls to "),s("code",[t._v("writable.uncork()")]),t._v(" be\ndeferred using "),s("code",[t._v("process.nextTick()")]),t._v(". Doing so allows batching of all\n"),s("code",[t._v("writable.write()")]),t._v(" calls that occur within a given Node.js event loop phase.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprocess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uncork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("If the "),s("a",{attrs:{href:"#stream_writable_cork"}},[s("code",[t._v("writable.cork()")])]),t._v(" method is called multiple times on a stream, the\nsame number of calls to "),s("code",[t._v("writable.uncork()")]),t._v(" must be called to flush the buffered\ndata.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprocess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uncork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The data will not be flushed until uncork() is called a second time.")]),t._v("\n  stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uncork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("See also: "),s("a",{attrs:{href:"#stream_writable_cork"}},[s("code",[t._v("writable.cork()")])]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"writable-writable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-writable"}},[t._v("#")]),t._v(" writable.writable")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Is "),s("code",[t._v("true")]),t._v(" if it is safe to call "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("writable.write()")])]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"writable-writableended"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-writableended"}},[t._v("#")]),t._v(" writable.writableEnded")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Is "),s("code",[t._v("true")]),t._v(" after "),s("a",{attrs:{href:"#stream_writable_end_chunk_encoding_callback"}},[s("code",[t._v("writable.end()")])]),t._v(" has been called. This property\ndoes not indicate whether the data has been flushed, for this use\n"),s("a",{attrs:{href:"#stream_writable_writablefinished"}},[s("code",[t._v("writable.writableFinished")])]),t._v(" instead.")]),t._v(" "),s("h5",{attrs:{id:"writable-writablecorked"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-writablecorked"}},[t._v("#")]),t._v(" writable.writableCorked")]),t._v(" "),s("ul",[s("li",[t._v("{integer}")])]),t._v(" "),s("p",[t._v("Number of times "),s("a",{attrs:{href:"#stream_writable_uncork"}},[s("code",[t._v("writable.uncork()")])]),t._v(" needs to be\ncalled in order to fully uncork the stream.")]),t._v(" "),s("h5",{attrs:{id:"writable-writablefinished"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-writablefinished"}},[t._v("#")]),t._v(" writable.writableFinished")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Is set to "),s("code",[t._v("true")]),t._v(" immediately before the "),s("a",{attrs:{href:"#stream_event_finish"}},[s("code",[t._v("'finish'")])]),t._v(" event is emitted.")]),t._v(" "),s("h5",{attrs:{id:"writable-writablehighwatermark"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-writablehighwatermark"}},[t._v("#")]),t._v(" writable.writableHighWaterMark")]),t._v(" "),s("ul",[s("li",[t._v("{number}")])]),t._v(" "),s("p",[t._v("Return the value of "),s("code",[t._v("highWaterMark")]),t._v(" passed when constructing this\n"),s("code",[t._v("Writable")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"writable-writablelength"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-writablelength"}},[t._v("#")]),t._v(" writable.writableLength")]),t._v(" "),s("ul",[s("li",[t._v("{number}")])]),t._v(" "),s("p",[t._v("This property contains the number of bytes (or objects) in the queue\nready to be written. The value provides introspection data regarding\nthe status of the "),s("code",[t._v("highWaterMark")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"writable-writableobjectmode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-writableobjectmode"}},[t._v("#")]),t._v(" writable.writableObjectMode")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Getter for the property "),s("code",[t._v("objectMode")]),t._v(" of a given "),s("code",[t._v("Writable")]),t._v(" stream.")]),t._v(" "),s("h5",{attrs:{id:"writable-write-chunk-encoding-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-write-chunk-encoding-callback"}},[t._v("#")]),t._v(" writable.write(chunk[, encoding][, callback])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" {string|Buffer|Uint8Array|any} Optional data to write. For streams\nnot operating in object mode, "),s("code",[t._v("chunk")]),t._v(" must be a string, "),s("code",[t._v("Buffer")]),t._v(" or\n"),s("code",[t._v("Uint8Array")]),t._v(". For object mode streams, "),s("code",[t._v("chunk")]),t._v(" may be any JavaScript value\nother than "),s("code",[t._v("null")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" {string} The encoding, if "),s("code",[t._v("chunk")]),t._v(" is a string")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} Callback for when this chunk of data is flushed")]),t._v(" "),s("li",[t._v("Returns: {boolean} "),s("code",[t._v("false")]),t._v(" if the stream wishes for the calling code to\nwait for the "),s("code",[t._v("'drain'")]),t._v(" event to be emitted before continuing to write\nadditional data; otherwise "),s("code",[t._v("true")]),t._v(".")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("writable.write()")]),t._v(" method writes some data to the stream, and calls the\nsupplied "),s("code",[t._v("callback")]),t._v(" once the data has been fully handled. If an error\noccurs, the "),s("code",[t._v("callback")]),t._v(" "),s("em",[t._v("may or may not")]),t._v(" be called with the error as its\nfirst argument. To reliably detect write errors, add a listener for the\n"),s("code",[t._v("'error'")]),t._v(" event. If "),s("code",[t._v("callback")]),t._v(" is called with an error, it will be called\nbefore the "),s("code",[t._v("'error'")]),t._v(" event is emitted.")]),t._v(" "),s("p",[t._v("The return value is "),s("code",[t._v("true")]),t._v(" if the internal buffer is less than the\n"),s("code",[t._v("highWaterMark")]),t._v(" configured when the stream was created after admitting "),s("code",[t._v("chunk")]),t._v(".\nIf "),s("code",[t._v("false")]),t._v(" is returned, further attempts to write data to the stream should\nstop until the "),s("a",{attrs:{href:"#stream_event_drain"}},[s("code",[t._v("'drain'")])]),t._v(" event is emitted.")]),t._v(" "),s("p",[t._v("While a stream is not draining, calls to "),s("code",[t._v("write()")]),t._v(" will buffer "),s("code",[t._v("chunk")]),t._v(", and\nreturn false. Once all currently buffered chunks are drained (accepted for\ndelivery by the operating system), the "),s("code",[t._v("'drain'")]),t._v(" event will be emitted.\nIt is recommended that once "),s("code",[t._v("write()")]),t._v(" returns false, no more chunks be written\nuntil the "),s("code",[t._v("'drain'")]),t._v(" event is emitted. While calling "),s("code",[t._v("write()")]),t._v(" on a stream that\nis not draining is allowed, Node.js will buffer all written chunks until\nmaximum memory usage occurs, at which point it will abort unconditionally.\nEven before it aborts, high memory usage will cause poor garbage collector\nperformance and high RSS (which is not typically released back to the system,\neven after the memory is no longer required). Since TCP sockets may never\ndrain if the remote peer does not read the data, writing a socket that is\nnot draining may lead to a remotely exploitable vulnerability.")]),t._v(" "),s("p",[t._v("Writing data while the stream is not draining is particularly\nproblematic for a "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(", because the "),s("code",[t._v("Transform")]),t._v(" streams are paused\nby default until they are piped or a "),s("code",[t._v("'data'")]),t._v(" or "),s("code",[t._v("'readable'")]),t._v(" event handler\nis added.")]),t._v(" "),s("p",[t._v("If the data to be written can be generated or fetched on demand, it is\nrecommended to encapsulate the logic into a "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" and use\n"),s("a",{attrs:{href:"#stream_readable_pipe_destination_options"}},[s("code",[t._v("stream.pipe()")])]),t._v(". However, if calling "),s("code",[t._v("write()")]),t._v(" is preferred, it is\npossible to respect backpressure and avoid memory issues using the\n"),s("a",{attrs:{href:"#stream_event_drain"}},[s("code",[t._v("'drain'")])]),t._v(" event:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'drain'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Wait for cb to be called before doing any other write.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Write completed, do more writes now.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("A "),s("code",[t._v("Writable")]),t._v(" stream in object mode will always ignore the "),s("code",[t._v("encoding")]),t._v(" argument.")]),t._v(" "),s("h3",{attrs:{id:"readable-streams"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-streams"}},[t._v("#")]),t._v(" Readable Streams")]),t._v(" "),s("p",[t._v("Readable streams are an abstraction for a "),s("em",[t._v("source")]),t._v(" from which data is\nconsumed.")]),t._v(" "),s("p",[t._v("Examples of "),s("code",[t._v("Readable")]),t._v(" streams include:")]),t._v(" "),s("ul",[s("li",[s("router-link",{attrs:{to:"/node/http.html#http_class_http_incomingmessage"}},[t._v("HTTP responses, on the client")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/http.html#http_class_http_incomingmessage"}},[t._v("HTTP requests, on the server")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/fs.html#fs_class_fs_readstream"}},[t._v("fs read streams")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/zlib.html"}},[t._v("zlib streams")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/crypto.html"}},[t._v("crypto streams")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[t._v("TCP sockets")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/child_process.html#child_process_subprocess_stdout"}},[t._v("child process stdout and stderr")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/process.html#process_process_stdin"}},[s("code",[t._v("process.stdin")])])],1)]),t._v(" "),s("p",[t._v("All "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" streams implement the interface defined by the\n"),s("code",[t._v("stream.Readable")]),t._v(" class.")]),t._v(" "),s("h4",{attrs:{id:"two-reading-modes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#two-reading-modes"}},[t._v("#")]),t._v(" Two Reading Modes")]),t._v(" "),s("p",[s("code",[t._v("Readable")]),t._v(" streams effectively operate in one of two modes: flowing and\npaused. These modes are separate from "),s("a",{attrs:{href:"#stream_object_mode"}},[t._v("object mode")]),t._v(".\nA "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" stream can be in object mode or not, regardless of whether\nit is in flowing mode or paused mode.")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("In flowing mode, data is read from the underlying system automatically\nand provided to an application as quickly as possible using events via the\n"),s("router-link",{attrs:{to:"/node/events.html#events_class_eventemitter"}},[s("code",[t._v("EventEmitter")])]),t._v(" interface.")],1)]),t._v(" "),s("li",[s("p",[t._v("In paused mode, the "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read()")])]),t._v(" method must be called\nexplicitly to read chunks of data from the stream.")])])]),t._v(" "),s("p",[t._v("All "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" streams begin in paused mode but can be switched to flowing\nmode in one of the following ways:")]),t._v(" "),s("ul",[s("li",[t._v("Adding a "),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" event handler.")]),t._v(" "),s("li",[t._v("Calling the "),s("a",{attrs:{href:"#stream_readable_resume"}},[s("code",[t._v("stream.resume()")])]),t._v(" method.")]),t._v(" "),s("li",[t._v("Calling the "),s("a",{attrs:{href:"#stream_readable_pipe_destination_options"}},[s("code",[t._v("stream.pipe()")])]),t._v(" method to send the data to a "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(".")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("Readable")]),t._v(" can switch back to paused mode using one of the following:")]),t._v(" "),s("ul",[s("li",[t._v("If there are no pipe destinations, by calling the\n"),s("a",{attrs:{href:"#stream_readable_pause"}},[s("code",[t._v("stream.pause()")])]),t._v(" method.")]),t._v(" "),s("li",[t._v("If there are pipe destinations, by removing all pipe destinations.\nMultiple pipe destinations may be removed by calling the\n"),s("a",{attrs:{href:"#stream_readable_unpipe_destination"}},[s("code",[t._v("stream.unpipe()")])]),t._v(" method.")])]),t._v(" "),s("p",[t._v("The important concept to remember is that a "),s("code",[t._v("Readable")]),t._v(" will not generate data\nuntil a mechanism for either consuming or ignoring that data is provided. If\nthe consuming mechanism is disabled or taken away, the "),s("code",[t._v("Readable")]),t._v(" will "),s("em",[t._v("attempt")]),t._v("\nto stop generating the data.")]),t._v(" "),s("p",[t._v("For backward compatibility reasons, removing "),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" event handlers will\n"),s("strong",[t._v("not")]),t._v(" automatically pause the stream. Also, if there are piped destinations,\nthen calling "),s("a",{attrs:{href:"#stream_readable_pause"}},[s("code",[t._v("stream.pause()")])]),t._v(" will not guarantee that the\nstream will "),s("em",[t._v("remain")]),t._v(" paused once those destinations drain and ask for more data.")]),t._v(" "),s("p",[t._v("If a "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" is switched into flowing mode and there are no consumers\navailable to handle the data, that data will be lost. This can occur, for\ninstance, when the "),s("code",[t._v("readable.resume()")]),t._v(" method is called without a listener\nattached to the "),s("code",[t._v("'data'")]),t._v(" event, or when a "),s("code",[t._v("'data'")]),t._v(" event handler is removed\nfrom the stream.")]),t._v(" "),s("p",[t._v("Adding a "),s("a",{attrs:{href:"#stream_event_readable"}},[s("code",[t._v("'readable'")])]),t._v(" event handler automatically make the stream to\nstop flowing, and the data to be consumed via\n"),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("readable.read()")])]),t._v(". If the "),s("a",{attrs:{href:"#stream_event_readable"}},[s("code",[t._v("'readable'")])]),t._v(" event handler is\nremoved, then the stream will start flowing again if there is a\n"),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" event handler.")]),t._v(" "),s("h4",{attrs:{id:"three-states"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#three-states"}},[t._v("#")]),t._v(" Three States")]),t._v(" "),s("p",[t._v('The "two modes" of operation for a '),s("code",[t._v("Readable")]),t._v(" stream are a simplified\nabstraction for the more complicated internal state management that is happening\nwithin the "),s("code",[t._v("Readable")]),t._v(" stream implementation.")]),t._v(" "),s("p",[t._v("Specifically, at any given point in time, every "),s("code",[t._v("Readable")]),t._v(" is in one of three\npossible states:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("readable.readableFlowing === null")])]),t._v(" "),s("li",[s("code",[t._v("readable.readableFlowing === false")])]),t._v(" "),s("li",[s("code",[t._v("readable.readableFlowing === true")])])]),t._v(" "),s("p",[t._v("When "),s("code",[t._v("readable.readableFlowing")]),t._v(" is "),s("code",[t._v("null")]),t._v(", no mechanism for consuming the\nstream's data is provided. Therefore, the stream will not generate data.\nWhile in this state, attaching a listener for the "),s("code",[t._v("'data'")]),t._v(" event, calling the\n"),s("code",[t._v("readable.pipe()")]),t._v(" method, or calling the "),s("code",[t._v("readable.resume()")]),t._v(" method will switch\n"),s("code",[t._v("readable.readableFlowing")]),t._v(" to "),s("code",[t._v("true")]),t._v(", causing the "),s("code",[t._v("Readable")]),t._v(" to begin actively\nemitting events as data is generated.")]),t._v(" "),s("p",[t._v("Calling "),s("code",[t._v("readable.pause()")]),t._v(", "),s("code",[t._v("readable.unpipe()")]),t._v(", or receiving backpressure\nwill cause the "),s("code",[t._v("readable.readableFlowing")]),t._v(" to be set as "),s("code",[t._v("false")]),t._v(",\ntemporarily halting the flowing of events but "),s("em",[t._v("not")]),t._v(" halting the generation of\ndata. While in this state, attaching a listener for the "),s("code",[t._v("'data'")]),t._v(" event\nwill not switch "),s("code",[t._v("readable.readableFlowing")]),t._v(" to "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" PassThrough"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PassThrough")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\npass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unpipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// readableFlowing is now false.")]),t._v("\n\npass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ok'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Will not emit 'data'.")]),t._v("\npass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Must be called to make stream emit 'data'.")]),t._v("\n")])])]),s("p",[t._v("While "),s("code",[t._v("readable.readableFlowing")]),t._v(" is "),s("code",[t._v("false")]),t._v(", data may be accumulating\nwithin the stream's internal buffer.")]),t._v(" "),s("h4",{attrs:{id:"choose-one-api-style"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#choose-one-api-style"}},[t._v("#")]),t._v(" Choose One API Style")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("Readable")]),t._v(" stream API evolved across multiple Node.js versions and provides\nmultiple methods of consuming stream data. In general, developers should choose\n"),s("em",[t._v("one")]),t._v(" of the methods of consuming data and "),s("em",[t._v("should never")]),t._v(" use multiple methods\nto consume data from a single stream. Specifically, using a combination\nof "),s("code",[t._v("on('data')")]),t._v(", "),s("code",[t._v("on('readable')")]),t._v(", "),s("code",[t._v("pipe()")]),t._v(", or async iterators could\nlead to unintuitive behavior.")]),t._v(" "),s("p",[t._v("Use of the "),s("code",[t._v("readable.pipe()")]),t._v(" method is recommended for most users as it has been\nimplemented to provide the easiest way of consuming stream data. Developers that\nrequire more fine-grained control over the transfer and generation of data can\nuse the "),s("router-link",{attrs:{to:"/node/events.html#events_class_eventemitter"}},[s("code",[t._v("EventEmitter")])]),t._v(" and "),s("code",[t._v("readable.on('readable')")]),t._v("/"),s("code",[t._v("readable.read()")]),t._v("\nor the "),s("code",[t._v("readable.pause()")]),t._v("/"),s("code",[t._v("readable.resume()")]),t._v(" APIs.")],1),t._v(" "),s("h4",{attrs:{id:"class-stream-readable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-stream-readable"}},[t._v("#")]),t._v(" Class: stream.Readable")]),t._v(" "),s("h5",{attrs:{id:"event-close-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-close-2"}},[t._v("#")]),t._v(" Event: 'close'")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'close'")]),t._v(" event is emitted when the stream and any of its underlying\nresources (a file descriptor, for example) have been closed. The event indicates\nthat no more events will be emitted, and no further computation will occur.")]),t._v(" "),s("p",[t._v("A "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" stream will always emit the "),s("code",[t._v("'close'")]),t._v(" event if it is\ncreated with the "),s("code",[t._v("emitClose")]),t._v(" option.")]),t._v(" "),s("h5",{attrs:{id:"event-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-data"}},[t._v("#")]),t._v(" Event: 'data'")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" {Buffer|string|any} The chunk of data. For streams that are not\noperating in object mode, the chunk will be either a string or "),s("code",[t._v("Buffer")]),t._v(".\nFor streams that are in object mode, the chunk can be any JavaScript value\nother than "),s("code",[t._v("null")]),t._v(".")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'data'")]),t._v(" event is emitted whenever the stream is relinquishing ownership of\na chunk of data to a consumer. This may occur whenever the stream is switched\nin flowing mode by calling "),s("code",[t._v("readable.pipe()")]),t._v(", "),s("code",[t._v("readable.resume()")]),t._v(", or by\nattaching a listener callback to the "),s("code",[t._v("'data'")]),t._v(" event. The "),s("code",[t._v("'data'")]),t._v(" event will\nalso be emitted whenever the "),s("code",[t._v("readable.read()")]),t._v(" method is called and a chunk of\ndata is available to be returned.")]),t._v(" "),s("p",[t._v("Attaching a "),s("code",[t._v("'data'")]),t._v(" event listener to a stream that has not been explicitly\npaused will switch the stream into flowing mode. Data will then be passed as\nsoon as it is available.")]),t._v(" "),s("p",[t._v("The listener callback will be passed the chunk of data as a string if a default\nencoding has been specified for the stream using the\n"),s("code",[t._v("readable.setEncoding()")]),t._v(" method; otherwise the data will be passed as a\n"),s("code",[t._v("Buffer")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Received ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" bytes of data.")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"event-end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-end"}},[t._v("#")]),t._v(" Event: 'end'")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'end'")]),t._v(" event is emitted when there is no more data to be consumed from\nthe stream.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'end'")]),t._v(" event "),s("strong",[t._v("will not be emitted")]),t._v(" unless the data is completely\nconsumed. This can be accomplished by switching the stream into flowing mode,\nor by calling "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read()")])]),t._v(" repeatedly until all data has been\nconsumed.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Received ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" bytes of data.")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'There will be no more data.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"event-error-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-error-2"}},[t._v("#")]),t._v(" Event: 'error'")]),t._v(" "),s("ul",[s("li",[t._v("{Error}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'error'")]),t._v(" event may be emitted by a "),s("code",[t._v("Readable")]),t._v(" implementation at any time.\nTypically, this may occur if the underlying stream is unable to generate data\ndue to an underlying internal failure, or when a stream implementation attempts\nto push an invalid chunk of data.")]),t._v(" "),s("p",[t._v("The listener callback will be passed a single "),s("code",[t._v("Error")]),t._v(" object.")]),t._v(" "),s("h5",{attrs:{id:"event-pause"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-pause"}},[t._v("#")]),t._v(" Event: 'pause'")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'pause'")]),t._v(" event is emitted when "),s("a",{attrs:{href:"#stream_readable_pause"}},[s("code",[t._v("stream.pause()")])]),t._v(" is called\nand "),s("code",[t._v("readableFlowing")]),t._v(" is not "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"event-readable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-readable"}},[t._v("#")]),t._v(" Event: 'readable'")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'readable'")]),t._v(" event is emitted when there is data available to be read from\nthe stream. In some cases, attaching a listener for the "),s("code",[t._v("'readable'")]),t._v(" event will\ncause some amount of data to be read into an internal buffer.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// There is some data to read now.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("'readable'")]),t._v(" event will also be emitted once the end of the stream data\nhas been reached but before the "),s("code",[t._v("'end'")]),t._v(" event is emitted.")]),t._v(" "),s("p",[t._v("Effectively, the "),s("code",[t._v("'readable'")]),t._v(" event indicates that the stream has new\ninformation: either new data is available or the end of the stream has been\nreached. In the former case, "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read()")])]),t._v(" will return the\navailable data. In the latter case, "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read()")])]),t._v(" will return\n"),s("code",[t._v("null")]),t._v(". For instance, in the following example, "),s("code",[t._v("foo.txt")]),t._v(" is an empty file:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("readable: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("rr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The output of running this script is:")]),t._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ node test.js\nreadable: null\nend\n")])])]),s("p",[t._v("In general, the "),s("code",[t._v("readable.pipe()")]),t._v(" and "),s("code",[t._v("'data'")]),t._v(" event mechanisms are easier to\nunderstand than the "),s("code",[t._v("'readable'")]),t._v(" event. However, handling "),s("code",[t._v("'readable'")]),t._v(" might\nresult in increased throughput.")]),t._v(" "),s("p",[t._v("If both "),s("code",[t._v("'readable'")]),t._v(" and "),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" are used at the same time, "),s("code",[t._v("'readable'")]),t._v("\ntakes precedence in controlling the flow, i.e. "),s("code",[t._v("'data'")]),t._v(" will be emitted\nonly when "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read()")])]),t._v(" is called. The\n"),s("code",[t._v("readableFlowing")]),t._v(" property would become "),s("code",[t._v("false")]),t._v(".\nIf there are "),s("code",[t._v("'data'")]),t._v(" listeners when "),s("code",[t._v("'readable'")]),t._v(" is removed, the stream\nwill start flowing, i.e. "),s("code",[t._v("'data'")]),t._v(" events will be emitted without calling\n"),s("code",[t._v(".resume()")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"event-resume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-resume"}},[t._v("#")]),t._v(" Event: 'resume'")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'resume'")]),t._v(" event is emitted when "),s("a",{attrs:{href:"#stream_readable_resume"}},[s("code",[t._v("stream.resume()")])]),t._v(" is\ncalled and "),s("code",[t._v("readableFlowing")]),t._v(" is not "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"readable-destroy-error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-destroy-error"}},[t._v("#")]),t._v(" readable.destroy([error])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("error")]),t._v(" {Error} Error which will be passed as payload in "),s("code",[t._v("'error'")]),t._v(" event")]),t._v(" "),s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("Destroy the stream. Optionally emit an "),s("code",[t._v("'error'")]),t._v(" event, and emit a "),s("code",[t._v("'close'")]),t._v("\nevent (unless "),s("code",[t._v("emitClose")]),t._v(" is set to "),s("code",[t._v("false")]),t._v("). After this call, the readable\nstream will release any internal resources and subsequent calls to "),s("code",[t._v("push()")]),t._v("\nwill be ignored.\nImplementors should not override this method, but instead implement\n"),s("a",{attrs:{href:"#stream_readable_destroy_err_callback"}},[s("code",[t._v("readable._destroy()")])]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"readable-destroyed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-destroyed"}},[t._v("#")]),t._v(" readable.destroyed")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Is "),s("code",[t._v("true")]),t._v(" after "),s("a",{attrs:{href:"#stream_readable_destroy_error"}},[s("code",[t._v("readable.destroy()")])]),t._v(" has been called.")]),t._v(" "),s("h5",{attrs:{id:"readable-ispaused"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-ispaused"}},[t._v("#")]),t._v(" readable.isPaused()")]),t._v(" "),s("ul",[s("li",[t._v("Returns: {boolean}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.isPaused()")]),t._v(" method returns the current operating state of the\n"),s("code",[t._v("Readable")]),t._v(". This is used primarily by the mechanism that underlies the\n"),s("code",[t._v("readable.pipe()")]),t._v(" method. In most typical cases, there will be no reason to\nuse this method directly.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Readable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPaused")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === false")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pause")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPaused")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === true")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPaused")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// === false")]),t._v("\n")])])]),s("h5",{attrs:{id:"readable-pause"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-pause"}},[t._v("#")]),t._v(" readable.pause()")]),t._v(" "),s("ul",[s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.pause()")]),t._v(" method will cause a stream in flowing mode to stop\nemitting "),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" events, switching out of flowing mode. Any data that\nbecomes available will remain in the internal buffer.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Received ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" bytes of data.")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pause")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'There will be no additional data for 1 second.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Now data will start flowing again.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("readable.pause()")]),t._v(" method has no effect if there is a "),s("code",[t._v("'readable'")]),t._v("\nevent listener.")]),t._v(" "),s("h5",{attrs:{id:"readable-pipe-destination-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-pipe-destination-options"}},[t._v("#")]),t._v(" readable.pipe(destination[, options])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("destination")]),t._v(" {stream.Writable} The destination for writing data")]),t._v(" "),s("li",[s("code",[t._v("options")]),t._v(" {Object} Pipe options\n"),s("ul",[s("li",[s("code",[t._v("end")]),t._v(" {boolean} End the writer when the reader ends. "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("true")]),t._v(".")])])]),t._v(" "),s("li",[t._v("Returns: {stream.Writable} The "),s("em",[t._v("destination")]),t._v(", allowing for a chain of pipes if\nit is a "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" or a "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(" stream")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.pipe()")]),t._v(" method attaches a "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" stream to the "),s("code",[t._v("readable")]),t._v(",\ncausing it to switch automatically into flowing mode and push all of its data\nto the attached "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(". The flow of data will be automatically managed\nso that the destination "),s("code",[t._v("Writable")]),t._v(" stream is not overwhelmed by a faster\n"),s("code",[t._v("Readable")]),t._v(" stream.")]),t._v(" "),s("p",[t._v("The following example pipes all of the data from the "),s("code",[t._v("readable")]),t._v(" into a file\nnamed "),s("code",[t._v("file.txt")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All the data from readable goes into 'file.txt'.")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("It is possible to attach multiple "),s("code",[t._v("Writable")]),t._v(" streams to a single "),s("code",[t._v("Readable")]),t._v("\nstream.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.pipe()")]),t._v(" method returns a reference to the "),s("em",[t._v("destination")]),t._v(" stream\nmaking it possible to set up chains of piped streams:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGzip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file.txt.gz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("By default, "),s("a",{attrs:{href:"#stream_writable_end_chunk_encoding_callback"}},[s("code",[t._v("stream.end()")])]),t._v(" is called on the destination "),s("code",[t._v("Writable")]),t._v("\nstream when the source "),s("code",[t._v("Readable")]),t._v(" stream emits "),s("a",{attrs:{href:"#stream_event_end"}},[s("code",[t._v("'end'")])]),t._v(", so that the\ndestination is no longer writable. To disable this default behavior, the "),s("code",[t._v("end")]),t._v("\noption can be passed as "),s("code",[t._v("false")]),t._v(", causing the destination stream to remain open:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  writer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Goodbye\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("One important caveat is that if the "),s("code",[t._v("Readable")]),t._v(" stream emits an error during\nprocessing, the "),s("code",[t._v("Writable")]),t._v(" destination "),s("em",[t._v("is not closed")]),t._v(" automatically. If an\nerror occurs, it will be necessary to "),s("em",[t._v("manually")]),t._v(" close each stream in order\nto prevent memory leaks.")]),t._v(" "),s("p",[t._v("The "),s("router-link",{attrs:{to:"/node/process.html#process_process_stderr"}},[s("code",[t._v("process.stderr")])]),t._v(" and "),s("router-link",{attrs:{to:"/node/process.html#process_process_stdout"}},[s("code",[t._v("process.stdout")])]),t._v(" "),s("code",[t._v("Writable")]),t._v(" streams are never\nclosed until the Node.js process exits, regardless of the specified options.")],1),t._v(" "),s("h5",{attrs:{id:"readable-read-size"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-read-size"}},[t._v("#")]),t._v(" readable.read([size])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("size")]),t._v(" {number} Optional argument to specify how much data to read.")]),t._v(" "),s("li",[t._v("Returns: {string|Buffer|null|any}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.read()")]),t._v(" method pulls some data out of the internal buffer and\nreturns it. If no data available to be read, "),s("code",[t._v("null")]),t._v(" is returned. By default,\nthe data will be returned as a "),s("code",[t._v("Buffer")]),t._v(" object unless an encoding has been\nspecified using the "),s("code",[t._v("readable.setEncoding()")]),t._v(" method or the stream is operating\nin object mode.")]),t._v(" "),s("p",[t._v("The optional "),s("code",[t._v("size")]),t._v(" argument specifies a specific number of bytes to read. If\n"),s("code",[t._v("size")]),t._v(" bytes are not available to be read, "),s("code",[t._v("null")]),t._v(" will be returned "),s("em",[t._v("unless")]),t._v("\nthe stream has ended, in which case all of the data remaining in the internal\nbuffer will be returned.")]),t._v(" "),s("p",[t._v("If the "),s("code",[t._v("size")]),t._v(" argument is not specified, all of the data contained in the\ninternal buffer will be returned.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.read()")]),t._v(" method should only be called on "),s("code",[t._v("Readable")]),t._v(" streams\noperating in paused mode. In flowing mode, "),s("code",[t._v("readable.read()")]),t._v(" is called\nautomatically until the internal buffer is fully drained.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Received ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" bytes of data.")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("while")]),t._v(" loop is necessary when processing data with\n"),s("code",[t._v("readable.read()")]),t._v(". Only after "),s("code",[t._v("readable.read()")]),t._v(" returns "),s("code",[t._v("null")]),t._v(",\n"),s("a",{attrs:{href:"#stream_event_readable"}},[s("code",[t._v("'readable'")])]),t._v(" will be emitted.")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("Readable")]),t._v(" stream in object mode will always return a single item from\na call to "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("readable.read(size)")])]),t._v(", regardless of the value of the\n"),s("code",[t._v("size")]),t._v(" argument.")]),t._v(" "),s("p",[t._v("If the "),s("code",[t._v("readable.read()")]),t._v(" method returns a chunk of data, a "),s("code",[t._v("'data'")]),t._v(" event will\nalso be emitted.")]),t._v(" "),s("p",[t._v("Calling "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read([size])")])]),t._v(" after the "),s("a",{attrs:{href:"#stream_event_end"}},[s("code",[t._v("'end'")])]),t._v(" event has\nbeen emitted will return "),s("code",[t._v("null")]),t._v(". No runtime error will be raised.")]),t._v(" "),s("h5",{attrs:{id:"readable-readable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-readable"}},[t._v("#")]),t._v(" readable.readable")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Is "),s("code",[t._v("true")]),t._v(" if it is safe to call "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("readable.read()")])]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"readable-readableencoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-readableencoding"}},[t._v("#")]),t._v(" readable.readableEncoding")]),t._v(" "),s("ul",[s("li",[t._v("{null|string}")])]),t._v(" "),s("p",[t._v("Getter for the property "),s("code",[t._v("encoding")]),t._v(" of a given "),s("code",[t._v("Readable")]),t._v(" stream. The "),s("code",[t._v("encoding")]),t._v("\nproperty can be set using the "),s("a",{attrs:{href:"#stream_readable_setencoding_encoding"}},[s("code",[t._v("readable.setEncoding()")])]),t._v(" method.")]),t._v(" "),s("h5",{attrs:{id:"readable-readableended"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-readableended"}},[t._v("#")]),t._v(" readable.readableEnded")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Becomes "),s("code",[t._v("true")]),t._v(" when "),s("a",{attrs:{href:"#stream_event_end"}},[s("code",[t._v("'end'")])]),t._v(" event is emitted.")]),t._v(" "),s("h5",{attrs:{id:"readable-readableflowing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-readableflowing"}},[t._v("#")]),t._v(" readable.readableFlowing")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("This property reflects the current state of a "),s("code",[t._v("Readable")]),t._v(" stream as described\nin the "),s("a",{attrs:{href:"#stream_three_states"}},[t._v("Stream Three States")]),t._v(" section.")]),t._v(" "),s("h5",{attrs:{id:"readable-readablehighwatermark"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-readablehighwatermark"}},[t._v("#")]),t._v(" readable.readableHighWaterMark")]),t._v(" "),s("ul",[s("li",[t._v("{number}")])]),t._v(" "),s("p",[t._v("Returns the value of "),s("code",[t._v("highWaterMark")]),t._v(" passed when constructing this\n"),s("code",[t._v("Readable")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"readable-readablelength"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-readablelength"}},[t._v("#")]),t._v(" readable.readableLength")]),t._v(" "),s("ul",[s("li",[t._v("{number}")])]),t._v(" "),s("p",[t._v("This property contains the number of bytes (or objects) in the queue\nready to be read. The value provides introspection data regarding\nthe status of the "),s("code",[t._v("highWaterMark")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"readable-readableobjectmode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-readableobjectmode"}},[t._v("#")]),t._v(" readable.readableObjectMode")]),t._v(" "),s("ul",[s("li",[t._v("{boolean}")])]),t._v(" "),s("p",[t._v("Getter for the property "),s("code",[t._v("objectMode")]),t._v(" of a given "),s("code",[t._v("Readable")]),t._v(" stream.")]),t._v(" "),s("h5",{attrs:{id:"readable-resume"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-resume"}},[t._v("#")]),t._v(" readable.resume()")]),t._v(" "),s("ul",[s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.resume()")]),t._v(" method causes an explicitly paused "),s("code",[t._v("Readable")]),t._v(" stream to\nresume emitting "),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" events, switching the stream into flowing mode.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.resume()")]),t._v(" method can be used to fully consume the data from a\nstream without actually processing any of that data:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Reached the end, but did not read anything.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("readable.resume()")]),t._v(" method has no effect if there is a "),s("code",[t._v("'readable'")]),t._v("\nevent listener.")]),t._v(" "),s("h5",{attrs:{id:"readable-setencoding-encoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-setencoding-encoding"}},[t._v("#")]),t._v(" readable.setEncoding(encoding)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("encoding")]),t._v(" {string} The encoding to use.")]),t._v(" "),s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.setEncoding()")]),t._v(" method sets the character encoding for\ndata read from the "),s("code",[t._v("Readable")]),t._v(" stream.")]),t._v(" "),s("p",[t._v("By default, no encoding is assigned and stream data will be returned as\n"),s("code",[t._v("Buffer")]),t._v(" objects. Setting an encoding causes the stream data\nto be returned as strings of the specified encoding rather than as "),s("code",[t._v("Buffer")]),t._v("\nobjects. For instance, calling "),s("code",[t._v("readable.setEncoding('utf8')")]),t._v(" will cause the\noutput data to be interpreted as UTF-8 data, and passed as strings. Calling\n"),s("code",[t._v("readable.setEncoding('hex')")]),t._v(" will cause the data to be encoded in hexadecimal\nstring format.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("Readable")]),t._v(" stream will properly handle multi-byte characters delivered\nthrough the stream that would otherwise become improperly decoded if simply\npulled from the stream as "),s("code",[t._v("Buffer")]),t._v(" objects.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEncoding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  assert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Got %d characters of string data:'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"readable-unpipe-destination"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-unpipe-destination"}},[t._v("#")]),t._v(" readable.unpipe([destination])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("destination")]),t._v(" {stream.Writable} Optional specific stream to unpipe")]),t._v(" "),s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.unpipe()")]),t._v(" method detaches a "),s("code",[t._v("Writable")]),t._v(" stream previously attached\nusing the "),s("a",{attrs:{href:"#stream_readable_pipe_destination_options"}},[s("code",[t._v("stream.pipe()")])]),t._v(" method.")]),t._v(" "),s("p",[t._v("If the "),s("code",[t._v("destination")]),t._v(" is not specified, then "),s("em",[t._v("all")]),t._v(" pipes are detached.")]),t._v(" "),s("p",[t._v("If the "),s("code",[t._v("destination")]),t._v(" is specified, but no pipe is set up for it, then\nthe method does nothing.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadableStreamSomehow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All the data from readable goes into 'file.txt',")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// but only for the first second.")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Stop writing to file.txt.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unpipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Manually close the file stream.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"readable-unshift-chunk-encoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-unshift-chunk-encoding"}},[t._v("#")]),t._v(" readable.unshift(chunk[, encoding])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" {Buffer|Uint8Array|string|null|any} Chunk of data to unshift onto the\nread queue. For streams not operating in object mode, "),s("code",[t._v("chunk")]),t._v(" must be a\nstring, "),s("code",[t._v("Buffer")]),t._v(", "),s("code",[t._v("Uint8Array")]),t._v(" or "),s("code",[t._v("null")]),t._v(". For object mode streams, "),s("code",[t._v("chunk")]),t._v("\nmay be any JavaScript value.")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" {string} Encoding of string chunks. Must be a valid\n"),s("code",[t._v("Buffer")]),t._v(" encoding, such as "),s("code",[t._v("'utf8'")]),t._v(" or "),s("code",[t._v("'ascii'")]),t._v(".")])]),t._v(" "),s("p",[t._v("Passing "),s("code",[t._v("chunk")]),t._v(" as "),s("code",[t._v("null")]),t._v(" signals the end of the stream (EOF) and behaves the\nsame as "),s("code",[t._v("readable.push(null)")]),t._v(", after which no more data can be written. The EOF\nsignal is put at the end of the buffer and any buffered data will still be\nflushed.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.unshift()")]),t._v(' method pushes a chunk of data back into the internal\nbuffer. This is useful in certain situations where a stream is being consumed by\ncode that needs to "un-consume" some amount of data that it has optimistically\npulled out of the source, so that the data can be passed on to some other party.')]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("stream.unshift(chunk)")]),t._v(" method cannot be called after the "),s("a",{attrs:{href:"#stream_event_end"}},[s("code",[t._v("'end'")])]),t._v(" event\nhas been emitted or a runtime error will be thrown.")]),t._v(" "),s("p",[t._v("Developers using "),s("code",[t._v("stream.unshift()")]),t._v(" often should consider switching to\nuse of a "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(" stream instead. See the "),s("a",{attrs:{href:"#stream_api_for_stream_implementers"}},[t._v("API for Stream Implementers")]),t._v("\nsection for more information.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pull off a header delimited by \\n\\n.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use unshift() if we get too much.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Call the callback with (error, header, stream).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" StringDecoder "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string_decoder'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onReadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" decoder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringDecoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" header "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onReadable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decoder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\n\\n/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Found the header boundary.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" split "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\n\\n/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        header "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" remaining "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("remaining"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Remove the 'readable' listener before unshifting.")]),t._v("\n        stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onReadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now the body of the message can be read from the stream.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Still reading the header.")]),t._v("\n        header "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Unlike "),s("a",{attrs:{href:"#stream_readable_push_chunk_encoding"}},[s("code",[t._v("stream.push(chunk)")])]),t._v(", "),s("code",[t._v("stream.unshift(chunk)")]),t._v(" will not\nend the reading process by resetting the internal reading state of the stream.\nThis can cause unexpected results if "),s("code",[t._v("readable.unshift()")]),t._v(" is called during a\nread (i.e. from within a "),s("a",{attrs:{href:"#stream_readable_read_size_1"}},[s("code",[t._v("stream._read()")])]),t._v(" implementation on a\ncustom stream). Following the call to "),s("code",[t._v("readable.unshift()")]),t._v(" with an immediate\n"),s("a",{attrs:{href:"#stream_readable_push_chunk_encoding"}},[s("code",[t._v("stream.push('')")])]),t._v(" will reset the reading state appropriately,\nhowever it is best to simply avoid calling "),s("code",[t._v("readable.unshift()")]),t._v(" while in the\nprocess of performing a read.")]),t._v(" "),s("h5",{attrs:{id:"readable-wrap-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-wrap-stream"}},[t._v("#")]),t._v(" readable.wrap(stream)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("stream")]),t._v(' {Stream} An "old style" readable stream')]),t._v(" "),s("li",[t._v("Returns: {this}")])]),t._v(" "),s("p",[t._v("Prior to Node.js 0.10, streams did not implement the entire "),s("code",[t._v("stream")]),t._v(" module API\nas it is currently defined. (See "),s("a",{attrs:{href:"#stream_compatibility_with_older_node_js_versions"}},[t._v("Compatibility")]),t._v(" for more information.)")]),t._v(" "),s("p",[t._v("When using an older Node.js library that emits "),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" events and has a\n"),s("a",{attrs:{href:"#stream_readable_pause"}},[s("code",[t._v("stream.pause()")])]),t._v(" method that is advisory only, the\n"),s("code",[t._v("readable.wrap()")]),t._v(" method can be used to create a "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" stream that uses\nthe old stream as its data source.")]),t._v(" "),s("p",[t._v("It will rarely be necessary to use "),s("code",[t._v("readable.wrap()")]),t._v(" but the method has been\nprovided as a convenience for interacting with older Node.js applications and\nlibraries.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" OldReader "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./old-api-module.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Readable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oreader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OldReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myReader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Readable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oreader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmyReader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  myReader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// etc.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"readable-symbol-asynciterator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-symbol-asynciterator"}},[t._v("#")]),t._v(" readable[Symbol.asyncIterator]()")]),t._v(" "),s("ul",[s("li",[t._v("Returns: {AsyncIterator} to fully consume the stream.")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("readable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEncoding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" chunk "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("If the loop terminates with a "),s("code",[t._v("break")]),t._v(" or a "),s("code",[t._v("throw")]),t._v(", the stream will be\ndestroyed. In other terms, iterating over a stream will consume the stream\nfully. The stream will be read in chunks of size equal to the "),s("code",[t._v("highWaterMark")]),t._v("\noption. In the code example above, data will be in a single chunk if the file\nhas less then 64kb of data because no "),s("code",[t._v("highWaterMark")]),t._v(" option is provided to\n"),s("router-link",{attrs:{to:"/node/fs.html#fs_fs_createreadstream_path_options"}},[s("code",[t._v("fs.createReadStream()")])]),t._v(".")],1),t._v(" "),s("h3",{attrs:{id:"duplex-and-transform-streams"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#duplex-and-transform-streams"}},[t._v("#")]),t._v(" Duplex and Transform Streams")]),t._v(" "),s("h4",{attrs:{id:"class-stream-duplex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-stream-duplex"}},[t._v("#")]),t._v(" Class: stream.Duplex")]),t._v(" "),s("p",[t._v("Duplex streams are streams that implement both the "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" and\n"),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" interfaces.")]),t._v(" "),s("p",[t._v("Examples of "),s("code",[t._v("Duplex")]),t._v(" streams include:")]),t._v(" "),s("ul",[s("li",[s("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[t._v("TCP sockets")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/zlib.html"}},[t._v("zlib streams")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/crypto.html"}},[t._v("crypto streams")])],1)]),t._v(" "),s("h4",{attrs:{id:"class-stream-transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-stream-transform"}},[t._v("#")]),t._v(" Class: stream.Transform")]),t._v(" "),s("p",[t._v("Transform streams are "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" streams where the output is in some way\nrelated to the input. Like all "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" streams, "),s("code",[t._v("Transform")]),t._v(" streams\nimplement both the "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" and "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" interfaces.")]),t._v(" "),s("p",[t._v("Examples of "),s("code",[t._v("Transform")]),t._v(" streams include:")]),t._v(" "),s("ul",[s("li",[s("router-link",{attrs:{to:"/node/zlib.html"}},[t._v("zlib streams")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/crypto.html"}},[t._v("crypto streams")])],1)]),t._v(" "),s("h5",{attrs:{id:"transform-destroy-error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform-destroy-error"}},[t._v("#")]),t._v(" transform.destroy([error])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("error")]),t._v(" {Error}")])]),t._v(" "),s("p",[t._v("Destroy the stream, and optionally emit an "),s("code",[t._v("'error'")]),t._v(" event. After this call, the\ntransform stream would release any internal resources.\nImplementors should not override this method, but instead implement\n"),s("a",{attrs:{href:"#stream_readable_destroy_err_callback"}},[s("code",[t._v("readable._destroy()")])]),t._v(".\nThe default implementation of "),s("code",[t._v("_destroy()")]),t._v(" for "),s("code",[t._v("Transform")]),t._v(" also emit "),s("code",[t._v("'close'")]),t._v("\nunless "),s("code",[t._v("emitClose")]),t._v(" is set in false.")]),t._v(" "),s("h3",{attrs:{id:"stream-finished-stream-options-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream-finished-stream-options-callback"}},[t._v("#")]),t._v(" stream.finished(stream[, options], callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("stream")]),t._v(" {Stream} A readable and/or writable stream.")]),t._v(" "),s("li",[s("code",[t._v("options")]),t._v(" {Object}\n"),s("ul",[s("li",[s("code",[t._v("error")]),t._v(" {boolean} If set to "),s("code",[t._v("false")]),t._v(", then a call to "),s("code",[t._v("emit('error', err)")]),t._v(" is\nnot treated as finished. "),s("strong",[t._v("Default")]),t._v(": "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("readable")]),t._v(" {boolean} When set to "),s("code",[t._v("false")]),t._v(", the callback will be called when\nthe stream ends even though the stream might still be readable.\n"),s("strong",[t._v("Default")]),t._v(": "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("writable")]),t._v(" {boolean} When set to "),s("code",[t._v("false")]),t._v(", the callback will be called when\nthe stream ends even though the stream might still be writable.\n"),s("strong",[t._v("Default")]),t._v(": "),s("code",[t._v("true")]),t._v(".")])])]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} A callback function that takes an optional error\nargument.")]),t._v(" "),s("li",[t._v("Returns: {Function} A cleanup function which removes all registered\nlisteners.")])]),t._v(" "),s("p",[t._v("A function to get notified when a stream is no longer readable, writable\nor has experienced an error or a premature close event.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" finished "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'archive.tar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finished")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Stream failed.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Stream is done reading.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nrs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Drain the stream.")]),t._v("\n")])])]),s("p",[t._v("Especially useful in error handling scenarios where a stream is destroyed\nprematurely (like an aborted HTTP request), and will not emit "),s("code",[t._v("'end'")]),t._v("\nor "),s("code",[t._v("'finish'")]),t._v(".")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("finished")]),t._v(" API is promisify-able as well;")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" finished "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'archive.tar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finished")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Stream is done reading.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Drain the stream.")]),t._v("\n")])])]),s("p",[s("code",[t._v("stream.finished()")]),t._v(" leaves dangling event listeners (in particular\n"),s("code",[t._v("'error'")]),t._v(", "),s("code",[t._v("'end'")]),t._v(", "),s("code",[t._v("'finish'")]),t._v(" and "),s("code",[t._v("'close'")]),t._v(") after "),s("code",[t._v("callback")]),t._v(" has been\ninvoked. The reason for this is so that unexpected "),s("code",[t._v("'error'")]),t._v(" events (due to\nincorrect stream implementations) do not cause unexpected crashes.\nIf this is unwanted behavior then the returned cleanup function needs to be\ninvoked in the callback:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cleanup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finished")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cleanup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"stream-pipeline-streams-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream-pipeline-streams-callback"}},[t._v("#")]),t._v(" stream.pipeline(...streams, callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("...streams")]),t._v(" {Stream} Two or more streams to pipe between.")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} Called when the pipeline is fully done.\n"),s("ul",[s("li",[s("code",[t._v("err")]),t._v(" {Error}")])])])]),t._v(" "),s("p",[t._v("A module method to pipe between streams forwarding errors and properly cleaning\nup and provide a callback when the pipeline is complete.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" pipeline "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zlib "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zlib'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use the pipeline API to easily pipe a series of streams")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// together and get notified when the pipeline is fully done.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A pipeline to gzip a potentially huge tar file efficiently:")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipeline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'archive.tar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  zlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGzip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'archive.tar.gz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pipeline failed.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pipeline succeeded.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("pipeline")]),t._v(" API is promisify-able as well:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pipeline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pipeline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipeline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'archive.tar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    zlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGzip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'archive.tar.gz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pipeline succeeded.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("stream.pipeline()")]),t._v(" will call "),s("code",[t._v("stream.destroy(err)")]),t._v(" on all streams except:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Readable")]),t._v(" streams which have emitted "),s("code",[t._v("'end'")]),t._v(" or "),s("code",[t._v("'close'")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("Writable")]),t._v(" streams which have emitted "),s("code",[t._v("'finish'")]),t._v(" or "),s("code",[t._v("'close'")]),t._v(".")])]),t._v(" "),s("p",[s("code",[t._v("stream.pipeline()")]),t._v(" leaves dangling event listeners on the streams\nafter the "),s("code",[t._v("callback")]),t._v(" has been invoked. In the case of reuse of streams after\nfailure, this can cause event listener leaks and swallowed errors.")]),t._v(" "),s("h3",{attrs:{id:"stream-readable-from-iterable-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream-readable-from-iterable-options"}},[t._v("#")]),t._v(" stream.Readable.from(iterable, [options])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("iterable")]),t._v(" {Iterable} Object implementing the "),s("code",[t._v("Symbol.asyncIterator")]),t._v(" or\n"),s("code",[t._v("Symbol.iterator")]),t._v(" iterable protocol.")]),t._v(" "),s("li",[s("code",[t._v("options")]),t._v(" {Object} Options provided to "),s("code",[t._v("new stream.Readable([options])")]),t._v(".\nBy default, "),s("code",[t._v("Readable.from()")]),t._v(" will set "),s("code",[t._v("options.objectMode")]),t._v(" to "),s("code",[t._v("true")]),t._v(", unless\nthis is explicitly opted out by setting "),s("code",[t._v("options.objectMode")]),t._v(" to "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("li",[t._v("Returns: {stream.Readable}")])]),t._v(" "),s("p",[t._v("A utility method for creating Readable Streams out of iterators.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Readable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'streams'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"api-for-stream-implementers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-for-stream-implementers"}},[t._v("#")]),t._v(" API for Stream Implementers")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("stream")]),t._v(" module API has been designed to make it possible to easily\nimplement streams using JavaScript's prototypal inheritance model.")]),t._v(" "),s("p",[t._v("First, a stream developer would declare a new JavaScript class that extends one\nof the four basic stream classes ("),s("code",[t._v("stream.Writable")]),t._v(", "),s("code",[t._v("stream.Readable")]),t._v(",\n"),s("code",[t._v("stream.Duplex")]),t._v(", or "),s("code",[t._v("stream.Transform")]),t._v("), making sure they call the appropriate\nparent class constructor:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyWritable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" highWaterMark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("options "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      highWaterMark"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      autoDestroy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      emitClose"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("When extending streams, keep in mind what options the user\ncan and should provide before forwarding these to the base constructor. For\nexample, if the implementation makes assumptions in regard to the\n"),s("code",[t._v("autoDestroy")]),t._v(" and "),s("code",[t._v("emitClose")]),t._v(" options, do not allow the\nuser to override these. Be explicit about what\noptions are forwarded instead of implicitly forwarding all options.")]),t._v(" "),s("p",[t._v("The new stream class must then implement one or more specific methods, depending\non the type of stream being created, as detailed in the chart below:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Use-case")]),t._v(" "),s("th",[t._v("Class")]),t._v(" "),s("th",[t._v("Method(s) to implement")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Reading only")]),t._v(" "),s("td",[s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])])]),t._v(" "),s("td",[s("a",{attrs:{href:"#stream_readable_read_size_1"}},[s("code",[t._v("_read()")])])])]),t._v(" "),s("tr",[s("td",[t._v("Writing only")]),t._v(" "),s("td",[s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])])]),t._v(" "),s("td",[s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback_1"}},[s("code",[t._v("_write()")])]),t._v(", "),s("a",{attrs:{href:"#stream_writable_writev_chunks_callback"}},[s("code",[t._v("_writev()")])]),t._v(", "),s("a",{attrs:{href:"#stream_writable_final_callback"}},[s("code",[t._v("_final()")])])])]),t._v(" "),s("tr",[s("td",[t._v("Reading and writing")]),t._v(" "),s("td",[s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])])]),t._v(" "),s("td",[s("a",{attrs:{href:"#stream_readable_read_size_1"}},[s("code",[t._v("_read()")])]),t._v(", "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback_1"}},[s("code",[t._v("_write()")])]),t._v(", "),s("a",{attrs:{href:"#stream_writable_writev_chunks_callback"}},[s("code",[t._v("_writev()")])]),t._v(", "),s("a",{attrs:{href:"#stream_writable_final_callback"}},[s("code",[t._v("_final()")])])])]),t._v(" "),s("tr",[s("td",[t._v("Operate on written data, then read the result")]),t._v(" "),s("td",[s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])])]),t._v(" "),s("td",[s("a",{attrs:{href:"#stream_transform_transform_chunk_encoding_callback"}},[s("code",[t._v("_transform()")])]),t._v(", "),s("a",{attrs:{href:"#stream_transform_flush_callback"}},[s("code",[t._v("_flush()")])]),t._v(", "),s("a",{attrs:{href:"#stream_writable_final_callback"}},[s("code",[t._v("_final()")])])])])])]),t._v(" "),s("p",[t._v("The implementation code for a stream should "),s("em",[t._v("never")]),t._v(' call the "public" methods\nof a stream that are intended for use by consumers (as described in the\n'),s("a",{attrs:{href:"#stream_api_for_stream_consumers"}},[t._v("API for Stream Consumers")]),t._v(" section). Doing so may lead to adverse side effects\nin application code consuming the stream.")]),t._v(" "),s("h3",{attrs:{id:"simplified-construction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simplified-construction"}},[t._v("#")]),t._v(" Simplified Construction")]),t._v(" "),s("p",[t._v("For many simple cases, it is possible to construct a stream without relying on\ninheritance. This can be accomplished by directly creating instances of the\n"),s("code",[t._v("stream.Writable")]),t._v(", "),s("code",[t._v("stream.Readable")]),t._v(", "),s("code",[t._v("stream.Duplex")]),t._v(" or "),s("code",[t._v("stream.Transform")]),t._v("\nobjects and passing appropriate methods as constructor options.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myWritable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"implementing-a-writable-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementing-a-writable-stream"}},[t._v("#")]),t._v(" Implementing a Writable Stream")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("stream.Writable")]),t._v(" class is extended to implement a "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" stream.")]),t._v(" "),s("p",[t._v("Custom "),s("code",[t._v("Writable")]),t._v(" streams "),s("em",[t._v("must")]),t._v(" call the "),s("code",[t._v("new stream.Writable([options])")]),t._v("\nconstructor and implement the "),s("code",[t._v("writable._write()")]),t._v(" and/or "),s("code",[t._v("writable._writev()")]),t._v("\nmethod.")]),t._v(" "),s("h4",{attrs:{id:"constructor-new-stream-writable-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor-new-stream-writable-options"}},[t._v("#")]),t._v(" Constructor: new stream.Writable([options])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("options")]),t._v(" {Object}\n"),s("ul",[s("li",[s("code",[t._v("highWaterMark")]),t._v(" {number} Buffer level when\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(" starts returning "),s("code",[t._v("false")]),t._v(". "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("16384")]),t._v(" (16kb), or "),s("code",[t._v("16")]),t._v(" for "),s("code",[t._v("objectMode")]),t._v(" streams.")]),t._v(" "),s("li",[s("code",[t._v("decodeStrings")]),t._v(" {boolean} Whether to encode "),s("code",[t._v("string")]),t._v("s passed to\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(" to "),s("code",[t._v("Buffer")]),t._v("s (with the encoding\nspecified in the "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(" call) before passing\nthem to "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback_1"}},[s("code",[t._v("stream._write()")])]),t._v(". Other types of data are not\nconverted (i.e. "),s("code",[t._v("Buffer")]),t._v("s are not decoded into "),s("code",[t._v("string")]),t._v("s). Setting to\nfalse will prevent "),s("code",[t._v("string")]),t._v("s from being converted.  "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("defaultEncoding")]),t._v(" {string} The default encoding that is used when no\nencoding is specified as an argument to "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(".\n"),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("'utf8'")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("objectMode")]),t._v(" {boolean} Whether or not the\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write(anyObj)")])]),t._v(" is a valid operation. When set,\nit becomes possible to write JavaScript values other than string,\n"),s("code",[t._v("Buffer")]),t._v(" or "),s("code",[t._v("Uint8Array")]),t._v(" if supported by the stream implementation.\n"),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("emitClose")]),t._v(" {boolean} Whether or not the stream should emit "),s("code",[t._v("'close'")]),t._v("\nafter it has been destroyed. "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("write")]),t._v(" {Function} Implementation for the\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback_1"}},[s("code",[t._v("stream._write()")])]),t._v(" method.")]),t._v(" "),s("li",[s("code",[t._v("writev")]),t._v(" {Function} Implementation for the\n"),s("a",{attrs:{href:"#stream_writable_writev_chunks_callback"}},[s("code",[t._v("stream._writev()")])]),t._v(" method.")]),t._v(" "),s("li",[s("code",[t._v("destroy")]),t._v(" {Function} Implementation for the\n"),s("a",{attrs:{href:"#stream_writable_destroy_err_callback"}},[s("code",[t._v("stream._destroy()")])]),t._v(" method.")]),t._v(" "),s("li",[s("code",[t._v("final")]),t._v(" {Function} Implementation for the\n"),s("a",{attrs:{href:"#stream_writable_final_callback"}},[s("code",[t._v("stream._final()")])]),t._v(" method.")]),t._v(" "),s("li",[s("code",[t._v("autoDestroy")]),t._v(" {boolean} Whether this stream should automatically call\n"),s("code",[t._v(".destroy()")]),t._v(" on itself after ending. "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("false")]),t._v(".")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyWritable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Calls the stream.Writable() constructor.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Or, when using pre-ES6 style constructors:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" util "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'util'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyWritable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyWritable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyWritable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Writable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nutil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyWritable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Or, using the Simplified Constructor approach:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myWritable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writev")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"writable-write-chunk-encoding-callback-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-write-chunk-encoding-callback-2"}},[t._v("#")]),t._v(" writable._write(chunk, encoding, callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" {Buffer|string|any} The "),s("code",[t._v("Buffer")]),t._v(" to be written, converted from the\n"),s("code",[t._v("string")]),t._v(" passed to "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(". If the stream's\n"),s("code",[t._v("decodeStrings")]),t._v(" option is "),s("code",[t._v("false")]),t._v(" or the stream is operating in object mode,\nthe chunk will not be converted & will be whatever was passed to\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" {string} If the chunk is a string, then "),s("code",[t._v("encoding")]),t._v(" is the\ncharacter encoding of that string. If chunk is a "),s("code",[t._v("Buffer")]),t._v(", or if the\nstream is operating in object mode, "),s("code",[t._v("encoding")]),t._v(" may be ignored.")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} Call this function (optionally with an error\nargument) when processing is complete for the supplied chunk.")])]),t._v(" "),s("p",[t._v("All "),s("code",[t._v("Writable")]),t._v(" stream implementations must provide a\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback_1"}},[s("code",[t._v("writable._write()")])]),t._v(" and/or\n"),s("a",{attrs:{href:"#stream_writable_writev_chunks_callback"}},[s("code",[t._v("writable._writev()")])]),t._v(" method to send data to the underlying\nresource.")]),t._v(" "),s("p",[s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(" streams provide their own implementation of the\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback_1"}},[s("code",[t._v("writable._write()")])]),t._v(".")]),t._v(" "),s("p",[t._v("This function MUST NOT be called by application code directly. It should be\nimplemented by child classes, and called by the internal "),s("code",[t._v("Writable")]),t._v(" class\nmethods only.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("callback")]),t._v(" method must be called to signal either that the write completed\nsuccessfully or failed with an error. The first argument passed to the\n"),s("code",[t._v("callback")]),t._v(" must be the "),s("code",[t._v("Error")]),t._v(" object if the call failed or "),s("code",[t._v("null")]),t._v(" if the\nwrite succeeded.")]),t._v(" "),s("p",[t._v("All calls to "),s("code",[t._v("writable.write()")]),t._v(" that occur between the time "),s("code",[t._v("writable._write()")]),t._v("\nis called and the "),s("code",[t._v("callback")]),t._v(" is called will cause the written data to be\nbuffered. When the "),s("code",[t._v("callback")]),t._v(" is invoked, the stream might emit a "),s("a",{attrs:{href:"#stream_event_drain"}},[s("code",[t._v("'drain'")])]),t._v("\nevent. If a stream implementation is capable of processing multiple chunks of\ndata at once, the "),s("code",[t._v("writable._writev()")]),t._v(" method should be implemented.")]),t._v(" "),s("p",[t._v("If the "),s("code",[t._v("decodeStrings")]),t._v(" property is explicitly set to "),s("code",[t._v("false")]),t._v(" in the constructor\noptions, then "),s("code",[t._v("chunk")]),t._v(" will remain the same object that is passed to "),s("code",[t._v(".write()")]),t._v(",\nand may be a string rather than a "),s("code",[t._v("Buffer")]),t._v(". This is to support implementations\nthat have an optimized handling for certain string data encodings. In that case,\nthe "),s("code",[t._v("encoding")]),t._v(" argument will indicate the character encoding of the string.\nOtherwise, the "),s("code",[t._v("encoding")]),t._v(" argument can be safely ignored.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("writable._write()")]),t._v(" method is prefixed with an underscore because it is\ninternal to the class that defines it, and should never be called directly by\nuser programs.")]),t._v(" "),s("h4",{attrs:{id:"writable-writev-chunks-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-writev-chunks-callback"}},[t._v("#")]),t._v(" writable._writev(chunks, callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunks")]),t._v(" {Object[]} The chunks to be written. Each chunk has following\nformat: "),s("code",[t._v("{ chunk: ..., encoding: ... }")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} A callback function (optionally with an error\nargument) to be invoked when processing is complete for the supplied chunks.")])]),t._v(" "),s("p",[t._v("This function MUST NOT be called by application code directly. It should be\nimplemented by child classes, and called by the internal "),s("code",[t._v("Writable")]),t._v(" class\nmethods only.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("writable._writev()")]),t._v(" method may be implemented in addition or alternatively\nto "),s("code",[t._v("writable._write()")]),t._v(" in stream implementations that are capable of processing\nmultiple chunks of data at once. If implemented, the method will be called with\nall chunks of data currently buffered in the write queue.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("writable._writev()")]),t._v(" method is prefixed with an underscore because it is\ninternal to the class that defines it, and should never be called directly by\nuser programs.")]),t._v(" "),s("h4",{attrs:{id:"writable-destroy-err-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-destroy-err-callback"}},[t._v("#")]),t._v(" writable._destroy(err, callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("err")]),t._v(" {Error} A possible error.")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} A callback function that takes an optional error\nargument.")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("_destroy()")]),t._v(" method is called by "),s("a",{attrs:{href:"#stream_writable_destroy_error"}},[s("code",[t._v("writable.destroy()")])]),t._v(".\nIt can be overridden by child classes but it "),s("strong",[t._v("must not")]),t._v(" be called directly.")]),t._v(" "),s("h4",{attrs:{id:"writable-final-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writable-final-callback"}},[t._v("#")]),t._v(" writable._final(callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("callback")]),t._v(" {Function} Call this function (optionally with an error\nargument) when finished writing any remaining data.")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("_final()")]),t._v(" method "),s("strong",[t._v("must not")]),t._v(" be called directly. It may be implemented\nby child classes, and if so, will be called by the internal "),s("code",[t._v("Writable")]),t._v("\nclass methods only.")]),t._v(" "),s("p",[t._v("This optional function will be called before the stream closes, delaying the\n"),s("code",[t._v("'finish'")]),t._v(" event until "),s("code",[t._v("callback")]),t._v(" is called. This is useful to close resources\nor write buffered data before a stream ends.")]),t._v(" "),s("h4",{attrs:{id:"errors-while-writing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#errors-while-writing"}},[t._v("#")]),t._v(" Errors While Writing")]),t._v(" "),s("p",[t._v("Errors occurring during the processing of the "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback_1"}},[s("code",[t._v("writable._write()")])]),t._v(",\n"),s("a",{attrs:{href:"#stream_writable_writev_chunks_callback"}},[s("code",[t._v("writable._writev()")])]),t._v(" and "),s("a",{attrs:{href:"#stream_writable_final_callback"}},[s("code",[t._v("writable._final()")])]),t._v(" methods must be propagated\nby invoking the callback and passing the error as the first argument.\nThrowing an "),s("code",[t._v("Error")]),t._v(" from within these methods or manually emitting an "),s("code",[t._v("'error'")]),t._v("\nevent results in undefined behavior.")]),t._v(" "),s("p",[t._v("If a "),s("code",[t._v("Readable")]),t._v(" stream pipes into a "),s("code",[t._v("Writable")]),t._v(" stream when "),s("code",[t._v("Writable")]),t._v(" emits an\nerror, the "),s("code",[t._v("Readable")]),t._v(" stream will be unpiped.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myWritable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chunk is invalid'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"an-example-writable-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#an-example-writable-stream"}},[t._v("#")]),t._v(" An Example Writable Stream")]),t._v(" "),s("p",[t._v("The following illustrates a rather simplistic (and somewhat pointless) custom\n"),s("code",[t._v("Writable")]),t._v(" stream implementation. While this specific "),s("code",[t._v("Writable")]),t._v(" stream instance\nis not of any real particular usefulness, the example illustrates each of the\nrequired elements of a custom "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" stream instance:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyWritable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chunk is invalid'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"decoding-buffers-in-a-writable-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decoding-buffers-in-a-writable-stream"}},[t._v("#")]),t._v(" Decoding buffers in a Writable Stream")]),t._v(" "),s("p",[t._v("Decoding buffers is a common task, for instance, when using transformers whose\ninput is a string. This is not a trivial process when using multi-byte\ncharacters encoding, such as UTF-8. The following example shows how to decode\nmulti-byte strings using "),s("code",[t._v("StringDecoder")]),t._v(" and "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Writable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" StringDecoder "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string_decoder'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringWritable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Writable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_decoder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringDecoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultEncoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'buffer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      chunk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_decoder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_final")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_decoder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" euro "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xE2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x82")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xAC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringWritable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'currency: '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("euro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("euro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// currency: €")]),t._v("\n")])])]),s("h3",{attrs:{id:"implementing-a-readable-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementing-a-readable-stream"}},[t._v("#")]),t._v(" Implementing a Readable Stream")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("stream.Readable")]),t._v(" class is extended to implement a "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" stream.")]),t._v(" "),s("p",[t._v("Custom "),s("code",[t._v("Readable")]),t._v(" streams "),s("em",[t._v("must")]),t._v(" call the "),s("code",[t._v("new stream.Readable([options])")]),t._v("\nconstructor and implement the "),s("code",[t._v("readable._read()")]),t._v(" method.")]),t._v(" "),s("h4",{attrs:{id:"new-stream-readable-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-stream-readable-options"}},[t._v("#")]),t._v(" new stream.Readable([options])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("options")]),t._v(" {Object}\n"),s("ul",[s("li",[s("code",[t._v("highWaterMark")]),t._v(" {number} The maximum "),s("a",{attrs:{href:"#stream_highwatermark_discrepancy_after_calling_readable_setencoding"}},[t._v("number of bytes")]),t._v(" to store\nin the internal buffer before ceasing to read from the underlying resource.\n"),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("16384")]),t._v(" (16kb), or "),s("code",[t._v("16")]),t._v(" for "),s("code",[t._v("objectMode")]),t._v(" streams.")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" {string} If specified, then buffers will be decoded to\nstrings using the specified encoding. "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("null")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("objectMode")]),t._v(" {boolean} Whether this stream should behave\nas a stream of objects. Meaning that "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read(n)")])]),t._v(" returns\na single value instead of a "),s("code",[t._v("Buffer")]),t._v(" of size "),s("code",[t._v("n")]),t._v(". "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("emitClose")]),t._v(" {boolean} Whether or not the stream should emit "),s("code",[t._v("'close'")]),t._v("\nafter it has been destroyed. "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("read")]),t._v(" {Function} Implementation for the "),s("a",{attrs:{href:"#stream_readable_read_size_1"}},[s("code",[t._v("stream._read()")])]),t._v("\nmethod.")]),t._v(" "),s("li",[s("code",[t._v("destroy")]),t._v(" {Function} Implementation for the\n"),s("a",{attrs:{href:"#stream_readable_destroy_err_callback"}},[s("code",[t._v("stream._destroy()")])]),t._v(" method.")]),t._v(" "),s("li",[s("code",[t._v("autoDestroy")]),t._v(" {boolean} Whether this stream should automatically call\n"),s("code",[t._v(".destroy()")]),t._v(" on itself after ending. "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("false")]),t._v(".")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Readable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyReadable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Readable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Calls the stream.Readable(options) constructor.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Or, when using pre-ES6 style constructors:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Readable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" util "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'util'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyReadable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyReadable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyReadable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Readable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nutil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyReadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Or, using the Simplified Constructor approach:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Readable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myReadable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Readable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"readable-read-size-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-read-size-2"}},[t._v("#")]),t._v(" readable._read(size)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("size")]),t._v(" {number} Number of bytes to read asynchronously")])]),t._v(" "),s("p",[t._v("This function MUST NOT be called by application code directly. It should be\nimplemented by child classes, and called by the internal "),s("code",[t._v("Readable")]),t._v(" class\nmethods only.")]),t._v(" "),s("p",[t._v("All "),s("code",[t._v("Readable")]),t._v(" stream implementations must provide an implementation of the\n"),s("code",[t._v("readable._read()")]),t._v(" method to fetch data from the underlying resource.")]),t._v(" "),s("p",[t._v("When "),s("code",[t._v("readable._read()")]),t._v(" is called, if data is available from the resource, the\nimplementation should begin pushing that data into the read queue using the\n"),s("a",{attrs:{href:"#stream_readable_push_chunk_encoding"}},[s("code",[t._v("this.push(dataChunk)")])]),t._v(" method. "),s("code",[t._v("_read()")]),t._v(" should continue reading\nfrom the resource and pushing data until "),s("code",[t._v("readable.push()")]),t._v(" returns "),s("code",[t._v("false")]),t._v(". Only\nwhen "),s("code",[t._v("_read()")]),t._v(" is called again after it has stopped should it resume pushing\nadditional data onto the queue.")]),t._v(" "),s("p",[t._v("Once the "),s("code",[t._v("readable._read()")]),t._v(" method has been called, it will not be called again\nuntil more data is pushed through the "),s("a",{attrs:{href:"#stream_readable_push_chunk_encoding"}},[s("code",[t._v("readable.push()")])]),t._v(" method.\nEmpty data such as empty buffers and strings will not cause "),s("code",[t._v("readable._read()")]),t._v("\nto be called.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("size")]),t._v(' argument is advisory. For implementations where a "read" is a\nsingle operation that returns data can use the '),s("code",[t._v("size")]),t._v(' argument to determine how\nmuch data to fetch. Other implementations may ignore this argument and simply\nprovide data whenever it becomes available. There is no need to "wait" until\n'),s("code",[t._v("size")]),t._v(" bytes are available before calling "),s("a",{attrs:{href:"#stream_readable_push_chunk_encoding"}},[s("code",[t._v("stream.push(chunk)")])]),t._v(".")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable._read()")]),t._v(" method is prefixed with an underscore because it is\ninternal to the class that defines it, and should never be called directly by\nuser programs.")]),t._v(" "),s("h4",{attrs:{id:"readable-destroy-err-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-destroy-err-callback"}},[t._v("#")]),t._v(" readable._destroy(err, callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("err")]),t._v(" {Error} A possible error.")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} A callback function that takes an optional error\nargument.")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("_destroy()")]),t._v(" method is called by "),s("a",{attrs:{href:"#stream_readable_destroy_error"}},[s("code",[t._v("readable.destroy()")])]),t._v(".\nIt can be overridden by child classes but it "),s("strong",[t._v("must not")]),t._v(" be called directly.")]),t._v(" "),s("h4",{attrs:{id:"readable-push-chunk-encoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-push-chunk-encoding"}},[t._v("#")]),t._v(" readable.push(chunk[, encoding])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" {Buffer|Uint8Array|string|null|any} Chunk of data to push into the\nread queue. For streams not operating in object mode, "),s("code",[t._v("chunk")]),t._v(" must be a\nstring, "),s("code",[t._v("Buffer")]),t._v(" or "),s("code",[t._v("Uint8Array")]),t._v(". For object mode streams, "),s("code",[t._v("chunk")]),t._v(" may be\nany JavaScript value.")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" {string} Encoding of string chunks. Must be a valid\n"),s("code",[t._v("Buffer")]),t._v(" encoding, such as "),s("code",[t._v("'utf8'")]),t._v(" or "),s("code",[t._v("'ascii'")]),t._v(".")]),t._v(" "),s("li",[t._v("Returns: {boolean} "),s("code",[t._v("true")]),t._v(" if additional chunks of data may continue to be\npushed; "),s("code",[t._v("false")]),t._v(" otherwise.")])]),t._v(" "),s("p",[t._v("When "),s("code",[t._v("chunk")]),t._v(" is a "),s("code",[t._v("Buffer")]),t._v(", "),s("code",[t._v("Uint8Array")]),t._v(" or "),s("code",[t._v("string")]),t._v(", the "),s("code",[t._v("chunk")]),t._v(" of data will\nbe added to the internal queue for users of the stream to consume.\nPassing "),s("code",[t._v("chunk")]),t._v(" as "),s("code",[t._v("null")]),t._v(" signals the end of the stream (EOF), after which no\nmore data can be written.")]),t._v(" "),s("p",[t._v("When the "),s("code",[t._v("Readable")]),t._v(" is operating in paused mode, the data added with\n"),s("code",[t._v("readable.push()")]),t._v(" can be read out by calling the\n"),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("readable.read()")])]),t._v(" method when the "),s("a",{attrs:{href:"#stream_event_readable"}},[s("code",[t._v("'readable'")])]),t._v(" event is\nemitted.")]),t._v(" "),s("p",[t._v("When the "),s("code",[t._v("Readable")]),t._v(" is operating in flowing mode, the data added with\n"),s("code",[t._v("readable.push()")]),t._v(" will be delivered by emitting a "),s("code",[t._v("'data'")]),t._v(" event.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("readable.push()")]),t._v(" method is designed to be as flexible as possible. For\nexample, when wrapping a lower-level source that provides some form of\npause/resume mechanism, and a data callback, the low-level source can be wrapped\nby the custom "),s("code",[t._v("Readable")]),t._v(" instance:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `_source` is an object with readStop() and readStart() methods,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and an `ondata` member that gets called when it has data, and")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// an `onend` member that gets called when the data is over.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SourceWrapper")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Readable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLowLevelSourceObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Every time there's data, push it into the internal buffer.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ondata")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If push() returns false, then stop reading from source.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readStop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When the source ends, push the EOF-signaling `null` chunk.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onend")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// _read() will be called when the stream wants to pull more data in.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The advisory size argument is ignored in this case.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("readable.push()")]),t._v(" method is used to push the content\ninto the internal buffer. It can be driven by the "),s("code",[t._v("readable._read()")]),t._v(" method.")]),t._v(" "),s("p",[t._v("For streams not operating in object mode, if the "),s("code",[t._v("chunk")]),t._v(" parameter of\n"),s("code",[t._v("readable.push()")]),t._v(" is "),s("code",[t._v("undefined")]),t._v(", it will be treated as empty string or\nbuffer. See "),s("a",{attrs:{href:"#stream_readable_push"}},[s("code",[t._v("readable.push('')")])]),t._v(" for more information.")]),t._v(" "),s("h4",{attrs:{id:"errors-while-reading"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#errors-while-reading"}},[t._v("#")]),t._v(" Errors While Reading")]),t._v(" "),s("p",[t._v("Errors occurring during processing of the "),s("a",{attrs:{href:"#stream_readable_read_size_1"}},[s("code",[t._v("readable._read()")])]),t._v(" must be\npropagated through the "),s("a",{attrs:{href:"#stream_readable_destroy_err_callback"}},[s("code",[t._v("readable.destroy(err)")])]),t._v(" method.\nThrowing an "),s("code",[t._v("Error")]),t._v(" from within "),s("a",{attrs:{href:"#stream_readable_read_size_1"}},[s("code",[t._v("readable._read()")])]),t._v(" or manually emitting an\n"),s("code",[t._v("'error'")]),t._v(" event results in undefined behavior.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Readable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myReadable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Readable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkSomeErrorCondition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do some work.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"an-example-counting-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#an-example-counting-stream"}},[t._v("#")]),t._v(" An Example Counting Stream")]),t._v(" "),s("p",[t._v("The following is a basic example of a "),s("code",[t._v("Readable")]),t._v(" stream that emits the numerals\nfrom 1 to 1,000,000 in ascending order, and then ends.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Readable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Counter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Readable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("opt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ascii'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"implementing-a-duplex-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementing-a-duplex-stream"}},[t._v("#")]),t._v(" Implementing a Duplex Stream")]),t._v(" "),s("p",[t._v("A "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" stream is one that implements both "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" and\n"),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(", such as a TCP socket connection.")]),t._v(" "),s("p",[t._v("Because JavaScript does not have support for multiple inheritance, the\n"),s("code",[t._v("stream.Duplex")]),t._v(" class is extended to implement a "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" stream (as opposed\nto extending the "),s("code",[t._v("stream.Readable")]),t._v(" "),s("em",[t._v("and")]),t._v(" "),s("code",[t._v("stream.Writable")]),t._v(" classes).")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("stream.Duplex")]),t._v(" class prototypically inherits from "),s("code",[t._v("stream.Readable")]),t._v(" and\nparasitically from "),s("code",[t._v("stream.Writable")]),t._v(", but "),s("code",[t._v("instanceof")]),t._v(" will work properly for\nboth base classes due to overriding "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/hasInstance",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Symbol.hasInstance")]),s("OutboundLink")],1),t._v(" on\n"),s("code",[t._v("stream.Writable")]),t._v(".")]),t._v(" "),s("p",[t._v("Custom "),s("code",[t._v("Duplex")]),t._v(" streams "),s("em",[t._v("must")]),t._v(" call the "),s("code",[t._v("new stream.Duplex([options])")]),t._v("\nconstructor and implement "),s("em",[t._v("both")]),t._v(" the "),s("code",[t._v("readable._read()")]),t._v(" and\n"),s("code",[t._v("writable._write()")]),t._v(" methods.")]),t._v(" "),s("h4",{attrs:{id:"new-stream-duplex-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-stream-duplex-options"}},[t._v("#")]),t._v(" new stream.Duplex(options)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("options")]),t._v(" {Object} Passed to both "),s("code",[t._v("Writable")]),t._v(" and "),s("code",[t._v("Readable")]),t._v("\nconstructors. Also has the following fields:\n"),s("ul",[s("li",[s("code",[t._v("allowHalfOpen")]),t._v(" {boolean} If set to "),s("code",[t._v("false")]),t._v(", then the stream will\nautomatically end the writable side when the readable side ends.\n"),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("readableObjectMode")]),t._v(" {boolean} Sets "),s("code",[t._v("objectMode")]),t._v(" for readable side of the\nstream. Has no effect if "),s("code",[t._v("objectMode")]),t._v(" is "),s("code",[t._v("true")]),t._v(". "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("writableObjectMode")]),t._v(" {boolean} Sets "),s("code",[t._v("objectMode")]),t._v(" for writable side of the\nstream. Has no effect if "),s("code",[t._v("objectMode")]),t._v(" is "),s("code",[t._v("true")]),t._v(". "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("readableHighWaterMark")]),t._v(" {number} Sets "),s("code",[t._v("highWaterMark")]),t._v(" for the readable side\nof the stream. Has no effect if "),s("code",[t._v("highWaterMark")]),t._v(" is provided.")]),t._v(" "),s("li",[s("code",[t._v("writableHighWaterMark")]),t._v(" {number} Sets "),s("code",[t._v("highWaterMark")]),t._v(" for the writable side\nof the stream. Has no effect if "),s("code",[t._v("highWaterMark")]),t._v(" is provided.")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Duplex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyDuplex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duplex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Or, when using pre-ES6 style constructors:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Duplex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" util "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'util'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyDuplex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyDuplex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyDuplex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Duplex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nutil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyDuplex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Duplex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Or, using the Simplified Constructor approach:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Duplex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myDuplex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duplex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"an-example-duplex-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#an-example-duplex-stream"}},[t._v("#")]),t._v(" An Example Duplex Stream")]),t._v(" "),s("p",[t._v("The following illustrates a simple example of a "),s("code",[t._v("Duplex")]),t._v(" stream that wraps a\nhypothetical lower-level source object to which data can be written, and\nfrom which data can be read, albeit using an API that is not compatible with\nNode.js streams.\nThe following illustrates a simple example of a "),s("code",[t._v("Duplex")]),t._v(" stream that buffers\nincoming written data via the "),s("a",{attrs:{href:"#stream_class_stream_writable"}},[s("code",[t._v("Writable")])]),t._v(" interface that is read back out\nvia the "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" interface.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Duplex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" kSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'source'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyDuplex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duplex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The underlying source only deals with strings.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      chunk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeSomeData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchSomeData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The most important aspect of a "),s("code",[t._v("Duplex")]),t._v(" stream is that the "),s("code",[t._v("Readable")]),t._v(" and\n"),s("code",[t._v("Writable")]),t._v(" sides operate independently of one another despite co-existing within\na single object instance.")]),t._v(" "),s("h4",{attrs:{id:"object-mode-duplex-streams"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-mode-duplex-streams"}},[t._v("#")]),t._v(" Object Mode Duplex Streams")]),t._v(" "),s("p",[t._v("For "),s("code",[t._v("Duplex")]),t._v(" streams, "),s("code",[t._v("objectMode")]),t._v(" can be set exclusively for either the\n"),s("code",[t._v("Readable")]),t._v(" or "),s("code",[t._v("Writable")]),t._v(" side using the "),s("code",[t._v("readableObjectMode")]),t._v(" and\n"),s("code",[t._v("writableObjectMode")]),t._v(" options respectively.")]),t._v(" "),s("p",[t._v("In the following example, for instance, a new "),s("code",[t._v("Transform")]),t._v(" stream (which is a\ntype of "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" stream) is created that has an object mode "),s("code",[t._v("Writable")]),t._v(" side\nthat accepts JavaScript numbers that are converted to hexadecimal strings on\nthe "),s("code",[t._v("Readable")]),t._v(" side.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Transform "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All Transform streams are also Duplex Streams.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myTransform "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  writableObjectMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Coerce the chunk to a number if necessary.")]),t._v("\n    chunk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Transform the chunk into something else.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Push the data onto the readable queue.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmyTransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEncoding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ascii'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyTransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmyTransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints: 01")]),t._v("\nmyTransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints: 0a")]),t._v("\nmyTransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints: 64")]),t._v("\n")])])]),s("h3",{attrs:{id:"implementing-a-transform-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementing-a-transform-stream"}},[t._v("#")]),t._v(" Implementing a Transform Stream")]),t._v(" "),s("p",[t._v("A "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(" stream is a "),s("a",{attrs:{href:"#stream_class_stream_duplex"}},[s("code",[t._v("Duplex")])]),t._v(" stream where the output is computed\nin some way from the input. Examples include "),s("router-link",{attrs:{to:"/node/zlib.html"}},[t._v("zlib")]),t._v(" streams or "),s("router-link",{attrs:{to:"/node/crypto.html"}},[t._v("crypto")]),t._v("\nstreams that compress, encrypt, or decrypt data.")],1),t._v(" "),s("p",[t._v("There is no requirement that the output be the same size as the input, the same\nnumber of chunks, or arrive at the same time. For example, a "),s("code",[t._v("Hash")]),t._v(" stream will\nonly ever have a single chunk of output which is provided when the input is\nended. A "),s("code",[t._v("zlib")]),t._v(" stream will produce output that is either much smaller or much\nlarger than its input.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("stream.Transform")]),t._v(" class is extended to implement a "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(" stream.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("stream.Transform")]),t._v(" class prototypically inherits from "),s("code",[t._v("stream.Duplex")]),t._v(" and\nimplements its own versions of the "),s("code",[t._v("writable._write()")]),t._v(" and "),s("code",[t._v("readable._read()")]),t._v("\nmethods. Custom "),s("code",[t._v("Transform")]),t._v(" implementations "),s("em",[t._v("must")]),t._v(" implement the\n"),s("a",{attrs:{href:"#stream_transform_transform_chunk_encoding_callback"}},[s("code",[t._v("transform._transform()")])]),t._v(" method and "),s("em",[t._v("may")]),t._v(" also implement\nthe "),s("a",{attrs:{href:"#stream_transform_flush_callback"}},[s("code",[t._v("transform._flush()")])]),t._v(" method.")]),t._v(" "),s("p",[t._v("Care must be taken when using "),s("code",[t._v("Transform")]),t._v(" streams in that data written to the\nstream can cause the "),s("code",[t._v("Writable")]),t._v(" side of the stream to become paused if the\noutput on the "),s("code",[t._v("Readable")]),t._v(" side is not consumed.")]),t._v(" "),s("h4",{attrs:{id:"new-stream-transform-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-stream-transform-options"}},[t._v("#")]),t._v(" new stream.Transform([options])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("options")]),t._v(" {Object} Passed to both "),s("code",[t._v("Writable")]),t._v(" and "),s("code",[t._v("Readable")]),t._v("\nconstructors. Also has the following fields:\n"),s("ul",[s("li",[s("code",[t._v("transform")]),t._v(" {Function} Implementation for the\n"),s("a",{attrs:{href:"#stream_transform_transform_chunk_encoding_callback"}},[s("code",[t._v("stream._transform()")])]),t._v(" method.")]),t._v(" "),s("li",[s("code",[t._v("flush")]),t._v(" {Function} Implementation for the "),s("a",{attrs:{href:"#stream_transform_flush_callback"}},[s("code",[t._v("stream._flush()")])]),t._v("\nmethod.")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Transform "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyTransform")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transform")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Or, when using pre-ES6 style constructors:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Transform "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" util "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'util'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyTransform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyTransform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyTransform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nutil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyTransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Or, using the Simplified Constructor approach:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Transform "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myTransform "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"events-finish-and-end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events-finish-and-end"}},[t._v("#")]),t._v(" Events: 'finish' and 'end'")]),t._v(" "),s("p",[t._v("The "),s("a",{attrs:{href:"#stream_event_finish"}},[s("code",[t._v("'finish'")])]),t._v(" and "),s("a",{attrs:{href:"#stream_event_end"}},[s("code",[t._v("'end'")])]),t._v(" events are from the "),s("code",[t._v("stream.Writable")]),t._v("\nand "),s("code",[t._v("stream.Readable")]),t._v(" classes, respectively. The "),s("code",[t._v("'finish'")]),t._v(" event is emitted\nafter "),s("a",{attrs:{href:"#stream_writable_end_chunk_encoding_callback"}},[s("code",[t._v("stream.end()")])]),t._v(" is called and all chunks have been processed\nby "),s("a",{attrs:{href:"#stream_transform_transform_chunk_encoding_callback"}},[s("code",[t._v("stream._transform()")])]),t._v(". The "),s("code",[t._v("'end'")]),t._v(" event is emitted\nafter all data has been output, which occurs after the callback in\n"),s("a",{attrs:{href:"#stream_transform_flush_callback"}},[s("code",[t._v("transform._flush()")])]),t._v(" has been called. In the case of an error,\nneither "),s("code",[t._v("'finish'")]),t._v(" nor "),s("code",[t._v("'end'")]),t._v(" should be emitted.")]),t._v(" "),s("h4",{attrs:{id:"transform-flush-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform-flush-callback"}},[t._v("#")]),t._v(" transform._flush(callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("callback")]),t._v(" {Function} A callback function (optionally with an error\nargument and data) to be called when remaining data has been flushed.")])]),t._v(" "),s("p",[t._v("This function MUST NOT be called by application code directly. It should be\nimplemented by child classes, and called by the internal "),s("code",[t._v("Readable")]),t._v(" class\nmethods only.")]),t._v(" "),s("p",[t._v("In some cases, a transform operation may need to emit an additional bit of\ndata at the end of the stream. For example, a "),s("code",[t._v("zlib")]),t._v(" compression stream will\nstore an amount of internal state used to optimally compress the output. When\nthe stream ends, however, that additional data needs to be flushed so that the\ncompressed data will be complete.")]),t._v(" "),s("p",[t._v("Custom "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v(" implementations "),s("em",[t._v("may")]),t._v(" implement the "),s("code",[t._v("transform._flush()")]),t._v("\nmethod. This will be called when there is no more written data to be consumed,\nbut before the "),s("a",{attrs:{href:"#stream_event_end"}},[s("code",[t._v("'end'")])]),t._v(" event is emitted signaling the end of the\n"),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" stream.")]),t._v(" "),s("p",[t._v("Within the "),s("code",[t._v("transform._flush()")]),t._v(" implementation, the "),s("code",[t._v("readable.push()")]),t._v(" method\nmay be called zero or more times, as appropriate. The "),s("code",[t._v("callback")]),t._v(" function must\nbe called when the flush operation is complete.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("transform._flush()")]),t._v(" method is prefixed with an underscore because it is\ninternal to the class that defines it, and should never be called directly by\nuser programs.")]),t._v(" "),s("h4",{attrs:{id:"transform-transform-chunk-encoding-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform-transform-chunk-encoding-callback"}},[t._v("#")]),t._v(" transform._transform(chunk, encoding, callback)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("chunk")]),t._v(" {Buffer|string|any} The "),s("code",[t._v("Buffer")]),t._v(" to be transformed, converted from\nthe "),s("code",[t._v("string")]),t._v(" passed to "),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(". If the stream's\n"),s("code",[t._v("decodeStrings")]),t._v(" option is "),s("code",[t._v("false")]),t._v(" or the stream is operating in object mode,\nthe chunk will not be converted & will be whatever was passed to\n"),s("a",{attrs:{href:"#stream_writable_write_chunk_encoding_callback"}},[s("code",[t._v("stream.write()")])]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("encoding")]),t._v(" {string} If the chunk is a string, then this is the\nencoding type. If chunk is a buffer, then this is the special\nvalue "),s("code",[t._v("'buffer'")]),t._v(". Ignore it in that case.")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} A callback function (optionally with an error\nargument and data) to be called after the supplied "),s("code",[t._v("chunk")]),t._v(" has been\nprocessed.")])]),t._v(" "),s("p",[t._v("This function MUST NOT be called by application code directly. It should be\nimplemented by child classes, and called by the internal "),s("code",[t._v("Readable")]),t._v(" class\nmethods only.")]),t._v(" "),s("p",[t._v("All "),s("code",[t._v("Transform")]),t._v(" stream implementations must provide a "),s("code",[t._v("_transform()")]),t._v("\nmethod to accept input and produce output. The "),s("code",[t._v("transform._transform()")]),t._v("\nimplementation handles the bytes being written, computes an output, then passes\nthat output off to the readable portion using the "),s("code",[t._v("readable.push()")]),t._v(" method.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("transform.push()")]),t._v(" method may be called zero or more times to generate\noutput from a single input chunk, depending on how much is to be output\nas a result of the chunk.")]),t._v(" "),s("p",[t._v("It is possible that no output is generated from any given chunk of input data.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("callback")]),t._v(" function must be called only when the current chunk is completely\nconsumed. The first argument passed to the "),s("code",[t._v("callback")]),t._v(" must be an "),s("code",[t._v("Error")]),t._v(" object\nif an error occurred while processing the input or "),s("code",[t._v("null")]),t._v(" otherwise. If a second\nargument is passed to the "),s("code",[t._v("callback")]),t._v(", it will be forwarded on to the\n"),s("code",[t._v("readable.push()")]),t._v(" method. In other words, the following are equivalent:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_transform")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_transform")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("transform._transform()")]),t._v(" method is prefixed with an underscore because it\nis internal to the class that defines it, and should never be called directly by\nuser programs.")]),t._v(" "),s("p",[s("code",[t._v("transform._transform()")]),t._v(" is never called in parallel; streams implement a\nqueue mechanism, and to receive the next chunk, "),s("code",[t._v("callback")]),t._v(" must be\ncalled, either synchronously or asynchronously.")]),t._v(" "),s("h4",{attrs:{id:"class-stream-passthrough"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-stream-passthrough"}},[t._v("#")]),t._v(" Class: stream.PassThrough")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("stream.PassThrough")]),t._v(" class is a trivial implementation of a "),s("a",{attrs:{href:"#stream_class_stream_transform"}},[s("code",[t._v("Transform")])]),t._v("\nstream that simply passes the input bytes across to the output. Its purpose is\nprimarily for examples and testing, but there are some use cases where\n"),s("code",[t._v("stream.PassThrough")]),t._v(" is useful as a building block for novel sorts of streams.")]),t._v(" "),s("h2",{attrs:{id:"additional-notes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#additional-notes"}},[t._v("#")]),t._v(" Additional Notes")]),t._v(" "),s("h3",{attrs:{id:"streams-compatibility-with-async-generators-and-async-iterators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#streams-compatibility-with-async-generators-and-async-iterators"}},[t._v("#")]),t._v(" Streams Compatibility with Async Generators and Async Iterators")]),t._v(" "),s("p",[t._v("With the support of async generators and iterators in JavaScript, async\ngenerators are effectively a first-class language-level stream construct at\nthis point.")]),t._v(" "),s("p",[t._v("Some common interop cases of using Node.js streams with async generators\nand async iterators are provided below.")]),t._v(" "),s("h4",{attrs:{id:"consuming-readable-streams-with-async-iterators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#consuming-readable-streams-with-async-iterators"}},[t._v("#")]),t._v(" Consuming Readable Streams with Async Iterators")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" chunk "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Async iterators register a permanent error handler on the stream to prevent any\nunhandled post-destroy errors.")]),t._v(" "),s("h4",{attrs:{id:"creating-readable-streams-with-async-generators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-readable-streams-with-async-generators"}},[t._v("#")]),t._v(" Creating Readable Streams with Async Generators")]),t._v(" "),s("p",[t._v("We can construct a Node.js Readable Stream from an asynchronous generator\nusing the "),s("code",[t._v("Readable.from()")]),t._v(" utility method:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Readable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"piping-to-writable-streams-from-async-iterators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piping-to-writable-streams-from-async-iterators"}},[t._v("#")]),t._v(" Piping to Writable Streams from Async Iterators")]),t._v(" "),s("p",[t._v("In the scenario of writing to a writable stream from an async iterator, ensure\nthe correct handling of backpressure and errors.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" once "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'events'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" finished "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" chunk "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle backpressure on write().")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'drain'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ensure completion without errors.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finished")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("In the above, errors on "),s("code",[t._v("write()")]),t._v(" would be caught and thrown by the\n"),s("code",[t._v("once()")]),t._v(" listener for the "),s("code",[t._v("'drain'")]),t._v(" event, since "),s("code",[t._v("once()")]),t._v(" will also handle the\n"),s("code",[t._v("'error'")]),t._v(" event. To ensure completion of the write stream without errors,\nit is safer to use the "),s("code",[t._v("finished()")]),t._v(" method as above, instead of using the\n"),s("code",[t._v("once()")]),t._v(" listener for the "),s("code",[t._v("'finish'")]),t._v(" event. Under certain cases, an "),s("code",[t._v("'error'")]),t._v("\nevent could be emitted by the writable stream after "),s("code",[t._v("'finish'")]),t._v(" and as "),s("code",[t._v("once()")]),t._v("\nwill release the "),s("code",[t._v("'error'")]),t._v(" handler on handling the "),s("code",[t._v("'finish'")]),t._v(" event, it could\nresult in an unhandled error.")]),t._v(" "),s("p",[t._v("Alternatively, the readable stream could be wrapped with "),s("code",[t._v("Readable.from()")]),t._v(" and\nthen piped via "),s("code",[t._v(".pipe()")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" finished "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ensure completion without errors.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finished")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Or, using "),s("code",[t._v("stream.pipeline()")]),t._v(" to pipe streams:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pipeline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pipeline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" writable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipeline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" writable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),t._v(" "),s("h3",{attrs:{id:"compatibility-with-older-node-js-versions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compatibility-with-older-node-js-versions"}},[t._v("#")]),t._v(" Compatibility with Older Node.js Versions")]),t._v(" "),s("p",[t._v("Prior to Node.js 0.10, the "),s("code",[t._v("Readable")]),t._v(" stream interface was simpler, but also\nless powerful and less useful.")]),t._v(" "),s("ul",[s("li",[t._v("Rather than waiting for calls to the "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read()")])]),t._v(" method,\n"),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" events would begin emitting immediately. Applications that\nwould need to perform some amount of work to decide how to handle data\nwere required to store read data into buffers so the data would not be lost.")]),t._v(" "),s("li",[t._v("The "),s("a",{attrs:{href:"#stream_readable_pause"}},[s("code",[t._v("stream.pause()")])]),t._v(" method was advisory, rather than\nguaranteed. This meant that it was still necessary to be prepared to receive\n"),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" events "),s("em",[t._v("even when the stream was in a paused state")]),t._v(".")])]),t._v(" "),s("p",[t._v("In Node.js 0.10, the "),s("a",{attrs:{href:"#stream_class_stream_readable"}},[s("code",[t._v("Readable")])]),t._v(" class was added. For backward\ncompatibility with older Node.js programs, "),s("code",[t._v("Readable")]),t._v(' streams switch into\n"flowing mode" when a '),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" event handler is added, or when the\n"),s("a",{attrs:{href:"#stream_readable_resume"}},[s("code",[t._v("stream.resume()")])]),t._v(" method is called. The effect is that, even\nwhen not using the new "),s("a",{attrs:{href:"#stream_readable_read_size"}},[s("code",[t._v("stream.read()")])]),t._v(" method and\n"),s("a",{attrs:{href:"#stream_event_readable"}},[s("code",[t._v("'readable'")])]),t._v(" event, it is no longer necessary to worry about losing\n"),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" chunks.")]),t._v(" "),s("p",[t._v("While most applications will continue to function normally, this introduces an\nedge case in the following conditions:")]),t._v(" "),s("ul",[s("li",[t._v("No "),s("a",{attrs:{href:"#stream_event_data"}},[s("code",[t._v("'data'")])]),t._v(" event listener is added.")]),t._v(" "),s("li",[t._v("The "),s("a",{attrs:{href:"#stream_readable_resume"}},[s("code",[t._v("stream.resume()")])]),t._v(" method is never called.")]),t._v(" "),s("li",[t._v("The stream is not piped to any writable destination.")])]),t._v(" "),s("p",[t._v("For example, consider the following code:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// WARNING!  BROKEN!")]),t._v("\nnet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("socket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We add an 'end' listener, but never consume the data.")]),t._v("\n  socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It will never get here.")]),t._v("\n    socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The message was received but was not processed.\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1337")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Prior to Node.js 0.10, the incoming message data would be simply discarded.\nHowever, in Node.js 0.10 and beyond, the socket remains paused forever.")]),t._v(" "),s("p",[t._v("The workaround in this situation is to call the\n"),s("a",{attrs:{href:"#stream_readable_resume"}},[s("code",[t._v("stream.resume()")])]),t._v(" method to begin the flow of data:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Workaround.")]),t._v("\nnet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("socket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The message was received but was not processed.\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Start the flow of data, discarding it.")]),t._v("\n  socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1337")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("In addition to new "),s("code",[t._v("Readable")]),t._v(" streams switching into flowing mode,\npre-0.10 style streams can be wrapped in a "),s("code",[t._v("Readable")]),t._v(" class using the\n"),s("a",{attrs:{href:"#stream_readable_wrap_stream"}},[s("code",[t._v("readable.wrap()")])]),t._v(" method.")]),t._v(" "),s("h3",{attrs:{id:"readable-read-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-read-0"}},[t._v("#")]),t._v(" "),s("code",[t._v("readable.read(0)")])]),t._v(" "),s("p",[t._v("There are some cases where it is necessary to trigger a refresh of the\nunderlying readable stream mechanisms, without actually consuming any\ndata. In such cases, it is possible to call "),s("code",[t._v("readable.read(0)")]),t._v(", which will\nalways return "),s("code",[t._v("null")]),t._v(".")]),t._v(" "),s("p",[t._v("If the internal read buffer is below the "),s("code",[t._v("highWaterMark")]),t._v(", and the\nstream is not currently reading, then calling "),s("code",[t._v("stream.read(0)")]),t._v(" will trigger\na low-level "),s("a",{attrs:{href:"#stream_readable_read_size_1"}},[s("code",[t._v("stream._read()")])]),t._v(" call.")]),t._v(" "),s("p",[t._v("While most applications will almost never need to do this, there are\nsituations within Node.js where this is done, particularly in the\n"),s("code",[t._v("Readable")]),t._v(" stream class internals.")]),t._v(" "),s("h3",{attrs:{id:"readable-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable-push"}},[t._v("#")]),t._v(" "),s("code",[t._v("readable.push('')")])]),t._v(" "),s("p",[t._v("Use of "),s("code",[t._v("readable.push('')")]),t._v(" is not recommended.")]),t._v(" "),s("p",[t._v("Pushing a zero-byte string, "),s("code",[t._v("Buffer")]),t._v(" or "),s("code",[t._v("Uint8Array")]),t._v(" to a stream that is not in\nobject mode has an interesting side effect. Because it "),s("em",[t._v("is")]),t._v(" a call to\n"),s("a",{attrs:{href:"#stream_readable_push_chunk_encoding"}},[s("code",[t._v("readable.push()")])]),t._v(", the call will end the reading process.\nHowever, because the argument is an empty string, no data is added to the\nreadable buffer so there is nothing for a user to consume.")]),t._v(" "),s("h3",{attrs:{id:"highwatermark-discrepancy-after-calling-readable-setencoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#highwatermark-discrepancy-after-calling-readable-setencoding"}},[t._v("#")]),t._v(" "),s("code",[t._v("highWaterMark")]),t._v(" discrepancy after calling "),s("code",[t._v("readable.setEncoding()")])]),t._v(" "),s("p",[t._v("The use of "),s("code",[t._v("readable.setEncoding()")]),t._v(" will change the behavior of how the\n"),s("code",[t._v("highWaterMark")]),t._v(" operates in non-object mode.")]),t._v(" "),s("p",[t._v("Typically, the size of the current buffer is measured against the\n"),s("code",[t._v("highWaterMark")]),t._v(" in "),s("em",[t._v("bytes")]),t._v(". However, after "),s("code",[t._v("setEncoding()")]),t._v(" is called, the\ncomparison function will begin to measure the buffer's size in "),s("em",[t._v("characters")]),t._v(".")]),t._v(" "),s("p",[t._v("This is not a problem in common cases with "),s("code",[t._v("latin1")]),t._v(" or "),s("code",[t._v("ascii")]),t._v(". But it is\nadvised to be mindful about this behavior when working with strings that could\ncontain multi-byte characters.")])])}),[],!1,null,null,null);a.default=n.exports}}]);