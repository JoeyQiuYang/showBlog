(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{246:function(t,e,s){"use strict";s.r(e);var a=s(3),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tty"}},[t._v("#")]),t._v(" TTY")]),t._v(" "),s("blockquote",[s("p",[t._v("Stability: 2 - Stable")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("tty")]),t._v(" module provides the "),s("code",[t._v("tty.ReadStream")]),t._v(" and "),s("code",[t._v("tty.WriteStream")]),t._v(" classes.\nIn most cases, it will not be necessary or possible to use this module directly.\nHowever, it can be accessed using:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tty'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v('When Node.js detects that it is being run with a text terminal ("TTY")\nattached, '),s("router-link",{attrs:{to:"/node/process.html#process_process_stdin"}},[s("code",[t._v("process.stdin")])]),t._v(" will, by default, be initialized as an instance of\n"),s("code",[t._v("tty.ReadStream")]),t._v(" and both "),s("router-link",{attrs:{to:"/node/process.html#process_process_stdout"}},[s("code",[t._v("process.stdout")])]),t._v(" and "),s("router-link",{attrs:{to:"/node/process.html#process_process_stderr"}},[s("code",[t._v("process.stderr")])]),t._v(" will, by\ndefault be instances of "),s("code",[t._v("tty.WriteStream")]),t._v(". The preferred method of determining\nwhether Node.js is being run within a TTY context is to check that the value of\nthe "),s("code",[t._v("process.stdout.isTTY")]),t._v(" property is "),s("code",[t._v("true")]),t._v(":")],1),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ node -p -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Boolean(process.stdout.isTTY)"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n$ node -p -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Boolean(process.stdout.isTTY)"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("p",[t._v("In most cases, there should be little to no reason for an application to\nmanually create instances of the "),s("code",[t._v("tty.ReadStream")]),t._v(" and "),s("code",[t._v("tty.WriteStream")]),t._v("\nclasses.")]),t._v(" "),s("h2",{attrs:{id:"class-tty-readstream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-tty-readstream"}},[t._v("#")]),t._v(" Class: tty.ReadStream")]),t._v(" "),s("ul",[s("li",[t._v("Extends: {net.Socket}")])]),t._v(" "),s("p",[t._v("Represents the readable side of a TTY. In normal circumstances\n"),s("router-link",{attrs:{to:"/node/process.html#process_process_stdin"}},[s("code",[t._v("process.stdin")])]),t._v(" will be the only "),s("code",[t._v("tty.ReadStream")]),t._v(" instance in a Node.js\nprocess and there should be no reason to create additional instances.")],1),t._v(" "),s("h3",{attrs:{id:"readstream-israw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readstream-israw"}},[t._v("#")]),t._v(" readStream.isRaw")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("boolean")]),t._v(" that is "),s("code",[t._v("true")]),t._v(" if the TTY is currently configured to operate as a\nraw device. Defaults to "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"readstream-istty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readstream-istty"}},[t._v("#")]),t._v(" readStream.isTTY")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("boolean")]),t._v(" that is always "),s("code",[t._v("true")]),t._v(" for "),s("code",[t._v("tty.ReadStream")]),t._v(" instances.")]),t._v(" "),s("h3",{attrs:{id:"readstream-setrawmode-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readstream-setrawmode-mode"}},[t._v("#")]),t._v(" readStream.setRawMode(mode)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("mode")]),t._v(" {boolean} If "),s("code",[t._v("true")]),t._v(", configures the "),s("code",[t._v("tty.ReadStream")]),t._v(" to operate as a\nraw device. If "),s("code",[t._v("false")]),t._v(", configures the "),s("code",[t._v("tty.ReadStream")]),t._v(" to operate in its\ndefault mode. The "),s("code",[t._v("readStream.isRaw")]),t._v(" property will be set to the resulting\nmode.")]),t._v(" "),s("li",[t._v("Returns: {this} The read stream instance.")])]),t._v(" "),s("p",[t._v("Allows configuration of "),s("code",[t._v("tty.ReadStream")]),t._v(" so that it operates as a raw device.")]),t._v(" "),s("p",[t._v("When in raw mode, input is always available character-by-character, not\nincluding modifiers. Additionally, all special processing of characters by the\nterminal is disabled, including echoing input characters.\n"),s("code",[t._v("CTRL")]),t._v("+"),s("code",[t._v("C")]),t._v(" will no longer cause a "),s("code",[t._v("SIGINT")]),t._v(" when in this mode.")]),t._v(" "),s("h2",{attrs:{id:"class-tty-writestream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-tty-writestream"}},[t._v("#")]),t._v(" Class: tty.WriteStream")]),t._v(" "),s("ul",[s("li",[t._v("Extends: {net.Socket}")])]),t._v(" "),s("p",[t._v("Represents the writable side of a TTY. In normal circumstances,\n"),s("router-link",{attrs:{to:"/node/process.html#process_process_stdout"}},[s("code",[t._v("process.stdout")])]),t._v(" and "),s("router-link",{attrs:{to:"/node/process.html#process_process_stderr"}},[s("code",[t._v("process.stderr")])]),t._v(" will be the only\n"),s("code",[t._v("tty.WriteStream")]),t._v(" instances created for a Node.js process and there\nshould be no reason to create additional instances.")],1),t._v(" "),s("h3",{attrs:{id:"event-resize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-resize"}},[t._v("#")]),t._v(" Event: 'resize'")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("'resize'")]),t._v(" event is emitted whenever either of the "),s("code",[t._v("writeStream.columns")]),t._v("\nor "),s("code",[t._v("writeStream.rows")]),t._v(" properties have changed. No arguments are passed to the\nlistener callback when called.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'screen size has changed!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("columns"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"writestream-clearline-dir-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-clearline-dir-callback"}},[t._v("#")]),t._v(" writeStream.clearLine(dir[, callback])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("dir")]),t._v(" {number}\n"),s("ul",[s("li",[s("code",[t._v("-1")]),t._v(": to the left from cursor")]),t._v(" "),s("li",[s("code",[t._v("1")]),t._v(": to the right from cursor")]),t._v(" "),s("li",[s("code",[t._v("0")]),t._v(": the entire line")])])]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} Invoked once the operation completes.")]),t._v(" "),s("li",[t._v("Returns: {boolean} "),s("code",[t._v("false")]),t._v(" if the stream wishes for the calling code to wait\nfor the "),s("code",[t._v("'drain'")]),t._v(" event to be emitted before continuing to write additional\ndata; otherwise "),s("code",[t._v("true")]),t._v(".")])]),t._v(" "),s("p",[s("code",[t._v("writeStream.clearLine()")]),t._v(" clears the current line of this "),s("code",[t._v("WriteStream")]),t._v(" in a\ndirection identified by "),s("code",[t._v("dir")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"writestream-clearscreendown-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-clearscreendown-callback"}},[t._v("#")]),t._v(" writeStream.clearScreenDown([callback])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("callback")]),t._v(" {Function} Invoked once the operation completes.")]),t._v(" "),s("li",[t._v("Returns: {boolean} "),s("code",[t._v("false")]),t._v(" if the stream wishes for the calling code to wait\nfor the "),s("code",[t._v("'drain'")]),t._v(" event to be emitted before continuing to write additional\ndata; otherwise "),s("code",[t._v("true")]),t._v(".")])]),t._v(" "),s("p",[s("code",[t._v("writeStream.clearScreenDown()")]),t._v(" clears this "),s("code",[t._v("WriteStream")]),t._v(" from the current\ncursor down.")]),t._v(" "),s("h3",{attrs:{id:"writestream-columns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-columns"}},[t._v("#")]),t._v(" writeStream.columns")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("number")]),t._v(" specifying the number of columns the TTY currently has. This property\nis updated whenever the "),s("code",[t._v("'resize'")]),t._v(" event is emitted.")]),t._v(" "),s("h3",{attrs:{id:"writestream-cursorto-x-y-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-cursorto-x-y-callback"}},[t._v("#")]),t._v(" writeStream.cursorTo(x[, y][, callback])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("x")]),t._v(" {number}")]),t._v(" "),s("li",[s("code",[t._v("y")]),t._v(" {number}")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} Invoked once the operation completes.")]),t._v(" "),s("li",[t._v("Returns: {boolean} "),s("code",[t._v("false")]),t._v(" if the stream wishes for the calling code to wait\nfor the "),s("code",[t._v("'drain'")]),t._v(" event to be emitted before continuing to write additional\ndata; otherwise "),s("code",[t._v("true")]),t._v(".")])]),t._v(" "),s("p",[s("code",[t._v("writeStream.cursorTo()")]),t._v(" moves this "),s("code",[t._v("WriteStream")]),t._v("'s cursor to the specified\nposition.")]),t._v(" "),s("h3",{attrs:{id:"writestream-getcolordepth-env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-getcolordepth-env"}},[t._v("#")]),t._v(" writeStream.getColorDepth([env])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("env")]),t._v(" {Object} An object containing the environment variables to check. This\nenables simulating the usage of a specific terminal. "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("process.env")]),t._v(".")]),t._v(" "),s("li",[t._v("Returns: {number}")])]),t._v(" "),s("p",[t._v("Returns:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("1")]),t._v(" for 2,")]),t._v(" "),s("li",[s("code",[t._v("4")]),t._v(" for 16,")]),t._v(" "),s("li",[s("code",[t._v("8")]),t._v(" for 256,")]),t._v(" "),s("li",[s("code",[t._v("24")]),t._v(" for 16,777,216\ncolors supported.")])]),t._v(" "),s("p",[t._v("Use this to determine what colors the terminal supports. Due to the nature of\ncolors in terminals it is possible to either have false positives or false\nnegatives. It depends on process information and the environment variables that\nmay lie about what terminal is used.\nIt is possible to pass in an "),s("code",[t._v("env")]),t._v(" object to simulate the usage of a specific\nterminal. This can be useful to check how specific environment settings behave.")]),t._v(" "),s("p",[t._v("To enforce a specific color support, use one of the below environment settings.")]),t._v(" "),s("ul",[s("li",[t._v("2 colors: "),s("code",[t._v("FORCE_COLOR = 0")]),t._v(" (Disables colors)")]),t._v(" "),s("li",[t._v("16 colors: "),s("code",[t._v("FORCE_COLOR = 1")])]),t._v(" "),s("li",[t._v("256 colors: "),s("code",[t._v("FORCE_COLOR = 2")])]),t._v(" "),s("li",[t._v("16,777,216 colors: "),s("code",[t._v("FORCE_COLOR = 3")])])]),t._v(" "),s("p",[t._v("Disabling color support is also possible by using the "),s("code",[t._v("NO_COLOR")]),t._v(" and\n"),s("code",[t._v("NODE_DISABLE_COLORS")]),t._v(" environment variables.")]),t._v(" "),s("h3",{attrs:{id:"writestream-getwindowsize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-getwindowsize"}},[t._v("#")]),t._v(" writeStream.getWindowSize()")]),t._v(" "),s("ul",[s("li",[t._v("Returns: {number[]}")])]),t._v(" "),s("p",[s("code",[t._v("writeStream.getWindowSize()")]),t._v(" returns the size of the "),s("router-link",{attrs:{to:"/node/tty.html"}},[t._v("TTY")]),t._v("\ncorresponding to this "),s("code",[t._v("WriteStream")]),t._v(". The array is of the type\n"),s("code",[t._v("[numColumns, numRows]")]),t._v(" where "),s("code",[t._v("numColumns")]),t._v(" and "),s("code",[t._v("numRows")]),t._v(" represent the number\nof columns and rows in the corresponding "),s("router-link",{attrs:{to:"/node/tty.html"}},[t._v("TTY")]),t._v(".")],1),t._v(" "),s("h3",{attrs:{id:"writestream-hascolors-count-env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-hascolors-count-env"}},[t._v("#")]),t._v(" writeStream.hasColors([count][, env])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("count")]),t._v(" {integer} The number of colors that are requested (minimum 2).\n"),s("strong",[t._v("Default:")]),t._v(" 16.")]),t._v(" "),s("li",[s("code",[t._v("env")]),t._v(" {Object} An object containing the environment variables to check. This\nenables simulating the usage of a specific terminal. "),s("strong",[t._v("Default:")]),t._v(" "),s("code",[t._v("process.env")]),t._v(".")]),t._v(" "),s("li",[t._v("Returns: {boolean}")])]),t._v(" "),s("p",[t._v("Returns "),s("code",[t._v("true")]),t._v(" if the "),s("code",[t._v("writeStream")]),t._v(" supports at least as many colors as provided\nin "),s("code",[t._v("count")]),t._v(". Minimum support is 2 (black and white).")]),t._v(" "),s("p",[t._v("This has the same false positives and negatives as described in\n"),s("a",{attrs:{href:"#tty_writestream_getcolordepth_env"}},[s("code",[t._v("writeStream.getColorDepth()")])]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasColors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true or false depending on if `stdout` supports at least 16 colors.")]),t._v("\nprocess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasColors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true or false depending on if `stdout` supports at least 256 colors.")]),t._v("\nprocess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasColors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TMUX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true.")]),t._v("\nprocess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasColors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TMUX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false (the environment setting pretends to support 2 ** 8 colors).")]),t._v("\n")])])]),s("h3",{attrs:{id:"writestream-istty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-istty"}},[t._v("#")]),t._v(" writeStream.isTTY")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("boolean")]),t._v(" that is always "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"writestream-movecursor-dx-dy-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-movecursor-dx-dy-callback"}},[t._v("#")]),t._v(" writeStream.moveCursor(dx, dy[, callback])")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("dx")]),t._v(" {number}")]),t._v(" "),s("li",[s("code",[t._v("dy")]),t._v(" {number}")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(" {Function} Invoked once the operation completes.")]),t._v(" "),s("li",[t._v("Returns: {boolean} "),s("code",[t._v("false")]),t._v(" if the stream wishes for the calling code to wait\nfor the "),s("code",[t._v("'drain'")]),t._v(" event to be emitted before continuing to write additional\ndata; otherwise "),s("code",[t._v("true")]),t._v(".")])]),t._v(" "),s("p",[s("code",[t._v("writeStream.moveCursor()")]),t._v(" moves this "),s("code",[t._v("WriteStream")]),t._v("'s cursor "),s("em",[t._v("relative")]),t._v(" to its\ncurrent position.")]),t._v(" "),s("h3",{attrs:{id:"writestream-rows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestream-rows"}},[t._v("#")]),t._v(" writeStream.rows")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("number")]),t._v(" specifying the number of rows the TTY currently has. This property\nis updated whenever the "),s("code",[t._v("'resize'")]),t._v(" event is emitted.")]),t._v(" "),s("h2",{attrs:{id:"tty-isatty-fd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tty-isatty-fd"}},[t._v("#")]),t._v(" tty.isatty(fd)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("fd")]),t._v(" {number} A numeric file descriptor")]),t._v(" "),s("li",[t._v("Returns: {boolean}")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("tty.isatty()")]),t._v(" method returns "),s("code",[t._v("true")]),t._v(" if the given "),s("code",[t._v("fd")]),t._v(" is associated with\na TTY and "),s("code",[t._v("false")]),t._v(" if it is not, including whenever "),s("code",[t._v("fd")]),t._v(" is not a non-negative\ninteger.")])])}),[],!1,null,null,null);e.default=r.exports}}]);