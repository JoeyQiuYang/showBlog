(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{252:function(e,t,n){"use strict";n.r(t);var s=n(3),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"debugger"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#debugger"}},[e._v("#")]),e._v(" Debugger")]),e._v(" "),n("blockquote",[n("p",[e._v("Stability: 2 - Stable")])]),e._v(" "),n("p",[e._v("Node.js includes an out-of-process debugging utility accessible via a\n"),n("a",{attrs:{href:"#debugger_v8_inspector_integration_for_node_js"}},[e._v("V8 Inspector")]),e._v(" and built-in debugging client. To use it, start Node.js\nwith the "),n("code",[e._v("inspect")]),e._v(" argument followed by the path to the script to debug; a\nprompt will be displayed indicating successful launch of the debugger:")]),e._v(" "),n("div",{staticClass:"language-console extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ node inspect myscript.js\n< Debugger listening on ws://127.0.0.1:9229/80e7a814-7cd3-49fb-921a-2e02228cd5ba\n< For help, see: https://nodejs.org/en/docs/inspector\n< Debugger attached.\nBreak on start in myscript.js:1\n> 1 (function (exports, require, module, __filename, __dirname) { global.x = 5;\n  2 setTimeout(() => {\n  3   console.log('world');\ndebug>\n")])])]),n("p",[e._v("Node.js's debugger client is not a full-featured debugger, but simple step and\ninspection are possible.")]),e._v(" "),n("p",[e._v("Inserting the statement "),n("code",[e._v("debugger;")]),e._v(" into the source code of a script will\nenable a breakpoint at that position in the code:")]),e._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// myscript.js")]),e._v("\nglobal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("debugger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'world'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'hello'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),n("p",[e._v("Once the debugger is run, a breakpoint will occur at line 3:")]),e._v(" "),n("div",{staticClass:"language-console extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ node inspect myscript.js\n< Debugger listening on ws://127.0.0.1:9229/80e7a814-7cd3-49fb-921a-2e02228cd5ba\n< For help, see: https://nodejs.org/en/docs/inspector\n< Debugger attached.\nBreak on start in myscript.js:1\n> 1 (function (exports, require, module, __filename, __dirname) { global.x = 5;\n  2 setTimeout(() => {\n  3   debugger;\ndebug> cont\n< hello\nbreak in myscript.js:3\n  1 (function (exports, require, module, __filename, __dirname) { global.x = 5;\n  2 setTimeout(() => {\n> 3   debugger;\n  4   console.log('world');\n  5 }, 1000);\ndebug> next\nbreak in myscript.js:4\n  2 setTimeout(() => {\n  3   debugger;\n> 4   console.log('world');\n  5 }, 1000);\n  6 console.log('hello');\ndebug> repl\nPress Ctrl + C to leave debug repl\n> x\n5\n> 2 + 2\n4\ndebug> next\n< world\nbreak in myscript.js:5\n  3   debugger;\n  4   console.log('world');\n> 5 }, 1000);\n  6 console.log('hello');\n  7\ndebug> .exit\n")])])]),n("p",[e._v("The "),n("code",[e._v("repl")]),e._v(" command allows code to be evaluated remotely. The "),n("code",[e._v("next")]),e._v(" command\nsteps to the next line. Type "),n("code",[e._v("help")]),e._v(" to see what other commands are available.")]),e._v(" "),n("p",[e._v("Pressing "),n("code",[e._v("enter")]),e._v(" without typing a command will repeat the previous debugger\ncommand.")]),e._v(" "),n("h2",{attrs:{id:"watchers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#watchers"}},[e._v("#")]),e._v(" Watchers")]),e._v(" "),n("p",[e._v("It is possible to watch expression and variable values while debugging. On\nevery breakpoint, each expression from the watchers list will be evaluated\nin the current context and displayed immediately before the breakpoint's\nsource code listing.")]),e._v(" "),n("p",[e._v("To begin watching an expression, type "),n("code",[e._v("watch('my_expression')")]),e._v(". The command\n"),n("code",[e._v("watchers")]),e._v(" will print the active watchers. To remove a watcher, type\n"),n("code",[e._v("unwatch('my_expression')")]),e._v(".")]),e._v(" "),n("h2",{attrs:{id:"command-reference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#command-reference"}},[e._v("#")]),e._v(" Command reference")]),e._v(" "),n("h3",{attrs:{id:"stepping"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stepping"}},[e._v("#")]),e._v(" Stepping")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("cont")]),e._v(", "),n("code",[e._v("c")]),e._v(": Continue execution")]),e._v(" "),n("li",[n("code",[e._v("next")]),e._v(", "),n("code",[e._v("n")]),e._v(": Step next")]),e._v(" "),n("li",[n("code",[e._v("step")]),e._v(", "),n("code",[e._v("s")]),e._v(": Step in")]),e._v(" "),n("li",[n("code",[e._v("out")]),e._v(", "),n("code",[e._v("o")]),e._v(": Step out")]),e._v(" "),n("li",[n("code",[e._v("pause")]),e._v(": Pause running code (like pause button in Developer Tools)")])]),e._v(" "),n("h3",{attrs:{id:"breakpoints"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#breakpoints"}},[e._v("#")]),e._v(" Breakpoints")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("setBreakpoint()")]),e._v(", "),n("code",[e._v("sb()")]),e._v(": Set breakpoint on current line")]),e._v(" "),n("li",[n("code",[e._v("setBreakpoint(line)")]),e._v(", "),n("code",[e._v("sb(line)")]),e._v(": Set breakpoint on specific line")]),e._v(" "),n("li",[n("code",[e._v("setBreakpoint('fn()')")]),e._v(", "),n("code",[e._v("sb(...)")]),e._v(": Set breakpoint on a first statement in\nfunctions body")]),e._v(" "),n("li",[n("code",[e._v("setBreakpoint('script.js', 1)")]),e._v(", "),n("code",[e._v("sb(...)")]),e._v(": Set breakpoint on first line of\n"),n("code",[e._v("script.js")])]),e._v(" "),n("li",[n("code",[e._v("clearBreakpoint('script.js', 1)")]),e._v(", "),n("code",[e._v("cb(...)")]),e._v(": Clear breakpoint in "),n("code",[e._v("script.js")]),e._v("\non line 1")])]),e._v(" "),n("p",[e._v("It is also possible to set a breakpoint in a file (module) that\nis not loaded yet:")]),e._v(" "),n("div",{staticClass:"language-console extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ node inspect main.js\n< Debugger listening on ws://127.0.0.1:9229/4e3db158-9791-4274-8909-914f7facf3bd\n< For help, see: https://nodejs.org/en/docs/inspector\n< Debugger attached.\nBreak on start in main.js:1\n> 1 (function (exports, require, module, __filename, __dirname) { const mod = require('./mod.js');\n  2 mod.hello();\n  3 mod.hello();\ndebug> setBreakpoint('mod.js', 22)\nWarning: script 'mod.js' was not loaded yet.\ndebug> c\nbreak in mod.js:22\n 20 // USE OR OTHER DEALINGS IN THE SOFTWARE.\n 21\n>22 exports.hello = function() {\n 23   return 'hello from module';\n 24 };\ndebug>\n")])])]),n("h3",{attrs:{id:"information"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#information"}},[e._v("#")]),e._v(" Information")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("backtrace")]),e._v(", "),n("code",[e._v("bt")]),e._v(": Print backtrace of current execution frame")]),e._v(" "),n("li",[n("code",[e._v("list(5)")]),e._v(": List scripts source code with 5 line context (5 lines before and\nafter)")]),e._v(" "),n("li",[n("code",[e._v("watch(expr)")]),e._v(": Add expression to watch list")]),e._v(" "),n("li",[n("code",[e._v("unwatch(expr)")]),e._v(": Remove expression from watch list")]),e._v(" "),n("li",[n("code",[e._v("watchers")]),e._v(": List all watchers and their values (automatically listed on each\nbreakpoint)")]),e._v(" "),n("li",[n("code",[e._v("repl")]),e._v(": Open debugger's repl for evaluation in debugging script's context")]),e._v(" "),n("li",[n("code",[e._v("exec expr")]),e._v(": Execute an expression in debugging script's context")])]),e._v(" "),n("h3",{attrs:{id:"execution-control"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#execution-control"}},[e._v("#")]),e._v(" Execution control")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("run")]),e._v(": Run script (automatically runs on debugger's start)")]),e._v(" "),n("li",[n("code",[e._v("restart")]),e._v(": Restart script")]),e._v(" "),n("li",[n("code",[e._v("kill")]),e._v(": Kill script")])]),e._v(" "),n("h3",{attrs:{id:"various"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#various"}},[e._v("#")]),e._v(" Various")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("scripts")]),e._v(": List all loaded scripts")]),e._v(" "),n("li",[n("code",[e._v("version")]),e._v(": Display V8's version")])]),e._v(" "),n("h2",{attrs:{id:"advanced-usage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#advanced-usage"}},[e._v("#")]),e._v(" Advanced Usage")]),e._v(" "),n("h3",{attrs:{id:"v8-inspector-integration-for-node-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v8-inspector-integration-for-node-js"}},[e._v("#")]),e._v(" V8 Inspector Integration for Node.js")]),e._v(" "),n("p",[e._v("V8 Inspector integration allows attaching Chrome DevTools to Node.js\ninstances for debugging and profiling. It uses the\n"),n("a",{attrs:{href:"https://chromedevtools.github.io/devtools-protocol/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chrome DevTools Protocol"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("V8 Inspector can be enabled by passing the "),n("code",[e._v("--inspect")]),e._v(" flag when starting a\nNode.js application. It is also possible to supply a custom port with that flag,\ne.g. "),n("code",[e._v("--inspect=9222")]),e._v(" will accept DevTools connections on port 9222.")]),e._v(" "),n("p",[e._v("To break on the first line of the application code, pass the "),n("code",[e._v("--inspect-brk")]),e._v("\nflag instead of "),n("code",[e._v("--inspect")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language-console extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ node --inspect index.js\nDebugger listening on 127.0.0.1:9229.\nTo start debugging, open the following URL in Chrome:\n    chrome-devtools://devtools/bundled/js_app.html?experiments=true&v8only=true&ws=127.0.0.1:9229/dc9010dd-f8b8-4ac5-a510-c1a114ec7d29\n")])])]),n("p",[e._v("(In the example above, the UUID dc9010dd-f8b8-4ac5-a510-c1a114ec7d29\nat the end of the URL is generated on the fly, it varies in different\ndebugging sessions.)")]),e._v(" "),n("p",[e._v("If the Chrome browser is older than 66.0.3345.0,\nuse "),n("code",[e._v("inspector.html")]),e._v(" instead of "),n("code",[e._v("js_app.html")]),e._v(" in the above URL.")])])}),[],!1,null,null,null);t.default=a.exports}}]);