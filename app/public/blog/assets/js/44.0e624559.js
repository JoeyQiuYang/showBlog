(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{217:function(t,s,e){"use strict";e.r(s);var n=e(3),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"process"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process"}},[t._v("#")]),t._v(" Process")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process")]),t._v(" object is a "),e("code",[t._v("global")]),t._v(" that provides information about, and control\nover, the current Node.js process. As a global, it is always available to\nNode.js applications without using "),e("code",[t._v("require()")]),t._v(". It can also be explicitly\naccessed using "),e("code",[t._v("require()")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" process "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'process'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-events"}},[t._v("#")]),t._v(" Process Events")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process")]),t._v(" object is an instance of "),e("router-link",{attrs:{to:"/node/events.html#events_class_eventemitter"}},[e("code",[t._v("EventEmitter")])]),t._v(".")],1),t._v(" "),e("h3",{attrs:{id:"event-beforeexit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-beforeexit"}},[t._v("#")]),t._v(" Event: 'beforeExit'")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'beforeExit'")]),t._v(" event is emitted when Node.js empties its event loop and has\nno additional work to schedule. Normally, the Node.js process will exit when\nthere is no work scheduled, but a listener registered on the "),e("code",[t._v("'beforeExit'")]),t._v("\nevent can make asynchronous calls, and thereby cause the Node.js process to\ncontinue.")]),t._v(" "),e("p",[t._v("The listener callback function is invoked with the value of\n"),e("a",{attrs:{href:"#process_process_exitcode"}},[e("code",[t._v("process.exitCode")])]),t._v(" passed as the only argument.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'beforeExit'")]),t._v(" event is "),e("em",[t._v("not")]),t._v(" emitted for conditions causing explicit\ntermination, such as calling "),e("a",{attrs:{href:"#process_process_exit_code"}},[e("code",[t._v("process.exit()")])]),t._v(" or uncaught exceptions.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'beforeExit'")]),t._v(" should "),e("em",[t._v("not")]),t._v(" be used as an alternative to the "),e("code",[t._v("'exit'")]),t._v(" event\nunless the intention is to schedule additional work.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'beforeExit'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Process beforeExit event with code: '")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exit'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Process exit event with code: '")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This message is displayed first.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This message is displayed first.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Process beforeExit event with code: 0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Process exit event with code: 0")]),t._v("\n")])])]),e("h3",{attrs:{id:"event-disconnect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-disconnect"}},[t._v("#")]),t._v(" Event: 'disconnect'")]),t._v(" "),e("p",[t._v("If the Node.js process is spawned with an IPC channel (see the "),e("router-link",{attrs:{to:"/node/child_process.html"}},[t._v("Child Process")]),t._v("\nand "),e("router-link",{attrs:{to:"/node/cluster.html"}},[t._v("Cluster")]),t._v(" documentation), the "),e("code",[t._v("'disconnect'")]),t._v(" event will be emitted when\nthe IPC channel is closed.")],1),t._v(" "),e("h3",{attrs:{id:"event-exit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-exit"}},[t._v("#")]),t._v(" Event: 'exit'")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("code")]),t._v(" {integer}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'exit'")]),t._v(" event is emitted when the Node.js process is about to exit as a\nresult of either:")]),t._v(" "),e("ul",[e("li",[t._v("The "),e("code",[t._v("process.exit()")]),t._v(" method being called explicitly;")]),t._v(" "),e("li",[t._v("The Node.js event loop no longer having any additional work to perform.")])]),t._v(" "),e("p",[t._v("There is no way to prevent the exiting of the event loop at this point, and once\nall "),e("code",[t._v("'exit'")]),t._v(" listeners have finished running the Node.js process will terminate.")]),t._v(" "),e("p",[t._v("The listener callback function is invoked with the exit code specified either\nby the "),e("a",{attrs:{href:"#process_process_exitcode"}},[e("code",[t._v("process.exitCode")])]),t._v(" property, or the "),e("code",[t._v("exitCode")]),t._v(" argument passed to the\n"),e("a",{attrs:{href:"#process_process_exit_code"}},[e("code",[t._v("process.exit()")])]),t._v(" method.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exit'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("About to exit with code: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Listener functions "),e("strong",[t._v("must")]),t._v(" only perform "),e("strong",[t._v("synchronous")]),t._v(" operations. The Node.js\nprocess will exit immediately after calling the "),e("code",[t._v("'exit'")]),t._v(" event listeners\ncausing any additional work still queued in the event loop to be abandoned.\nIn the following example, for instance, the timeout will never occur:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exit'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will not run'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"event-message"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-message"}},[t._v("#")]),t._v(" Event: 'message'")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("message")]),t._v(" { Object | boolean | number | string | null } a parsed JSON object\nor a serializable primitive value.")]),t._v(" "),e("li",[e("code",[t._v("sendHandle")]),t._v(" {net.Server|net.Socket} a "),e("router-link",{attrs:{to:"/node/net.html#net_class_net_server"}},[e("code",[t._v("net.Server")])]),t._v(" or "),e("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[e("code",[t._v("net.Socket")])]),t._v("\nobject, or undefined.")],1)]),t._v(" "),e("p",[t._v("If the Node.js process is spawned with an IPC channel (see the "),e("router-link",{attrs:{to:"/node/child_process.html"}},[t._v("Child Process")]),t._v("\nand "),e("router-link",{attrs:{to:"/node/cluster.html"}},[t._v("Cluster")]),t._v(" documentation), the "),e("code",[t._v("'message'")]),t._v(" event is emitted whenever a\nmessage sent by a parent process using "),e("router-link",{attrs:{to:"/node/child_process.html#child_process_subprocess_send_message_sendhandle_options_callback"}},[e("code",[t._v("childprocess.send()")])]),t._v(" is received by\nthe child process.")],1),t._v(" "),e("p",[t._v("The message goes through serialization and parsing. The resulting message might\nnot be the same as what is originally sent.")]),t._v(" "),e("p",[t._v("If the "),e("code",[t._v("serialization")]),t._v(" option was set to "),e("code",[t._v("advanced")]),t._v(" used when spawning the\nprocess, the "),e("code",[t._v("message")]),t._v(" argument can contain data that JSON is not able\nto represent.\nSee "),e("router-link",{attrs:{to:"/node/child_process.html#child_process_advanced_serialization"}},[t._v("Advanced Serialization for "),e("code",[t._v("child_process")])]),t._v(" for more details.")],1),t._v(" "),e("h3",{attrs:{id:"event-multipleresolves"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-multipleresolves"}},[t._v("#")]),t._v(" Event: 'multipleResolves'")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("type")]),t._v(" {string} The resolution type. One of "),e("code",[t._v("'resolve'")]),t._v(" or "),e("code",[t._v("'reject'")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("promise")]),t._v(" {Promise} The promise that resolved or rejected more than once.")]),t._v(" "),e("li",[e("code",[t._v("value")]),t._v(" {any} The value with which the promise was either resolved or\nrejected after the original resolve.")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'multipleResolves'")]),t._v(" event is emitted whenever a "),e("code",[t._v("Promise")]),t._v(" has been either:")]),t._v(" "),e("ul",[e("li",[t._v("Resolved more than once.")]),t._v(" "),e("li",[t._v("Rejected more than once.")]),t._v(" "),e("li",[t._v("Rejected after resolve.")]),t._v(" "),e("li",[t._v("Resolved after reject.")])]),t._v(" "),e("p",[t._v("This is useful for tracking potential errors in an application while using the\n"),e("code",[t._v("Promise")]),t._v(" constructor, as multiple resolutions are silently swallowed. However,\nthe occurrence of this event does not necessarily indicate an error. For\nexample, "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Promise.race()")]),e("OutboundLink")],1),t._v(" can trigger a "),e("code",[t._v("'multipleResolves'")]),t._v(" event.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'multipleResolves'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reason")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reason"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'First call'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Swallowed resolve'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Swallowed reject'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Failed'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// resolve: Promise { 'First call' } 'Swallowed resolve'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reject: Promise { 'First call' } Error: Swallowed reject")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     at Promise (*)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     at new Promise (<anonymous>)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     at main (*)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First call")]),t._v("\n")])])]),e("h3",{attrs:{id:"event-rejectionhandled"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-rejectionhandled"}},[t._v("#")]),t._v(" Event: 'rejectionHandled'")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("promise")]),t._v(" {Promise} The late handled promise.")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'rejectionHandled'")]),t._v(" event is emitted whenever a "),e("code",[t._v("Promise")]),t._v(" has been rejected\nand an error handler was attached to it (using "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("promise.catch()")]),e("OutboundLink")],1),t._v(", for\nexample) later than one turn of the Node.js event loop.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("Promise")]),t._v(" object would have previously been emitted in an\n"),e("code",[t._v("'unhandledRejection'")]),t._v(" event, but during the course of processing gained a\nrejection handler.")]),t._v(" "),e("p",[t._v("There is no notion of a top level for a "),e("code",[t._v("Promise")]),t._v(" chain at which rejections can\nalways be handled. Being inherently asynchronous in nature, a "),e("code",[t._v("Promise")]),t._v("\nrejection can be handled at a future point in time — possibly much later than\nthe event loop turn it takes for the "),e("code",[t._v("'unhandledRejection'")]),t._v(" event to be emitted.")]),t._v(" "),e("p",[t._v("Another way of stating this is that, unlike in synchronous code where there is\nan ever-growing list of unhandled exceptions, with Promises there can be a\ngrowing-and-shrinking list of unhandled rejections.")]),t._v(" "),e("p",[t._v("In synchronous code, the "),e("code",[t._v("'uncaughtException'")]),t._v(" event is emitted when the list of\nunhandled exceptions grows.")]),t._v(" "),e("p",[t._v("In asynchronous code, the "),e("code",[t._v("'unhandledRejection'")]),t._v(" event is emitted when the list\nof unhandled rejections grows, and the "),e("code",[t._v("'rejectionHandled'")]),t._v(" event is emitted\nwhen the list of unhandled rejections shrinks.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" unhandledRejections "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unhandledRejection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("reason"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" promise")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  unhandledRejections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reason"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rejectionHandled'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("promise")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  unhandledRejections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("In this example, the "),e("code",[t._v("unhandledRejections")]),t._v(" "),e("code",[t._v("Map")]),t._v(" will grow and shrink over time,\nreflecting rejections that start unhandled and then become handled. It is\npossible to record such errors in an error log, either periodically (which is\nlikely best for long-running application) or upon process exit (which is likely\nmost convenient for scripts).")]),t._v(" "),e("h3",{attrs:{id:"event-uncaughtexception"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-uncaughtexception"}},[t._v("#")]),t._v(" Event: 'uncaughtException'")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("err")]),t._v(" {Error} The uncaught exception.")]),t._v(" "),e("li",[e("code",[t._v("origin")]),t._v(" {string} Indicates if the exception originates from an unhandled\nrejection or from synchronous errors. Can either be "),e("code",[t._v("'uncaughtException'")]),t._v(" or\n"),e("code",[t._v("'unhandledRejection'")]),t._v(".")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'uncaughtException'")]),t._v(" event is emitted when an uncaught JavaScript\nexception bubbles all the way back to the event loop. By default, Node.js\nhandles such exceptions by printing the stack trace to "),e("code",[t._v("stderr")]),t._v(" and exiting\nwith code 1, overriding any previously set "),e("a",{attrs:{href:"#process_process_exitcode"}},[e("code",[t._v("process.exitCode")])]),t._v(".\nAdding a handler for the "),e("code",[t._v("'uncaughtException'")]),t._v(" event overrides this default\nbehavior. Alternatively, change the "),e("a",{attrs:{href:"#process_process_exitcode"}},[e("code",[t._v("process.exitCode")])]),t._v(" in the\n"),e("code",[t._v("'uncaughtException'")]),t._v(" handler which will result in the process exiting with the\nprovided exit code. Otherwise, in the presence of such handler the process will\nexit with 0.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'uncaughtException'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" origin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Caught exception: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\\n")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Exception origin: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("origin"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will still run.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Intentionally cause an exception, but don't catch it.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nonexistentFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will not run.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h4",{attrs:{id:"warning-using-uncaughtexception-correctly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#warning-using-uncaughtexception-correctly"}},[t._v("#")]),t._v(" Warning: Using "),e("code",[t._v("'uncaughtException'")]),t._v(" correctly")]),t._v(" "),e("p",[e("code",[t._v("'uncaughtException'")]),t._v(" is a crude mechanism for exception handling\nintended to be used only as a last resort. The event "),e("em",[t._v("should not")]),t._v(" be used as\nan equivalent to "),e("code",[t._v("On Error Resume Next")]),t._v(". Unhandled exceptions inherently mean\nthat an application is in an undefined state. Attempting to resume application\ncode without properly recovering from the exception can cause additional\nunforeseen and unpredictable issues.")]),t._v(" "),e("p",[t._v("Exceptions thrown from within the event handler will not be caught. Instead the\nprocess will exit with a non-zero exit code and the stack trace will be printed.\nThis is to avoid infinite recursion.")]),t._v(" "),e("p",[t._v("Attempting to resume normally after an uncaught exception can be similar to\npulling out the power cord when upgrading a computer. Nine out of ten\ntimes, nothing happens. But the tenth time, the system becomes corrupted.")]),t._v(" "),e("p",[t._v("The correct use of "),e("code",[t._v("'uncaughtException'")]),t._v(" is to perform synchronous cleanup\nof allocated resources (e.g. file descriptors, handles, etc) before shutting\ndown the process. "),e("strong",[t._v("It is not safe to resume normal operation after\n"),e("code",[t._v("'uncaughtException'")]),t._v(".")])]),t._v(" "),e("p",[t._v("To restart a crashed application in a more reliable way, whether\n"),e("code",[t._v("'uncaughtException'")]),t._v(" is emitted or not, an external monitor should be employed\nin a separate process to detect application failures and recover or restart as\nneeded.")]),t._v(" "),e("h3",{attrs:{id:"event-unhandledrejection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-unhandledrejection"}},[t._v("#")]),t._v(" Event: 'unhandledRejection'")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("reason")]),t._v(" {Error|any} The object with which the promise was rejected\n(typically an "),e("router-link",{attrs:{to:"/node/errors.html#errors_class_error"}},[e("code",[t._v("Error")])]),t._v(" object).")],1),t._v(" "),e("li",[e("code",[t._v("promise")]),t._v(" {Promise} The rejected promise.")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'unhandledRejection'")]),t._v(" event is emitted whenever a "),e("code",[t._v("Promise")]),t._v(' is rejected and\nno error handler is attached to the promise within a turn of the event loop.\nWhen programming with Promises, exceptions are encapsulated as "rejected\npromises". Rejections can be caught and handled using '),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("promise.catch()")]),e("OutboundLink")],1),t._v(" and\nare propagated through a "),e("code",[t._v("Promise")]),t._v(" chain. The "),e("code",[t._v("'unhandledRejection'")]),t._v(" event is\nuseful for detecting and keeping track of promises that were rejected whose\nrejections have not yet been handled.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unhandledRejection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("reason"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" promise")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Unhandled Rejection at:'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reason:'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reason"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Application specific logging, throwing an error, or other logic here")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nsomePromise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reportToUser")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pasre")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note the typo (`pasre`)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// No `.catch()` or `.then()`")]),t._v("\n")])])]),e("p",[t._v("The following will also trigger the "),e("code",[t._v("'unhandledRejection'")]),t._v(" event to be\nemitted:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("SomeResource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initially set the loaded status to a rejected promise")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loaded "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Resource not yet loaded!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" resource "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeResource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no .catch or .then on resource.loaded for at least a turn")]),t._v("\n")])])]),e("p",[t._v("In this example case, it is possible to track the rejection as a developer error\nas would typically be the case for other "),e("code",[t._v("'unhandledRejection'")]),t._v(" events. To\naddress such failures, a non-operational\n"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v(".catch(() => { })")]),e("OutboundLink")],1),t._v(" handler may be attached to\n"),e("code",[t._v("resource.loaded")]),t._v(", which would prevent the "),e("code",[t._v("'unhandledRejection'")]),t._v(" event from\nbeing emitted.")]),t._v(" "),e("h3",{attrs:{id:"event-warning"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-warning"}},[t._v("#")]),t._v(" Event: 'warning'")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("warning")]),t._v(" {Error} Key properties of the warning are:\n"),e("ul",[e("li",[e("code",[t._v("name")]),t._v(" {string} The name of the warning. "),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("'Warning'")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("message")]),t._v(" {string} A system-provided description of the warning.")]),t._v(" "),e("li",[e("code",[t._v("stack")]),t._v(" {string} A stack trace to the location in the code where the warning\nwas issued.")])])])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("'warning'")]),t._v(" event is emitted whenever Node.js emits a process warning.")]),t._v(" "),e("p",[t._v("A process warning is similar to an error in that it describes exceptional\nconditions that are being brought to the user's attention. However, warnings\nare not part of the normal Node.js and JavaScript error handling flow.\nNode.js can emit warnings whenever it detects bad coding practices that could\nlead to sub-optimal application performance, bugs, or security vulnerabilities.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'warning'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("warning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print the warning name")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print the warning message")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print the stack trace")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("By default, Node.js will print process warnings to "),e("code",[t._v("stderr")]),t._v(". The "),e("code",[t._v("--no-warnings")]),t._v("\ncommand-line option can be used to suppress the default console output but the\n"),e("code",[t._v("'warning'")]),t._v(" event will still be emitted by the "),e("code",[t._v("process")]),t._v(" object.")]),t._v(" "),e("p",[t._v("The following example illustrates the warning that is printed to "),e("code",[t._v("stderr")]),t._v(" when\ntoo many listeners have been added to an event:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ node\n> events.defaultMaxListeners = 1;\n> process.on('foo', () => {});\n> process.on('foo', () => {});\n> (node:38638) MaxListenersExceededWarning: Possible EventEmitter memory leak\ndetected. 2 foo listeners added. Use emitter.setMaxListeners() to increase limit\n")])])]),e("p",[t._v("In contrast, the following example turns off the default warning output and\nadds a custom handler to the "),e("code",[t._v("'warning'")]),t._v(" event:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ node --no-warnings\n> const p = process.on('warning', (warning) => console.warn('Do not do that!'));\n> events.defaultMaxListeners = 1;\n> process.on('foo', () => {});\n> process.on('foo', () => {});\n> Do not do that!\n")])])]),e("p",[t._v("The "),e("code",[t._v("--trace-warnings")]),t._v(" command-line option can be used to have the default\nconsole output for warnings include the full stack trace of the warning.")]),t._v(" "),e("p",[t._v("Launching Node.js using the "),e("code",[t._v("--throw-deprecation")]),t._v(" command line flag will\ncause custom deprecation warnings to be thrown as exceptions.")]),t._v(" "),e("p",[t._v("Using the "),e("code",[t._v("--trace-deprecation")]),t._v(" command line flag will cause the custom\ndeprecation to be printed to "),e("code",[t._v("stderr")]),t._v(" along with the stack trace.")]),t._v(" "),e("p",[t._v("Using the "),e("code",[t._v("--no-deprecation")]),t._v(" command line flag will suppress all reporting\nof the custom deprecation.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("*-deprecation")]),t._v(" command line flags only affect warnings that use the name\n"),e("code",[t._v("'DeprecationWarning'")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"emitting-custom-warnings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emitting-custom-warnings"}},[t._v("#")]),t._v(" Emitting custom warnings")]),t._v(" "),e("p",[t._v("See the "),e("a",{attrs:{href:"#process_process_emitwarning_warning_type_code_ctor"}},[e("code",[t._v("process.emitWarning()")])]),t._v(" method for issuing\ncustom or application-specific warnings.")]),t._v(" "),e("h3",{attrs:{id:"signal-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#signal-events"}},[t._v("#")]),t._v(" Signal Events")]),t._v(" "),e("p",[t._v("Signal events will be emitted when the Node.js process receives a signal. Please\nrefer to signal(7) for a listing of standard POSIX signal names such as\n"),e("code",[t._v("'SIGINT'")]),t._v(", "),e("code",[t._v("'SIGHUP'")]),t._v(", etc.")]),t._v(" "),e("p",[t._v("The signal handler will receive the signal's name ("),e("code",[t._v("'SIGINT'")]),t._v(",\n"),e("code",[t._v("'SIGTERM'")]),t._v(", etc.) as the first argument.")]),t._v(" "),e("p",[t._v("The name of each event will be the uppercase common name for the signal (e.g.\n"),e("code",[t._v("'SIGINT'")]),t._v(" for "),e("code",[t._v("SIGINT")]),t._v(" signals).")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Begin reading from stdin so the process does not exit.")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGINT'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Received SIGINT. Press Control-D to exit.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Using a single function to handle multiple signals")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("signal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Received ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("signal"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGINT'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGTERM'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ul",[e("li",[e("code",[t._v("'SIGUSR1'")]),t._v(" is reserved by Node.js to start the "),e("router-link",{attrs:{to:"/node/debugger.html"}},[t._v("debugger")]),t._v(". It's possible to\ninstall a listener but doing so might interfere with the debugger.")],1),t._v(" "),e("li",[e("code",[t._v("'SIGTERM'")]),t._v(" and "),e("code",[t._v("'SIGINT'")]),t._v(" have default handlers on non-Windows platforms that\nreset the terminal mode before exiting with code "),e("code",[t._v("128 + signal number")]),t._v(". If one\nof these signals has a listener installed, its default behavior will be\nremoved (Node.js will no longer exit).")]),t._v(" "),e("li",[e("code",[t._v("'SIGPIPE'")]),t._v(" is ignored by default. It can have a listener installed.")]),t._v(" "),e("li",[e("code",[t._v("'SIGHUP'")]),t._v(" is generated on Windows when the console window is closed, and on\nother platforms under various similar conditions. See signal(7). It can have a\nlistener installed, however Node.js will be unconditionally terminated by\nWindows about 10 seconds later. On non-Windows platforms, the default\nbehavior of "),e("code",[t._v("SIGHUP")]),t._v(" is to terminate Node.js, but once a listener has been\ninstalled its default behavior will be removed.")]),t._v(" "),e("li",[e("code",[t._v("'SIGTERM'")]),t._v(" is not supported on Windows, it can be listened on.")]),t._v(" "),e("li",[e("code",[t._v("'SIGINT'")]),t._v(" from the terminal is supported on all platforms, and can usually be\ngenerated with "),e("code",[t._v("<Ctrl>+C")]),t._v(" (though this may be configurable). It is not\ngenerated when terminal raw mode is enabled.")]),t._v(" "),e("li",[e("code",[t._v("'SIGBREAK'")]),t._v(" is delivered on Windows when "),e("code",[t._v("<Ctrl>+<Break>")]),t._v(" is pressed, on\nnon-Windows platforms it can be listened on, but there is no way to send or\ngenerate it.")]),t._v(" "),e("li",[e("code",[t._v("'SIGWINCH'")]),t._v(" is delivered when the console has been resized. On Windows, this\nwill only happen on write to the console when the cursor is being moved, or\nwhen a readable tty is used in raw mode.")]),t._v(" "),e("li",[e("code",[t._v("'SIGKILL'")]),t._v(" cannot have a listener installed, it will unconditionally\nterminate Node.js on all platforms.")]),t._v(" "),e("li",[e("code",[t._v("'SIGSTOP'")]),t._v(" cannot have a listener installed.")]),t._v(" "),e("li",[e("code",[t._v("'SIGBUS'")]),t._v(", "),e("code",[t._v("'SIGFPE'")]),t._v(", "),e("code",[t._v("'SIGSEGV'")]),t._v(" and "),e("code",[t._v("'SIGILL'")]),t._v(", when not raised\nartificially using kill(2), inherently leave the process in a state from\nwhich it is not safe to attempt to call JS listeners. Doing so might lead to\nthe process hanging in an endless loop, since listeners attached using\n"),e("code",[t._v("process.on()")]),t._v(" are called asynchronously and therefore unable to correct the\nunderlying problem.")])]),t._v(" "),e("p",[t._v("Windows does not support sending signals, but Node.js offers some emulation\nwith "),e("a",{attrs:{href:"#process_process_kill_pid_signal"}},[e("code",[t._v("process.kill()")])]),t._v(", and "),e("router-link",{attrs:{to:"/node/child_process.html#child_process_subprocess_kill_signal"}},[e("code",[t._v("subprocess.kill()")])]),t._v(". Sending signal "),e("code",[t._v("0")]),t._v(" can\nbe used to test for the existence of a process. Sending "),e("code",[t._v("SIGINT")]),t._v(", "),e("code",[t._v("SIGTERM")]),t._v(",\nand "),e("code",[t._v("SIGKILL")]),t._v(" cause the unconditional termination of the target process.")],1),t._v(" "),e("h2",{attrs:{id:"process-abort"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-abort"}},[t._v("#")]),t._v(" process.abort()")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.abort()")]),t._v(" method causes the Node.js process to exit immediately and\ngenerate a core file.")]),t._v(" "),e("p",[t._v("This feature is not available in "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.")],1),t._v(" "),e("h2",{attrs:{id:"process-allowednodeenvironmentflags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-allowednodeenvironmentflags"}},[t._v("#")]),t._v(" process.allowedNodeEnvironmentFlags")]),t._v(" "),e("ul",[e("li",[t._v("{Set}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.allowedNodeEnvironmentFlags")]),t._v(" property is a special,\nread-only "),e("code",[t._v("Set")]),t._v(" of flags allowable within the "),e("router-link",{attrs:{to:"/node/cli.html#cli_node_options_options"}},[e("code",[t._v("NODE_OPTIONS")])]),t._v("\nenvironment variable.")],1),t._v(" "),e("p",[e("code",[t._v("process.allowedNodeEnvironmentFlags")]),t._v(" extends "),e("code",[t._v("Set")]),t._v(", but overrides\n"),e("code",[t._v("Set.prototype.has")]),t._v(" to recognize several different possible flag\nrepresentations.  "),e("code",[t._v("process.allowedNodeEnvironmentFlags.has()")]),t._v(" will\nreturn "),e("code",[t._v("true")]),t._v(" in the following cases:")]),t._v(" "),e("ul",[e("li",[t._v("Flags may omit leading single ("),e("code",[t._v("-")]),t._v(") or double ("),e("code",[t._v("--")]),t._v(") dashes; e.g.,\n"),e("code",[t._v("inspect-brk")]),t._v(" for "),e("code",[t._v("--inspect-brk")]),t._v(", or "),e("code",[t._v("r")]),t._v(" for "),e("code",[t._v("-r")]),t._v(".")]),t._v(" "),e("li",[t._v("Flags passed through to V8 (as listed in "),e("code",[t._v("--v8-options")]),t._v(") may replace\none or more "),e("em",[t._v("non-leading")]),t._v(" dashes for an underscore, or vice-versa;\ne.g., "),e("code",[t._v("--perf_basic_prof")]),t._v(", "),e("code",[t._v("--perf-basic-prof")]),t._v(", "),e("code",[t._v("--perf_basic-prof")]),t._v(",\netc.")]),t._v(" "),e("li",[t._v("Flags may contain one or more equals ("),e("code",[t._v("=")]),t._v(") characters; all\ncharacters after and including the first equals will be ignored;\ne.g., "),e("code",[t._v("--stack-trace-limit=100")]),t._v(".")]),t._v(" "),e("li",[t._v("Flags "),e("em",[t._v("must")]),t._v(" be allowable within "),e("router-link",{attrs:{to:"/node/cli.html#cli_node_options_options"}},[e("code",[t._v("NODE_OPTIONS")])]),t._v(".")],1)]),t._v(" "),e("p",[t._v("When iterating over "),e("code",[t._v("process.allowedNodeEnvironmentFlags")]),t._v(", flags will\nappear only "),e("em",[t._v("once")]),t._v("; each will begin with one or more dashes. Flags\npassed through to V8 will contain underscores instead of non-leading\ndashes:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("allowedNodeEnvironmentFlags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("flag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -r")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --inspect-brk")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --abort_on_uncaught_exception")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("The methods "),e("code",[t._v("add()")]),t._v(", "),e("code",[t._v("clear()")]),t._v(", and "),e("code",[t._v("delete()")]),t._v(" of\n"),e("code",[t._v("process.allowedNodeEnvironmentFlags")]),t._v(" do nothing, and will fail\nsilently.")]),t._v(" "),e("p",[t._v("If Node.js was compiled "),e("em",[t._v("without")]),t._v(" "),e("router-link",{attrs:{to:"/node/cli.html#cli_node_options_options"}},[e("code",[t._v("NODE_OPTIONS")])]),t._v(" support (shown in\n"),e("a",{attrs:{href:"#process_process_config"}},[e("code",[t._v("process.config")])]),t._v("), "),e("code",[t._v("process.allowedNodeEnvironmentFlags")]),t._v(" will\ncontain what "),e("em",[t._v("would have")]),t._v(" been allowable.")],1),t._v(" "),e("h2",{attrs:{id:"process-arch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-arch"}},[t._v("#")]),t._v(" process.arch")]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("The operating system CPU architecture for which the Node.js binary was compiled.\nPossible values are: "),e("code",[t._v("'arm'")]),t._v(", "),e("code",[t._v("'arm64'")]),t._v(", "),e("code",[t._v("'ia32'")]),t._v(", "),e("code",[t._v("'mips'")]),t._v(","),e("code",[t._v("'mipsel'")]),t._v(", "),e("code",[t._v("'ppc'")]),t._v(",\n"),e("code",[t._v("'ppc64'")]),t._v(", "),e("code",[t._v("'s390'")]),t._v(", "),e("code",[t._v("'s390x'")]),t._v(", "),e("code",[t._v("'x32'")]),t._v(", and "),e("code",[t._v("'x64'")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("This processor architecture is ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arch"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-argv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-argv"}},[t._v("#")]),t._v(" process.argv")]),t._v(" "),e("ul",[e("li",[t._v("{string[]}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.argv")]),t._v(" property returns an array containing the command line\narguments passed when the Node.js process was launched. The first element will\nbe "),e("a",{attrs:{href:"#process_process_execpath"}},[e("code",[t._v("process.execPath")])]),t._v(". See "),e("code",[t._v("process.argv0")]),t._v(" if access to the original value\nof "),e("code",[t._v("argv[0]")]),t._v(" is needed. The second element will be the path to the JavaScript\nfile being executed. The remaining elements will be any additional command line\narguments.")]),t._v(" "),e("p",[t._v("For example, assuming the following script for "),e("code",[t._v("process-args.js")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print process.argv")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(": ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("val"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Launching the Node.js process as:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ node process-args.js one two=three four\n")])])]),e("p",[t._v("Would generate the output:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("0: /usr/local/bin/node\n1: /Users/mjr/work/node/process-args.js\n2: one\n3: two=three\n4: four\n")])])]),e("h2",{attrs:{id:"process-argv0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-argv0"}},[t._v("#")]),t._v(" process.argv0")]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.argv0")]),t._v(" property stores a read-only copy of the original value of\n"),e("code",[t._v("argv[0]")]),t._v(" passed when Node.js starts.")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ bash -c 'exec -a customArgv0 ./node'\n> process.argv[0]\n'/Volumes/code/external/node/out/Release/node'\n> process.argv0\n'customArgv0'\n")])])]),e("h2",{attrs:{id:"process-channel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-channel"}},[t._v("#")]),t._v(" process.channel")]),t._v(" "),e("ul",[e("li",[t._v("{Object}")])]),t._v(" "),e("p",[t._v("If the Node.js process was spawned with an IPC channel (see the\n"),e("router-link",{attrs:{to:"/node/child_process.html"}},[t._v("Child Process")]),t._v(" documentation), the "),e("code",[t._v("process.channel")]),t._v("\nproperty is a reference to the IPC channel. If no IPC channel exists, this\nproperty is "),e("code",[t._v("undefined")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"process-chdir-directory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-chdir-directory"}},[t._v("#")]),t._v(" process.chdir(directory)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("directory")]),t._v(" {string}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.chdir()")]),t._v(" method changes the current working directory of the\nNode.js process or throws an exception if doing so fails (for instance, if\nthe specified "),e("code",[t._v("directory")]),t._v(" does not exist).")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Starting directory: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cwd")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chdir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/tmp'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("New directory: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cwd")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("chdir: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This feature is not available in "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.")],1),t._v(" "),e("h2",{attrs:{id:"process-config"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-config"}},[t._v("#")]),t._v(" process.config")]),t._v(" "),e("ul",[e("li",[t._v("{Object}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.config")]),t._v(" property returns an "),e("code",[t._v("Object")]),t._v(" containing the JavaScript\nrepresentation of the configure options used to compile the current Node.js\nexecutable. This is the same as the "),e("code",[t._v("config.gypi")]),t._v(" file that was produced when\nrunning the "),e("code",[t._v("./configure")]),t._v(" script.")]),t._v(" "),e("p",[t._v("An example of the possible output looks like:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  target_defaults"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" cflags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     default_configuration"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Release'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     defines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     include_dirs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     libraries"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  variables"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     host_arch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x64'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     napi_build_version"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_install_npm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_prefix"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_shared_cares"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_shared_http_parser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_shared_libuv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_shared_zlib"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_use_dtrace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_use_openssl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     node_shared_openssl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     strict_aliasing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     target_arch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x64'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     v8_use_snapshot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("process.config")]),t._v(" property is "),e("strong",[t._v("not")]),t._v(" read-only and there are existing\nmodules in the ecosystem that are known to extend, modify, or entirely replace\nthe value of "),e("code",[t._v("process.config")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"process-connected"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-connected"}},[t._v("#")]),t._v(" process.connected")]),t._v(" "),e("ul",[e("li",[t._v("{boolean}")])]),t._v(" "),e("p",[t._v("If the Node.js process is spawned with an IPC channel (see the "),e("router-link",{attrs:{to:"/node/child_process.html"}},[t._v("Child Process")]),t._v("\nand "),e("router-link",{attrs:{to:"/node/cluster.html"}},[t._v("Cluster")]),t._v(" documentation), the "),e("code",[t._v("process.connected")]),t._v(" property will return\n"),e("code",[t._v("true")]),t._v(" so long as the IPC channel is connected and will return "),e("code",[t._v("false")]),t._v(" after\n"),e("code",[t._v("process.disconnect()")]),t._v(" is called.")],1),t._v(" "),e("p",[t._v("Once "),e("code",[t._v("process.connected")]),t._v(" is "),e("code",[t._v("false")]),t._v(", it is no longer possible to send messages\nover the IPC channel using "),e("code",[t._v("process.send()")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"process-cpuusage-previousvalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-cpuusage-previousvalue"}},[t._v("#")]),t._v(" process.cpuUsage([previousValue])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("previousValue")]),t._v(" {Object} A previous return value from calling\n"),e("code",[t._v("process.cpuUsage()")])]),t._v(" "),e("li",[t._v("Returns: {Object}\n"),e("ul",[e("li",[e("code",[t._v("user")]),t._v(" {integer}")]),t._v(" "),e("li",[e("code",[t._v("system")]),t._v(" {integer}")])])])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.cpuUsage()")]),t._v(" method returns the user and system CPU time usage of\nthe current process, in an object with properties "),e("code",[t._v("user")]),t._v(" and "),e("code",[t._v("system")]),t._v(", whose\nvalues are microsecond values (millionth of a second). These values measure time\nspent in user and system code respectively, and may end up being greater than\nactual elapsed time if multiple CPU cores are performing work for this process.")]),t._v(" "),e("p",[t._v("The result of a previous call to "),e("code",[t._v("process.cpuUsage()")]),t._v(" can be passed as the\nargument to the function, to get a diff reading.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" startUsage "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cpuUsage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { user: 38579, system: 6986 }")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// spin the CPU for 500 milliseconds")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" now "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" now "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cpuUsage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("startUsage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { user: 514883, system: 11226 }")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-cwd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-cwd"}},[t._v("#")]),t._v(" process.cwd()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {string}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.cwd()")]),t._v(" method returns the current working directory of the Node.js\nprocess.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current directory: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cwd")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-debugport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-debugport"}},[t._v("#")]),t._v(" process.debugPort")]),t._v(" "),e("ul",[e("li",[t._v("{number}")])]),t._v(" "),e("p",[t._v("The port used by Node.js's debugger when enabled.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debugPort "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5858")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-disconnect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-disconnect"}},[t._v("#")]),t._v(" process.disconnect()")]),t._v(" "),e("p",[t._v("If the Node.js process is spawned with an IPC channel (see the "),e("router-link",{attrs:{to:"/node/child_process.html"}},[t._v("Child Process")]),t._v("\nand "),e("router-link",{attrs:{to:"/node/cluster.html"}},[t._v("Cluster")]),t._v(" documentation), the "),e("code",[t._v("process.disconnect()")]),t._v(" method will close the\nIPC channel to the parent process, allowing the child process to exit gracefully\nonce there are no other connections keeping it alive.")],1),t._v(" "),e("p",[t._v("The effect of calling "),e("code",[t._v("process.disconnect()")]),t._v(" is the same as calling\n"),e("router-link",{attrs:{to:"/node/child_process.html#child_process_subprocess_disconnect"}},[e("code",[t._v("ChildProcess.disconnect()")])]),t._v(" from the parent process.")],1),t._v(" "),e("p",[t._v("If the Node.js process was not spawned with an IPC channel,\n"),e("code",[t._v("process.disconnect()")]),t._v(" will be "),e("code",[t._v("undefined")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"process-dlopen-module-filename-flags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-dlopen-module-filename-flags"}},[t._v("#")]),t._v(" process.dlopen(module, filename[, flags])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("module")]),t._v(" {Object}")]),t._v(" "),e("li",[e("code",[t._v("filename")]),t._v(" {string}")]),t._v(" "),e("li",[e("code",[t._v("flags")]),t._v(" {os.constants.dlopen} "),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("os.constants.dlopen.RTLD_LAZY")])])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.dlopen()")]),t._v(" method allows to dynamically load shared\nobjects. It is primarily used by "),e("code",[t._v("require()")]),t._v(" to load\nC++ Addons, and should not be used directly, except in special\ncases. In other words, "),e("router-link",{attrs:{to:"/node/globals.html#globals_require"}},[e("code",[t._v("require()")])]),t._v(" should be preferred over\n"),e("code",[t._v("process.dlopen()")]),t._v(", unless there are specific reasons.")],1),t._v(" "),e("p",[t._v("The "),e("code",[t._v("flags")]),t._v(" argument is an integer that allows to specify dlopen\nbehavior. See the "),e("router-link",{attrs:{to:"/node/os.html#os_dlopen_constants"}},[e("code",[t._v("os.constants.dlopen")])]),t._v(" documentation for details.")],1),t._v(" "),e("p",[t._v("If there are specific reasons to use "),e("code",[t._v("process.dlopen()")]),t._v(" (for instance,\nto specify dlopen flags), it's often useful to use "),e("router-link",{attrs:{to:"/node/modules.html#modules_require_resolve_request_options"}},[e("code",[t._v("require.resolve()")])]),t._v("\nto look up the module's path.")],1),t._v(" "),e("p",[t._v("An important drawback when calling "),e("code",[t._v("process.dlopen()")]),t._v(" is that the "),e("code",[t._v("module")]),t._v("\ninstance must be passed. Functions exported by the C++ Addon will be accessible\nvia "),e("code",[t._v("module.exports")]),t._v(".")]),t._v(" "),e("p",[t._v("The example below shows how to load a C++ Addon, named as "),e("code",[t._v("binding")]),t._v(",\nthat exports a "),e("code",[t._v("foo")]),t._v(" function. All the symbols will be loaded before\nthe call returns, by passing the "),e("code",[t._v("RTLD_NOW")]),t._v(" constant. In this example\nthe constant is assumed to be available.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" os "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'os'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dlopen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'binding'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n               os"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constants"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dlopen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RTLD_NOW")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-emitwarning-warning-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-emitwarning-warning-options"}},[t._v("#")]),t._v(" process.emitWarning(warning[, options])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("warning")]),t._v(" {string|Error} The warning to emit.")]),t._v(" "),e("li",[e("code",[t._v("options")]),t._v(" {Object}\n"),e("ul",[e("li",[e("code",[t._v("type")]),t._v(" {string} When "),e("code",[t._v("warning")]),t._v(" is a "),e("code",[t._v("String")]),t._v(", "),e("code",[t._v("type")]),t._v(" is the name to use\nfor the "),e("em",[t._v("type")]),t._v(" of warning being emitted. "),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("'Warning'")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("code")]),t._v(" {string} A unique identifier for the warning instance being emitted.")]),t._v(" "),e("li",[e("code",[t._v("ctor")]),t._v(" {Function} When "),e("code",[t._v("warning")]),t._v(" is a "),e("code",[t._v("String")]),t._v(", "),e("code",[t._v("ctor")]),t._v(" is an optional\nfunction used to limit the generated stack trace. "),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("process.emitWarning")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("detail")]),t._v(" {string} Additional text to include with the error.")])])])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.emitWarning()")]),t._v(" method can be used to emit custom or application\nspecific process warnings. These can be listened for by adding a handler to the\n"),e("a",{attrs:{href:"#process_event_warning"}},[e("code",[t._v("'warning'")])]),t._v(" event.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emit a warning with a code and additional detail.")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something happened!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MY_WARNING'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  detail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is some additional information'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emits:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (node:56338) [MY_WARNING] Warning: Something happened!")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is some additional information")]),t._v("\n")])])]),e("p",[t._v("In this example, an "),e("code",[t._v("Error")]),t._v(" object is generated internally by\n"),e("code",[t._v("process.emitWarning()")]),t._v(" and passed through to the\n"),e("a",{attrs:{href:"#process_event_warning"}},[e("code",[t._v("'warning'")])]),t._v(" handler.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'warning'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("warning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Warning'")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Something happened!'")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'MY_WARNING'")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stack trace")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("detail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'This is some additional information'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("If "),e("code",[t._v("warning")]),t._v(" is passed as an "),e("code",[t._v("Error")]),t._v(" object, the "),e("code",[t._v("options")]),t._v(" argument is ignored.")]),t._v(" "),e("h2",{attrs:{id:"process-emitwarning-warning-type-code-ctor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-emitwarning-warning-type-code-ctor"}},[t._v("#")]),t._v(" process.emitWarning(warning[, type[, code]][, ctor])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("warning")]),t._v(" {string|Error} The warning to emit.")]),t._v(" "),e("li",[e("code",[t._v("type")]),t._v(" {string} When "),e("code",[t._v("warning")]),t._v(" is a "),e("code",[t._v("String")]),t._v(", "),e("code",[t._v("type")]),t._v(" is the name to use\nfor the "),e("em",[t._v("type")]),t._v(" of warning being emitted. "),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("'Warning'")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("code")]),t._v(" {string} A unique identifier for the warning instance being emitted.")]),t._v(" "),e("li",[e("code",[t._v("ctor")]),t._v(" {Function} When "),e("code",[t._v("warning")]),t._v(" is a "),e("code",[t._v("String")]),t._v(", "),e("code",[t._v("ctor")]),t._v(" is an optional\nfunction used to limit the generated stack trace. "),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("process.emitWarning")]),t._v(".")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.emitWarning()")]),t._v(" method can be used to emit custom or application\nspecific process warnings. These can be listened for by adding a handler to the\n"),e("a",{attrs:{href:"#process_event_warning"}},[e("code",[t._v("'warning'")])]),t._v(" event.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emit a warning using a string.")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something happened!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emits: (node: 56338) Warning: Something happened!")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emit a warning using a string and a type.")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something Happened!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CustomWarning'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emits: (node:56338) CustomWarning: Something Happened!")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something happened!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CustomWarning'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WARN001'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emits: (node:56338) [WARN001] CustomWarning: Something happened!")]),t._v("\n")])])]),e("p",[t._v("In each of the previous examples, an "),e("code",[t._v("Error")]),t._v(" object is generated internally by\n"),e("code",[t._v("process.emitWarning()")]),t._v(" and passed through to the "),e("a",{attrs:{href:"#process_event_warning"}},[e("code",[t._v("'warning'")])]),t._v("\nhandler.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'warning'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("warning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("If "),e("code",[t._v("warning")]),t._v(" is passed as an "),e("code",[t._v("Error")]),t._v(" object, it will be passed through to the\n"),e("code",[t._v("'warning'")]),t._v(" event handler unmodified (and the optional "),e("code",[t._v("type")]),t._v(",\n"),e("code",[t._v("code")]),t._v(" and "),e("code",[t._v("ctor")]),t._v(" arguments will be ignored):")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emit a warning using an Error object.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myWarning "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something happened!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use the Error name property to specify the type name")]),t._v("\nmyWarning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CustomWarning'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyWarning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WARN001'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myWarning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emits: (node:56338) [WARN001] CustomWarning: Something happened!")]),t._v("\n")])])]),e("p",[t._v("A "),e("code",[t._v("TypeError")]),t._v(" is thrown if "),e("code",[t._v("warning")]),t._v(" is anything other than a string or "),e("code",[t._v("Error")]),t._v("\nobject.")]),t._v(" "),e("p",[t._v("While process warnings use "),e("code",[t._v("Error")]),t._v(" objects, the process warning\nmechanism is "),e("strong",[t._v("not")]),t._v(" a replacement for normal error handling mechanisms.")]),t._v(" "),e("p",[t._v("The following additional handling is implemented if the warning "),e("code",[t._v("type")]),t._v(" is\n"),e("code",[t._v("'DeprecationWarning'")]),t._v(":")]),t._v(" "),e("ul",[e("li",[t._v("If the "),e("code",[t._v("--throw-deprecation")]),t._v(" command-line flag is used, the deprecation\nwarning is thrown as an exception rather than being emitted as an event.")]),t._v(" "),e("li",[t._v("If the "),e("code",[t._v("--no-deprecation")]),t._v(" command-line flag is used, the deprecation\nwarning is suppressed.")]),t._v(" "),e("li",[t._v("If the "),e("code",[t._v("--trace-deprecation")]),t._v(" command-line flag is used, the deprecation\nwarning is printed to "),e("code",[t._v("stderr")]),t._v(" along with the full stack trace.")])]),t._v(" "),e("h3",{attrs:{id:"avoiding-duplicate-warnings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#avoiding-duplicate-warnings"}},[t._v("#")]),t._v(" Avoiding duplicate warnings")]),t._v(" "),e("p",[t._v("As a best practice, warnings should be emitted only once per process. To do\nso, it is recommended to place the "),e("code",[t._v("emitWarning()")]),t._v(" behind a simple boolean\nflag as illustrated in the example below:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitMyWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("emitMyWarning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("warned"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    emitMyWarning"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("warned "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Only warn once!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitMyWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emits: (node: 56339) Warning: Only warn once!")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emitMyWarning")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emits nothing")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-env"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-env"}},[t._v("#")]),t._v(" process.env")]),t._v(" "),e("ul",[e("li",[t._v("{Object}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.env")]),t._v(" property returns an object containing the user environment.\nSee environ(7).")]),t._v(" "),e("p",[t._v("An example of this object looks like:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TERM")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xterm-256color'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SHELL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/local/bin/bash'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USER")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'maciej'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PATH")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~/.bin/:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PWD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/Users/maciej'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EDITOR")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vim'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SHLVL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOME")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/Users/maciej'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOGNAME")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'maciej'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/local/bin/node'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("It is possible to modify this object, but such modifications will not be\nreflected outside the Node.js process, or (unless explicitly requested)\nto other "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.\nIn other words, the following example would not work:")],1),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ node -e 'process.env.foo = \"bar\"' && echo $foo\n")])])]),e("p",[t._v("While the following will:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Assigning a property on "),e("code",[t._v("process.env")]),t._v(" will implicitly convert the value\nto a string. "),e("strong",[t._v("This behavior is deprecated.")]),t._v(" Future versions of Node.js may\nthrow an error when the value is not a string, number, or boolean.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 'null'")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 'undefined'")]),t._v("\n")])])]),e("p",[t._v("Use "),e("code",[t._v("delete")]),t._v(" to delete a property from "),e("code",[t._v("process.env")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEST")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEST")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEST")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => undefined")]),t._v("\n")])])]),e("p",[t._v("On Windows operating systems, environment variables are case-insensitive.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEST")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\n")])])]),e("p",[t._v("Unless explicitly specified when creating a "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" instance,\neach "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" thread has its own copy of "),e("code",[t._v("process.env")]),t._v(", based on its\nparent thread’s "),e("code",[t._v("process.env")]),t._v(", or whatever was specified as the "),e("code",[t._v("env")]),t._v(" option\nto the "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" constructor. Changes to "),e("code",[t._v("process.env")]),t._v(" will not be visible\nacross "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads, and only the main thread can make changes that\nare visible to the operating system or to native add-ons.")],1),t._v(" "),e("h2",{attrs:{id:"process-execargv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-execargv"}},[t._v("#")]),t._v(" process.execArgv")]),t._v(" "),e("ul",[e("li",[t._v("{string[]}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.execArgv")]),t._v(" property returns the set of Node.js-specific command-line\noptions passed when the Node.js process was launched. These options do not\nappear in the array returned by the "),e("a",{attrs:{href:"#process_process_argv"}},[e("code",[t._v("process.argv")])]),t._v(" property, and do not\ninclude the Node.js executable, the name of the script, or any options following\nthe script name. These options are useful in order to spawn child processes with\nthe same execution environment as the parent.")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ node --harmony script.js --version\n")])])]),e("p",[t._v("Results in "),e("code",[t._v("process.execArgv")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--harmony'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("And "),e("code",[t._v("process.argv")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/local/bin/node'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--version'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-execpath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-execpath"}},[t._v("#")]),t._v(" process.execPath")]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.execPath")]),t._v(" property returns the absolute pathname of the executable\nthat started the Node.js process.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/local/bin/node'")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-exit-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-exit-code"}},[t._v("#")]),t._v(" process.exit([code])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("code")]),t._v(" {integer} The exit code. "),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("0")]),t._v(".")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.exit()")]),t._v(" method instructs Node.js to terminate the process\nsynchronously with an exit status of "),e("code",[t._v("code")]),t._v(". If "),e("code",[t._v("code")]),t._v(" is omitted, exit uses\neither the 'success' code "),e("code",[t._v("0")]),t._v(" or the value of "),e("code",[t._v("process.exitCode")]),t._v(" if it has been\nset. Node.js will not terminate until all the "),e("a",{attrs:{href:"#process_event_exit"}},[e("code",[t._v("'exit'")])]),t._v(" event listeners are\ncalled.")]),t._v(" "),e("p",[t._v("To exit with a 'failure' code:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("The shell that executed Node.js should see the exit code as "),e("code",[t._v("1")]),t._v(".")]),t._v(" "),e("p",[t._v("Calling "),e("code",[t._v("process.exit()")]),t._v(" will force the process to exit as quickly as possible\neven if there are still asynchronous operations pending that have not yet\ncompleted fully, including I/O operations to "),e("code",[t._v("process.stdout")]),t._v(" and\n"),e("code",[t._v("process.stderr")]),t._v(".")]),t._v(" "),e("p",[t._v("In most situations, it is not actually necessary to call "),e("code",[t._v("process.exit()")]),t._v("\nexplicitly. The Node.js process will exit on its own "),e("em",[t._v("if there is no additional\nwork pending")]),t._v(" in the event loop. The "),e("code",[t._v("process.exitCode")]),t._v(" property can be set to\ntell the process which exit code to use when the process exits gracefully.")]),t._v(" "),e("p",[t._v("For instance, the following example illustrates a "),e("em",[t._v("misuse")]),t._v(" of the\n"),e("code",[t._v("process.exit()")]),t._v(" method that could lead to data printed to stdout being\ntruncated and lost:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is an example of what *not* to do:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("someConditionNotMet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printUsageToStdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The reason this is problematic is because writes to "),e("code",[t._v("process.stdout")]),t._v(" in Node.js\nare sometimes "),e("em",[t._v("asynchronous")]),t._v(" and may occur over multiple ticks of the Node.js\nevent loop. Calling "),e("code",[t._v("process.exit()")]),t._v(", however, forces the process to exit\n"),e("em",[t._v("before")]),t._v(" those additional writes to "),e("code",[t._v("stdout")]),t._v(" can be performed.")]),t._v(" "),e("p",[t._v("Rather than calling "),e("code",[t._v("process.exit()")]),t._v(" directly, the code "),e("em",[t._v("should")]),t._v(" set the\n"),e("code",[t._v("process.exitCode")]),t._v(" and allow the process to exit naturally by avoiding\nscheduling any additional work for the event loop:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// How to properly set the exit code while letting")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the process exit gracefully.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("someConditionNotMet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printUsageToStdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exitCode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("If it is necessary to terminate the Node.js process due to an error condition,\nthrowing an "),e("em",[t._v("uncaught")]),t._v(" error and allowing the process to terminate accordingly\nis safer than calling "),e("code",[t._v("process.exit()")]),t._v(".")]),t._v(" "),e("p",[t._v("In "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads, this function stops the current thread rather\nthan the current process.")],1),t._v(" "),e("h2",{attrs:{id:"process-exitcode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-exitcode"}},[t._v("#")]),t._v(" process.exitCode")]),t._v(" "),e("ul",[e("li",[t._v("{integer}")])]),t._v(" "),e("p",[t._v("A number which will be the process exit code, when the process either\nexits gracefully, or is exited via "),e("a",{attrs:{href:"#process_process_exit_code"}},[e("code",[t._v("process.exit()")])]),t._v(" without specifying\na code.")]),t._v(" "),e("p",[t._v("Specifying a code to "),e("a",{attrs:{href:"#process_process_exit_code"}},[e("code",[t._v("process.exit(code)")])]),t._v(" will override any\nprevious setting of "),e("code",[t._v("process.exitCode")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"process-getegid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-getegid"}},[t._v("#")]),t._v(" process.getegid()")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.getegid()")]),t._v(" method returns the numerical effective group identity\nof the Node.js process. (See getegid(2).)")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getegid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current gid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getegid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).")]),t._v(" "),e("h2",{attrs:{id:"process-geteuid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-geteuid"}},[t._v("#")]),t._v(" process.geteuid()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {Object}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.geteuid()")]),t._v(" method returns the numerical effective user identity of\nthe process. (See geteuid(2).)")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("geteuid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current uid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("geteuid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).")]),t._v(" "),e("h2",{attrs:{id:"process-getgid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-getgid"}},[t._v("#")]),t._v(" process.getgid()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {Object}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.getgid()")]),t._v(" method returns the numerical group identity of the\nprocess. (See getgid(2).)")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getgid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current gid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getgid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).")]),t._v(" "),e("h2",{attrs:{id:"process-getgroups"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-getgroups"}},[t._v("#")]),t._v(" process.getgroups()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {integer[]}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.getgroups()")]),t._v(" method returns an array with the supplementary group\nIDs. POSIX leaves it unspecified if the effective group ID is included but\nNode.js ensures it always is.")]),t._v(" "),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).")]),t._v(" "),e("h2",{attrs:{id:"process-getuid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-getuid"}},[t._v("#")]),t._v(" process.getuid()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {integer}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.getuid()")]),t._v(" method returns the numeric user identity of the process.\n(See getuid(2).)")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getuid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current uid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getuid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).")]),t._v(" "),e("h2",{attrs:{id:"process-hasuncaughtexceptioncapturecallback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-hasuncaughtexceptioncapturecallback"}},[t._v("#")]),t._v(" process.hasUncaughtExceptionCaptureCallback()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {boolean}")])]),t._v(" "),e("p",[t._v("Indicates whether a callback has been set using\n"),e("router-link",{attrs:{to:"/node/process.html#process_process_setuncaughtexceptioncapturecallback_fn"}},[e("code",[t._v("process.setUncaughtExceptionCaptureCallback()")])]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"process-hrtime-time"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-hrtime-time"}},[t._v("#")]),t._v(" process.hrtime([time])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("time")]),t._v(" {integer[]} The result of a previous call to "),e("code",[t._v("process.hrtime()")])]),t._v(" "),e("li",[t._v("Returns: {integer[]}")])]),t._v(" "),e("p",[t._v("This is the legacy version of "),e("a",{attrs:{href:"#process_process_hrtime_bigint"}},[e("code",[t._v("process.hrtime.bigint()")])]),t._v("\nbefore "),e("code",[t._v("bigint")]),t._v(" was introduced in JavaScript.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.hrtime()")]),t._v(" method returns the current high-resolution real time\nin a "),e("code",[t._v("[seconds, nanoseconds]")]),t._v(" tuple "),e("code",[t._v("Array")]),t._v(", where "),e("code",[t._v("nanoseconds")]),t._v(" is the\nremaining part of the real time that can't be represented in second precision.")]),t._v(" "),e("p",[e("code",[t._v("time")]),t._v(" is an optional parameter that must be the result of a previous\n"),e("code",[t._v("process.hrtime()")]),t._v(" call to diff with the current time. If the parameter\npassed in is not a tuple "),e("code",[t._v("Array")]),t._v(", a "),e("code",[t._v("TypeError")]),t._v(" will be thrown. Passing in a\nuser-defined array instead of the result of a previous call to\n"),e("code",[t._v("process.hrtime()")]),t._v(" will lead to undefined behavior.")]),t._v(" "),e("p",[t._v("These times are relative to an arbitrary time in the\npast, and not related to the time of day and therefore not subject to clock\ndrift. The primary use is for measuring performance between intervals:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NS_PER_SEC")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e9")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("hrtime")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1800216, 25 ]")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" diff "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("hrtime")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, 552 ]")]),t._v("\n\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Benchmark took ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("diff"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NS_PER_SEC")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" diff"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" nanoseconds")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Benchmark took 1000000552 nanoseconds")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-hrtime-bigint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-hrtime-bigint"}},[t._v("#")]),t._v(" process.hrtime.bigint()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {bigint}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("bigint")]),t._v(" version of the "),e("a",{attrs:{href:"#process_process_hrtime_time"}},[e("code",[t._v("process.hrtime()")])]),t._v(" method returning the\ncurrent high-resolution real time in nanoseconds as a "),e("code",[t._v("bigint")]),t._v(".")]),t._v(" "),e("p",[t._v("Unlike "),e("a",{attrs:{href:"#process_process_hrtime_time"}},[e("code",[t._v("process.hrtime()")])]),t._v(", it does not support an additional "),e("code",[t._v("time")]),t._v("\nargument since the difference can just be computed directly\nby subtraction of the two "),e("code",[t._v("bigint")]),t._v("s.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" start "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hrtime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bigint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 191051479007711n")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" end "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hrtime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bigint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 191052633396993n")]),t._v("\n\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Benchmark took ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("end "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" nanoseconds")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Benchmark took 1154389282 nanoseconds")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-initgroups-user-extragroup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-initgroups-user-extragroup"}},[t._v("#")]),t._v(" process.initgroups(user, extraGroup)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("user")]),t._v(" {string|number} The user name or numeric identifier.")]),t._v(" "),e("li",[e("code",[t._v("extraGroup")]),t._v(" {string|number} A group name or numeric identifier.")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.initgroups()")]),t._v(" method reads the "),e("code",[t._v("/etc/group")]),t._v(" file and initializes\nthe group access list, using all groups of which the user is a member. This is\na privileged operation that requires that the Node.js process either have "),e("code",[t._v("root")]),t._v("\naccess or the "),e("code",[t._v("CAP_SETGID")]),t._v(" capability.")]),t._v(" "),e("p",[t._v("Use care when dropping privileges:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getgroups")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 0 ]")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("initgroups")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bnoordhuis'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// switch user")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getgroups")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 27, 30, 46, 1000, 0 ]")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setgid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// drop root gid")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getgroups")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 27, 30, 46, 1000 ]")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).\nThis feature is not available in "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.")],1),t._v(" "),e("h2",{attrs:{id:"process-kill-pid-signal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-kill-pid-signal"}},[t._v("#")]),t._v(" process.kill(pid[, signal])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("pid")]),t._v(" {number} A process ID")]),t._v(" "),e("li",[e("code",[t._v("signal")]),t._v(" {string|number} The signal to send, either as a string or number.\n"),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("'SIGTERM'")]),t._v(".")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.kill()")]),t._v(" method sends the "),e("code",[t._v("signal")]),t._v(" to the process identified by\n"),e("code",[t._v("pid")]),t._v(".")]),t._v(" "),e("p",[t._v("Signal names are strings such as "),e("code",[t._v("'SIGINT'")]),t._v(" or "),e("code",[t._v("'SIGHUP'")]),t._v(". See "),e("a",{attrs:{href:"#process_signal_events"}},[t._v("Signal Events")]),t._v("\nand kill(2) for more information.")]),t._v(" "),e("p",[t._v("This method will throw an error if the target "),e("code",[t._v("pid")]),t._v(" does not exist. As a special\ncase, a signal of "),e("code",[t._v("0")]),t._v(" can be used to test for the existence of a process.\nWindows platforms will throw an error if the "),e("code",[t._v("pid")]),t._v(" is used to kill a process\ngroup.")]),t._v(" "),e("p",[t._v("Even though the name of this function is "),e("code",[t._v("process.kill()")]),t._v(", it is really just a\nsignal sender, like the "),e("code",[t._v("kill")]),t._v(" system call. The signal sent may do something\nother than kill the target process.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGHUP'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Got SIGHUP signal.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Exiting.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGHUP'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("When "),e("code",[t._v("SIGUSR1")]),t._v(" is received by a Node.js process, Node.js will start the\ndebugger. See "),e("a",{attrs:{href:"#process_signal_events"}},[t._v("Signal Events")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"process-mainmodule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-mainmodule"}},[t._v("#")]),t._v(" process.mainModule")]),t._v(" "),e("ul",[e("li",[t._v("{Object}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.mainModule")]),t._v(" property provides an alternative way of retrieving\n"),e("router-link",{attrs:{to:"/node/modules.html#modules_accessing_the_main_module"}},[e("code",[t._v("require.main")])]),t._v(". The difference is that if the main module changes at\nruntime, "),e("router-link",{attrs:{to:"/node/modules.html#modules_accessing_the_main_module"}},[e("code",[t._v("require.main")])]),t._v(" may still refer to the original main module in\nmodules that were required before the change occurred. Generally, it's\nsafe to assume that the two refer to the same module.")],1),t._v(" "),e("p",[t._v("As with "),e("router-link",{attrs:{to:"/node/modules.html#modules_accessing_the_main_module"}},[e("code",[t._v("require.main")])]),t._v(", "),e("code",[t._v("process.mainModule")]),t._v(" will be "),e("code",[t._v("undefined")]),t._v(" if there\nis no entry script.")],1),t._v(" "),e("h2",{attrs:{id:"process-memoryusage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-memoryusage"}},[t._v("#")]),t._v(" process.memoryUsage()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {Object}\n"),e("ul",[e("li",[e("code",[t._v("rss")]),t._v(" {integer}")]),t._v(" "),e("li",[e("code",[t._v("heapTotal")]),t._v(" {integer}")]),t._v(" "),e("li",[e("code",[t._v("heapUsed")]),t._v(" {integer}")]),t._v(" "),e("li",[e("code",[t._v("external")]),t._v(" {integer}")])])])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.memoryUsage()")]),t._v(" method returns an object describing the memory usage\nof the Node.js process measured in bytes.")]),t._v(" "),e("p",[t._v("For example, the code:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("memoryUsage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Will generate:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rss"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4935680")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  heapTotal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1826816")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  heapUsed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("650472")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  external"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("49879")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("heapTotal")]),t._v(" and "),e("code",[t._v("heapUsed")]),t._v(" refer to V8's memory usage.\n"),e("code",[t._v("external")]),t._v(" refers to the memory usage of C++ objects bound to JavaScript\nobjects managed by V8. "),e("code",[t._v("rss")]),t._v(", Resident Set Size, is the amount of space\noccupied in the main memory device (that is a subset of the total allocated\nmemory) for the process, which includes the "),e("em",[t._v("heap")]),t._v(", "),e("em",[t._v("code segment")]),t._v(" and "),e("em",[t._v("stack")]),t._v(".")]),t._v(" "),e("p",[t._v("The "),e("em",[t._v("heap")]),t._v(" is where objects, strings, and closures are stored. Variables are\nstored in the "),e("em",[t._v("stack")]),t._v(" and the actual JavaScript code resides in the\n"),e("em",[t._v("code segment")]),t._v(".")]),t._v(" "),e("p",[t._v("When using "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads, "),e("code",[t._v("rss")]),t._v(" will be a value that is valid for the\nentire process, while the other fields will only refer to the current thread.")],1),t._v(" "),e("h2",{attrs:{id:"process-nexttick-callback-args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-nexttick-callback-args"}},[t._v("#")]),t._v(" process.nextTick(callback[, ...args])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("callback")]),t._v(" {Function}")]),t._v(" "),e("li",[e("code",[t._v("...args")]),t._v(" {any} Additional arguments to pass when invoking the "),e("code",[t._v("callback")])])]),t._v(" "),e("p",[e("code",[t._v("process.nextTick()")]),t._v(" adds "),e("code",[t._v("callback")]),t._v(' to the "next tick queue". This queue is\nfully drained after the current operation on the JavaScript stack runs to\ncompletion and before the event loop is allowed to continue. It\'s possible to\ncreate an infinite loop if one were to recursively call '),e("code",[t._v("process.nextTick()")]),t._v(".\nSee the "),e("a",{attrs:{href:"https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/#process-nexttick",target:"_blank",rel:"noopener noreferrer"}},[t._v("Event Loop"),e("OutboundLink")],1),t._v(" guide for more background.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nextTick callback'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scheduled'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Output:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// scheduled")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nextTick callback")]),t._v("\n")])])]),e("p",[t._v("This is important when developing APIs in order to give users the opportunity\nto assign event handlers "),e("em",[t._v("after")]),t._v(" an object has been constructed but before any\nI/O has occurred:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setupOptions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startDoingStuff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" thing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nthing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReadyForStuff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// thing.startDoingStuff() gets called now, not before.")]),t._v("\n")])])]),e("p",[t._v("It is very important for APIs to be either 100% synchronous or 100%\nasynchronous. Consider this example:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// WARNING!  DO NOT USE!  BAD UNSAFE HAZARD!")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("maybeSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stat")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This API is hazardous because in the following case:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" maybeTrue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("maybeSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maybeTrue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("It is not clear whether "),e("code",[t._v("foo()")]),t._v(" or "),e("code",[t._v("bar()")]),t._v(" will be called first.")]),t._v(" "),e("p",[t._v("The following approach is much better:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("definitelyAsync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stat")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-nodeprecation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-nodeprecation"}},[t._v("#")]),t._v(" process.noDeprecation")]),t._v(" "),e("ul",[e("li",[t._v("{boolean}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.noDeprecation")]),t._v(" property indicates whether the "),e("code",[t._v("--no-deprecation")]),t._v("\nflag is set on the current Node.js process. See the documentation for\nthe "),e("a",{attrs:{href:"#process_event_warning"}},[e("code",[t._v("'warning'")]),t._v(" event")]),t._v(" and the\n"),e("a",{attrs:{href:"#process_process_emitwarning_warning_type_code_ctor"}},[e("code",[t._v("emitWarning()")]),t._v(" method")]),t._v(" for more information about this\nflag's behavior.")]),t._v(" "),e("h2",{attrs:{id:"process-pid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-pid"}},[t._v("#")]),t._v(" process.pid")]),t._v(" "),e("ul",[e("li",[t._v("{integer}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.pid")]),t._v(" property returns the PID of the process.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("This process is pid ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-platform"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-platform"}},[t._v("#")]),t._v(" process.platform")]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.platform")]),t._v(" property returns a string identifying the operating\nsystem platform on which the Node.js process is running.")]),t._v(" "),e("p",[t._v("Currently possible values are:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("'aix'")])]),t._v(" "),e("li",[e("code",[t._v("'darwin'")])]),t._v(" "),e("li",[e("code",[t._v("'freebsd'")])]),t._v(" "),e("li",[e("code",[t._v("'linux'")])]),t._v(" "),e("li",[e("code",[t._v("'openbsd'")])]),t._v(" "),e("li",[e("code",[t._v("'sunos'")])]),t._v(" "),e("li",[e("code",[t._v("'win32'")])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("This platform is ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("platform"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("The value "),e("code",[t._v("'android'")]),t._v(" may also be returned if the Node.js is built on the\nAndroid operating system. However, Android support in Node.js\n"),e("a",{attrs:{href:"https://github.com/nodejs/node/blob/master/BUILDING.md#androidandroid-based-devices-eg-firefox-os",target:"_blank",rel:"noopener noreferrer"}},[t._v("is experimental"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"process-ppid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-ppid"}},[t._v("#")]),t._v(" process.ppid")]),t._v(" "),e("ul",[e("li",[t._v("{integer}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.ppid")]),t._v(" property returns the PID of the current parent process.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("The parent process is pid ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ppid"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-release"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-release"}},[t._v("#")]),t._v(" process.release")]),t._v(" "),e("ul",[e("li",[t._v("{Object}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.release")]),t._v(" property returns an "),e("code",[t._v("Object")]),t._v(" containing metadata related\nto the current release, including URLs for the source tarball and headers-only\ntarball.")]),t._v(" "),e("p",[e("code",[t._v("process.release")]),t._v(" contains the following properties:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("name")]),t._v(" {string} A value that will always be "),e("code",[t._v("'node'")]),t._v(" for Node.js. For\nlegacy io.js releases, this will be "),e("code",[t._v("'io.js'")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("sourceUrl")]),t._v(" {string} an absolute URL pointing to a "),e("em",[e("code",[t._v(".tar.gz")])]),t._v(" file containing\nthe source code of the current release.")]),t._v(" "),e("li",[e("code",[t._v("headersUrl")]),t._v("{string} an absolute URL pointing to a "),e("em",[e("code",[t._v(".tar.gz")])]),t._v(" file containing\nonly the source header files for the current release. This file is\nsignificantly smaller than the full source file and can be used for compiling\nNode.js native add-ons.")]),t._v(" "),e("li",[e("code",[t._v("libUrl")]),t._v(" {string} an absolute URL pointing to a "),e("em",[e("code",[t._v("node.lib")])]),t._v(" file matching the\narchitecture and version of the current release. This file is used for\ncompiling Node.js native add-ons. "),e("em",[t._v("This property is only present on Windows\nbuilds of Node.js and will be missing on all other platforms.")])]),t._v(" "),e("li",[e("code",[t._v("lts")]),t._v(" {string} a string label identifying the "),e("a",{attrs:{href:"https://github.com/nodejs/Release",target:"_blank",rel:"noopener noreferrer"}},[t._v("LTS"),e("OutboundLink")],1),t._v(" label for this release.\nThis property only exists for LTS releases and is "),e("code",[t._v("undefined")]),t._v(" for all other\nrelease types, including "),e("em",[t._v("Current")]),t._v(" releases. Currently the valid values are:\n"),e("ul",[e("li",[e("code",[t._v("'Argon'")]),t._v(" for the 4.x LTS line beginning with 4.2.0.")]),t._v(" "),e("li",[e("code",[t._v("'Boron'")]),t._v(" for the 6.x LTS line beginning with 6.9.0.")]),t._v(" "),e("li",[e("code",[t._v("'Carbon'")]),t._v(" for the 8.x LTS line beginning with 8.9.1.")])])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Argon'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  sourceUrl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://nodejs.org/download/release/v4.4.5/node-v4.4.5.tar.gz'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  headersUrl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://nodejs.org/download/release/v4.4.5/node-v4.4.5-headers.tar.gz'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  libUrl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://nodejs.org/download/release/v4.4.5/win-x64/node.lib'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("In custom builds from non-release versions of the source tree, only the\n"),e("code",[t._v("name")]),t._v(" property may be present. The additional properties should not be\nrelied upon to exist.")]),t._v(" "),e("h2",{attrs:{id:"process-report"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report"}},[t._v("#")]),t._v(" process.report")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[t._v("{Object}")])]),t._v(" "),e("p",[e("code",[t._v("process.report")]),t._v(" is an object whose methods are used to generate diagnostic\nreports for the current process. Additional documentation is available in the\n"),e("router-link",{attrs:{to:"/node/report.html"}},[t._v("report documentation")]),t._v(".")],1),t._v(" "),e("h3",{attrs:{id:"process-report-directory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report-directory"}},[t._v("#")]),t._v(" process.report.directory")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("Directory where the report is written. The default value is the empty string,\nindicating that reports are written to the current working directory of the\nNode.js process.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Report directory is ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("directory"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"process-report-filename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report-filename"}},[t._v("#")]),t._v(" process.report.filename")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("Filename where the report is written. If set to the empty string, the output\nfilename will be comprised of a timestamp, PID, and sequence number. The default\nvalue is the empty string.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Report filename is ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filename"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"process-report-getreport-err"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report-getreport-err"}},[t._v("#")]),t._v(" process.report.getReport([err])")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("err")]),t._v(" {Error} A custom error used for reporting the JavaScript stack.")]),t._v(" "),e("li",[t._v("Returns: {Object}")])]),t._v(" "),e("p",[t._v("Returns a JavaScript Object representation of a diagnostic report for the\nrunning process. The report's JavaScript stack trace is taken from "),e("code",[t._v("err")]),t._v(", if\npresent.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getReport")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeJsVersion"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Similar to process.report.writeReport()")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("util"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("inspect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-report.log'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Additional documentation is available in the "),e("router-link",{attrs:{to:"/node/report.html"}},[t._v("report documentation")]),t._v(".")],1),t._v(" "),e("h3",{attrs:{id:"process-report-reportonfatalerror"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report-reportonfatalerror"}},[t._v("#")]),t._v(" process.report.reportOnFatalError")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[t._v("{boolean}")])]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("true")]),t._v(", a diagnostic report is generated on fatal errors, such as out of\nmemory errors or failed C++ assertions.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Report on fatal error: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reportOnFatalError"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"process-report-reportonsignal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report-reportonsignal"}},[t._v("#")]),t._v(" process.report.reportOnSignal")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[t._v("{boolean}")])]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("true")]),t._v(", a diagnostic report is generated when the process receives the\nsignal specified by "),e("code",[t._v("process.report.signal")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Report on signal: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reportOnSignal"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"process-report-reportonuncaughtexception"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report-reportonuncaughtexception"}},[t._v("#")]),t._v(" process.report.reportOnUncaughtException")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[t._v("{boolean}")])]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("true")]),t._v(", a diagnostic report is generated on uncaught exception.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Report on exception: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reportOnUncaughtException"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"process-report-signal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report-signal"}},[t._v("#")]),t._v(" process.report.signal")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("The signal used to trigger the creation of a diagnostic report. Defaults to\n"),e("code",[t._v("'SIGUSR2'")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Report signal: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("signal"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"process-report-writereport-filename-err"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-report-writereport-filename-err"}},[t._v("#")]),t._v(" process.report.writeReport([filename][, err])")]),t._v(" "),e("blockquote",[e("p",[t._v("Stability: 1 - Experimental")])]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("filename")]),t._v(" {string} Name of the file where the report is written. This\nshould be a relative path, that will be appended to the directory specified in\n"),e("code",[t._v("process.report.directory")]),t._v(", or the current working directory of the Node.js\nprocess, if unspecified.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("err")]),t._v(" {Error} A custom error used for reporting the JavaScript stack.")])]),t._v(" "),e("li",[e("p",[t._v("Returns: {string} Returns the filename of the generated report.")])])]),t._v(" "),e("p",[t._v("Writes a diagnostic report to a file. If "),e("code",[t._v("filename")]),t._v(" is not provided, the default\nfilename includes the date, time, PID, and a sequence number. The report's\nJavaScript stack trace is taken from "),e("code",[t._v("err")]),t._v(", if present.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeReport")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Additional documentation is available in the "),e("router-link",{attrs:{to:"/node/report.html"}},[t._v("report documentation")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"process-resourceusage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-resourceusage"}},[t._v("#")]),t._v(" process.resourceUsage()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {Object} the resource usage for the current process. All of these\nvalues come from the "),e("code",[t._v("uv_getrusage")]),t._v(" call which returns\na "),e("a",{attrs:{href:"http://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("uv_rusage_t")]),t._v(" struct"),e("OutboundLink")],1),t._v(".\n"),e("ul",[e("li",[e("code",[t._v("userCPUTime")]),t._v(" {integer} maps to "),e("code",[t._v("ru_utime")]),t._v(" computed in microseconds.\nIt is the same value as "),e("a",{attrs:{href:"#process_process_cpuusage_previousvalue"}},[e("code",[t._v("process.cpuUsage().user")])]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("systemCPUTime")]),t._v(" {integer} maps to "),e("code",[t._v("ru_stime")]),t._v(" computed in microseconds.\nIt is the same value as "),e("a",{attrs:{href:"#process_process_cpuusage_previousvalue"}},[e("code",[t._v("process.cpuUsage().system")])]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("maxRSS")]),t._v(" {integer} maps to "),e("code",[t._v("ru_maxrss")]),t._v(" which is the maximum resident set\nsize used in kilobytes.")]),t._v(" "),e("li",[e("code",[t._v("sharedMemorySize")]),t._v(" {integer} maps to "),e("code",[t._v("ru_ixrss")]),t._v(" but is not supported by\nany platform.")]),t._v(" "),e("li",[e("code",[t._v("unsharedDataSize")]),t._v(" {integer} maps to "),e("code",[t._v("ru_idrss")]),t._v(" but is not supported by\nany platform.")]),t._v(" "),e("li",[e("code",[t._v("unsharedStackSize")]),t._v(" {integer} maps to "),e("code",[t._v("ru_isrss")]),t._v(" but is not supported by\nany platform.")]),t._v(" "),e("li",[e("code",[t._v("minorPageFault")]),t._v(" {integer} maps to "),e("code",[t._v("ru_minflt")]),t._v(" which is the number of\nminor page faults for the process, see\n"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Page_fault#Minor",target:"_blank",rel:"noopener noreferrer"}},[t._v("this article for more details"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("majorPageFault")]),t._v(" {integer} maps to "),e("code",[t._v("ru_majflt")]),t._v(" which is the number of\nmajor page faults for the process, see\n"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Page_fault#Major",target:"_blank",rel:"noopener noreferrer"}},[t._v("this article for more details"),e("OutboundLink")],1),t._v(". This field is not\nsupported on Windows.")]),t._v(" "),e("li",[e("code",[t._v("swappedOut")]),t._v(" {integer} maps to "),e("code",[t._v("ru_nswap")]),t._v(" but is not supported by any\nplatform.")]),t._v(" "),e("li",[e("code",[t._v("fsRead")]),t._v(" {integer} maps to "),e("code",[t._v("ru_inblock")]),t._v(" which is the number of times the\nfile system had to perform input.")]),t._v(" "),e("li",[e("code",[t._v("fsWrite")]),t._v(" {integer} maps to "),e("code",[t._v("ru_oublock")]),t._v(" which is the number of times the\nfile system had to perform output.")]),t._v(" "),e("li",[e("code",[t._v("ipcSent")]),t._v(" {integer} maps to "),e("code",[t._v("ru_msgsnd")]),t._v(" but is not supported by any\nplatform.")]),t._v(" "),e("li",[e("code",[t._v("ipcReceived")]),t._v(" {integer} maps to "),e("code",[t._v("ru_msgrcv")]),t._v(" but is not supported by any\nplatform.")]),t._v(" "),e("li",[e("code",[t._v("signalsCount")]),t._v(" {integer} maps to "),e("code",[t._v("ru_nsignals")]),t._v(" but is not supported by any\nplatform.")]),t._v(" "),e("li",[e("code",[t._v("voluntaryContextSwitches")]),t._v(" {integer} maps to "),e("code",[t._v("ru_nvcsw")]),t._v(" which is the\nnumber of times a CPU context switch resulted due to a process voluntarily\ngiving up the processor before its time slice was completed (usually to\nawait availability of a resource). This field is not supported on Windows.")]),t._v(" "),e("li",[e("code",[t._v("involuntaryContextSwitches")]),t._v(" {integer} maps to "),e("code",[t._v("ru_nivcsw")]),t._v(" which is the\nnumber of times a CPU context switch resulted due to a higher priority\nprocess becoming runnable or because the current process exceeded its\ntime slice. This field is not supported on Windows.")])])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resourceUsage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n  Will output:\n  {\n    userCPUTime: 82872,\n    systemCPUTime: 4143,\n    maxRSS: 33164,\n    sharedMemorySize: 0,\n    unsharedDataSize: 0,\n    unsharedStackSize: 0,\n    minorPageFault: 2469,\n    majorPageFault: 0,\n    swappedOut: 0,\n    fsRead: 0,\n    fsWrite: 8,\n    ipcSent: 0,\n    ipcReceived: 0,\n    signalsCount: 0,\n    voluntaryContextSwitches: 79,\n    involuntaryContextSwitches: 1\n  }\n*/")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-send-message-sendhandle-options-callback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-send-message-sendhandle-options-callback"}},[t._v("#")]),t._v(" process.send(message[, sendHandle[, options]][, callback])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("message")]),t._v(" {Object}")]),t._v(" "),e("li",[e("code",[t._v("sendHandle")]),t._v(" {net.Server|net.Socket}")]),t._v(" "),e("li",[e("code",[t._v("options")]),t._v(" {Object} used to parameterize the sending of certain types of\nhandles."),e("code",[t._v("options")]),t._v(" supports the following properties:\n"),e("ul",[e("li",[e("code",[t._v("keepOpen")]),t._v(" {boolean} A value that can be used when passing instances of\n"),e("code",[t._v("net.Socket")]),t._v(". When "),e("code",[t._v("true")]),t._v(", the socket is kept open in the sending process.\n"),e("strong",[t._v("Default:")]),t._v(" "),e("code",[t._v("false")]),t._v(".")])])]),t._v(" "),e("li",[e("code",[t._v("callback")]),t._v(" {Function}")]),t._v(" "),e("li",[t._v("Returns: {boolean}")])]),t._v(" "),e("p",[t._v("If Node.js is spawned with an IPC channel, the "),e("code",[t._v("process.send()")]),t._v(" method can be\nused to send messages to the parent process. Messages will be received as a\n"),e("router-link",{attrs:{to:"/node/child_process.html#child_process_event_message"}},[e("code",[t._v("'message'")])]),t._v(" event on the parent's "),e("router-link",{attrs:{to:"/node/child_process.html#child_process_class_childprocess"}},[e("code",[t._v("ChildProcess")])]),t._v(" object.")],1),t._v(" "),e("p",[t._v("If Node.js was not spawned with an IPC channel, "),e("code",[t._v("process.send()")]),t._v(" will be\n"),e("code",[t._v("undefined")]),t._v(".")]),t._v(" "),e("p",[t._v("The message goes through serialization and parsing. The resulting message might\nnot be the same as what is originally sent.")]),t._v(" "),e("h2",{attrs:{id:"process-setegid-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-setegid-id"}},[t._v("#")]),t._v(" process.setegid(id)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("id")]),t._v(" {string|number} A group name or ID")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.setegid()")]),t._v(" method sets the effective group identity of the process.\n(See setegid(2).) The "),e("code",[t._v("id")]),t._v(" can be passed as either a numeric ID or a group\nname string. If a group name is specified, this method blocks while resolving\nthe associated a numeric ID.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getegid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setegid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current gid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getegid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setegid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("501")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("New gid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getegid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Failed to set gid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).\nThis feature is not available in "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.")],1),t._v(" "),e("h2",{attrs:{id:"process-seteuid-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-seteuid-id"}},[t._v("#")]),t._v(" process.seteuid(id)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("id")]),t._v(" {string|number} A user name or ID")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.seteuid()")]),t._v(" method sets the effective user identity of the process.\n(See seteuid(2).) The "),e("code",[t._v("id")]),t._v(" can be passed as either a numeric ID or a username\nstring. If a username is specified, the method blocks while resolving the\nassociated numeric ID.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("geteuid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seteuid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current uid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("geteuid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("seteuid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("501")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("New uid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("geteuid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Failed to set uid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).\nThis feature is not available in "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.")],1),t._v(" "),e("h2",{attrs:{id:"process-setgid-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-setgid-id"}},[t._v("#")]),t._v(" process.setgid(id)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("id")]),t._v(" {string|number} The group name or ID")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.setgid()")]),t._v(" method sets the group identity of the process. (See\nsetgid(2).) The "),e("code",[t._v("id")]),t._v(" can be passed as either a numeric ID or a group name\nstring. If a group name is specified, this method blocks while resolving the\nassociated numeric ID.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getgid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setgid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current gid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getgid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setgid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("501")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("New gid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getgid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Failed to set gid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).\nThis feature is not available in "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.")],1),t._v(" "),e("h2",{attrs:{id:"process-setgroups-groups"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-setgroups-groups"}},[t._v("#")]),t._v(" process.setgroups(groups)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("groups")]),t._v(" {integer[]}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.setgroups()")]),t._v(" method sets the supplementary group IDs for the\nNode.js process. This is a privileged operation that requires the Node.js\nprocess to have "),e("code",[t._v("root")]),t._v(" or the "),e("code",[t._v("CAP_SETGID")]),t._v(" capability.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("groups")]),t._v(" array can contain numeric group IDs, group names or both.")]),t._v(" "),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).\nThis feature is not available in "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.")],1),t._v(" "),e("h2",{attrs:{id:"process-setuid-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-setuid-id"}},[t._v("#")]),t._v(" process.setuid(id)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("id")]),t._v(" {integer | string}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.setuid(id)")]),t._v(" method sets the user identity of the process. (See\nsetuid(2).) The "),e("code",[t._v("id")]),t._v(" can be passed as either a numeric ID or a username string.\nIf a username is specified, the method blocks while resolving the associated\nnumeric ID.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getuid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setuid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Current uid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getuid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setuid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("501")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("New uid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getuid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Failed to set uid: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This function is only available on POSIX platforms (i.e. not Windows or\nAndroid).\nThis feature is not available in "),e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads.")],1),t._v(" "),e("h2",{attrs:{id:"process-setuncaughtexceptioncapturecallback-fn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-setuncaughtexceptioncapturecallback-fn"}},[t._v("#")]),t._v(" process.setUncaughtExceptionCaptureCallback(fn)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("fn")]),t._v(" {Function|null}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.setUncaughtExceptionCaptureCallback()")]),t._v(" function sets a function\nthat will be invoked when an uncaught exception occurs, which will receive the\nexception value itself as its first argument.")]),t._v(" "),e("p",[t._v("If such a function is set, the "),e("a",{attrs:{href:"#process_event_uncaughtexception"}},[e("code",[t._v("'uncaughtException'")])]),t._v(" event will\nnot be emitted. If "),e("code",[t._v("--abort-on-uncaught-exception")]),t._v(" was passed from the\ncommand line or set through "),e("router-link",{attrs:{to:"/node/v8.html#v8_v8_setflagsfromstring_flags"}},[e("code",[t._v("v8.setFlagsFromString()")])]),t._v(", the process will\nnot abort.")],1),t._v(" "),e("p",[t._v("To unset the capture function,\n"),e("code",[t._v("process.setUncaughtExceptionCaptureCallback(null)")]),t._v(" may be used. Calling this\nmethod with a non-"),e("code",[t._v("null")]),t._v(" argument while another capture function is set will\nthrow an error.")]),t._v(" "),e("p",[t._v("Using this function is mutually exclusive with using the deprecated\n"),e("router-link",{attrs:{to:"/node/domain.html"}},[e("code",[t._v("domain")])]),t._v(" built-in module.")],1),t._v(" "),e("h2",{attrs:{id:"process-stderr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-stderr"}},[t._v("#")]),t._v(" process.stderr")]),t._v(" "),e("ul",[e("li",[t._v("{Stream}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.stderr")]),t._v(" property returns a stream connected to\n"),e("code",[t._v("stderr")]),t._v(" (fd "),e("code",[t._v("2")]),t._v("). It is a "),e("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[e("code",[t._v("net.Socket")])]),t._v(" (which is a "),e("router-link",{attrs:{to:"/node/stream.html#stream_duplex_and_transform_streams"}},[t._v("Duplex")]),t._v("\nstream) unless fd "),e("code",[t._v("2")]),t._v(" refers to a file, in which case it is\na "),e("router-link",{attrs:{to:"/node/stream.html#stream_writable_streams"}},[t._v("Writable")]),t._v(" stream.")],1),t._v(" "),e("p",[e("code",[t._v("process.stderr")]),t._v(" differs from other Node.js streams in important ways. See\n"),e("router-link",{attrs:{to:"/node/process.html#process_a_note_on_process_i_o"}},[t._v("note on process I/O")]),t._v(" for more information.")],1),t._v(" "),e("h2",{attrs:{id:"process-stdin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-stdin"}},[t._v("#")]),t._v(" process.stdin")]),t._v(" "),e("ul",[e("li",[t._v("{Stream}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.stdin")]),t._v(" property returns a stream connected to\n"),e("code",[t._v("stdin")]),t._v(" (fd "),e("code",[t._v("0")]),t._v("). It is a "),e("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[e("code",[t._v("net.Socket")])]),t._v(" (which is a "),e("router-link",{attrs:{to:"/node/stream.html#stream_duplex_and_transform_streams"}},[t._v("Duplex")]),t._v("\nstream) unless fd "),e("code",[t._v("0")]),t._v(" refers to a file, in which case it is\na "),e("router-link",{attrs:{to:"/node/stream.html#stream_readable_streams"}},[t._v("Readable")]),t._v(" stream.")],1),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEncoding")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" chunk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use a loop to make sure we read all available data.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunk "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("data: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("chunk"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("As a "),e("router-link",{attrs:{to:"/node/stream.html#stream_duplex_and_transform_streams"}},[t._v("Duplex")]),t._v(" stream, "),e("code",[t._v("process.stdin")]),t._v(' can also be used in "old" mode that\nis compatible with scripts written for Node.js prior to v0.10.\nFor more information see '),e("router-link",{attrs:{to:"/node/stream.html#stream_compatibility_with_older_node_js_versions"}},[t._v("Stream compatibility")]),t._v(".")],1),t._v(" "),e("p",[t._v('In "old" streams mode the '),e("code",[t._v("stdin")]),t._v(" stream is paused by default, so one\nmust call "),e("code",[t._v("process.stdin.resume()")]),t._v(" to read from it. Note also that calling\n"),e("code",[t._v("process.stdin.resume()")]),t._v(' itself would switch stream to "old" mode.')]),t._v(" "),e("h2",{attrs:{id:"process-stdout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-stdout"}},[t._v("#")]),t._v(" process.stdout")]),t._v(" "),e("ul",[e("li",[t._v("{Stream}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.stdout")]),t._v(" property returns a stream connected to\n"),e("code",[t._v("stdout")]),t._v(" (fd "),e("code",[t._v("1")]),t._v("). It is a "),e("router-link",{attrs:{to:"/node/net.html#net_class_net_socket"}},[e("code",[t._v("net.Socket")])]),t._v(" (which is a "),e("router-link",{attrs:{to:"/node/stream.html#stream_duplex_and_transform_streams"}},[t._v("Duplex")]),t._v("\nstream) unless fd "),e("code",[t._v("1")]),t._v(" refers to a file, in which case it is\na "),e("router-link",{attrs:{to:"/node/stream.html#stream_writable_streams"}},[t._v("Writable")]),t._v(" stream.")],1),t._v(" "),e("p",[t._v("For example, to copy "),e("code",[t._v("process.stdin")]),t._v(" to "),e("code",[t._v("process.stdout")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[e("code",[t._v("process.stdout")]),t._v(" differs from other Node.js streams in important ways. See\n"),e("router-link",{attrs:{to:"/node/process.html#process_a_note_on_process_i_o"}},[t._v("note on process I/O")]),t._v(" for more information.")],1),t._v(" "),e("h3",{attrs:{id:"a-note-on-process-i-o"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-note-on-process-i-o"}},[t._v("#")]),t._v(" A note on process I/O")]),t._v(" "),e("p",[e("code",[t._v("process.stdout")]),t._v(" and "),e("code",[t._v("process.stderr")]),t._v(" differ from other Node.js streams in\nimportant ways:")]),t._v(" "),e("ol",[e("li",[t._v("They are used internally by "),e("router-link",{attrs:{to:"/node/console.html#console_console_log_data_args"}},[e("code",[t._v("console.log()")])]),t._v(" and "),e("router-link",{attrs:{to:"/node/console.html#console_console_error_data_args"}},[e("code",[t._v("console.error()")])]),t._v(",\nrespectively.")],1),t._v(" "),e("li",[t._v("Writes may be synchronous depending on what the stream is connected to\nand whether the system is Windows or POSIX:\n"),e("ul",[e("li",[t._v("Files: "),e("em",[t._v("synchronous")]),t._v(" on Windows and POSIX")]),t._v(" "),e("li",[t._v("TTYs (Terminals): "),e("em",[t._v("asynchronous")]),t._v(" on Windows, "),e("em",[t._v("synchronous")]),t._v(" on POSIX")]),t._v(" "),e("li",[t._v("Pipes (and sockets): "),e("em",[t._v("synchronous")]),t._v(" on Windows, "),e("em",[t._v("asynchronous")]),t._v(" on POSIX")])])])]),t._v(" "),e("p",[t._v("These behaviors are partly for historical reasons, as changing them would\ncreate backwards incompatibility, but they are also expected by some users.")]),t._v(" "),e("p",[t._v("Synchronous writes avoid problems such as output written with "),e("code",[t._v("console.log()")]),t._v(" or\n"),e("code",[t._v("console.error()")]),t._v(" being unexpectedly interleaved, or not written at all if\n"),e("code",[t._v("process.exit()")]),t._v(" is called before an asynchronous write completes. See\n"),e("a",{attrs:{href:"#process_process_exit_code"}},[e("code",[t._v("process.exit()")])]),t._v(" for more information.")]),t._v(" "),e("p",[e("em",[e("strong",[t._v("Warning")])]),t._v(": Synchronous writes block the event loop until the write has\ncompleted. This can be near instantaneous in the case of output to a file, but\nunder high system load, pipes that are not being read at the receiving end, or\nwith slow terminals or file systems, its possible for the event loop to be\nblocked often enough and long enough to have severe negative performance\nimpacts. This may not be a problem when writing to an interactive terminal\nsession, but consider this particularly careful when doing production logging to\nthe process output streams.")]),t._v(" "),e("p",[t._v("To check if a stream is connected to a "),e("router-link",{attrs:{to:"/node/tty.html#tty_tty"}},[t._v("TTY")]),t._v(" context, check the "),e("code",[t._v("isTTY")]),t._v("\nproperty.")],1),t._v(" "),e("p",[t._v("For instance:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ node -p "Boolean(process.stdin.isTTY)"\ntrue\n$ echo "foo" | node -p "Boolean(process.stdin.isTTY)"\nfalse\n$ node -p "Boolean(process.stdout.isTTY)"\ntrue\n$ node -p "Boolean(process.stdout.isTTY)" | cat\nfalse\n')])])]),e("p",[t._v("See the "),e("router-link",{attrs:{to:"/node/tty.html#tty_tty"}},[t._v("TTY")]),t._v(" documentation for more information.")],1),t._v(" "),e("h2",{attrs:{id:"process-throwdeprecation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-throwdeprecation"}},[t._v("#")]),t._v(" process.throwDeprecation")]),t._v(" "),e("ul",[e("li",[t._v("{boolean}")])]),t._v(" "),e("p",[t._v("The initial value of "),e("code",[t._v("process.throwDeprecation")]),t._v(" indicates whether the\n"),e("code",[t._v("--throw-deprecation")]),t._v(" flag is set on the current Node.js process.\n"),e("code",[t._v("process.throwDeprecation")]),t._v(" is mutable, so whether or not deprecation\nwarnings result in errors may be altered at runtime. See the\ndocumentation for the "),e("a",{attrs:{href:"#process_event_warning"}},[e("code",[t._v("'warning'")]),t._v(" event")]),t._v(" and the\n"),e("a",{attrs:{href:"#process_process_emitwarning_warning_type_code_ctor"}},[e("code",[t._v("emitWarning()")]),t._v(" method")]),t._v(" for more information.")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ node --throw-deprecation -p \"process.throwDeprecation\"\ntrue\n$ node -p \"process.throwDeprecation\"\nundefined\n$ node\n> process.emitWarning('test', 'DeprecationWarning');\nundefined\n> (node:26598) DeprecationWarning: test\n> process.throwDeprecation = true;\ntrue\n> process.emitWarning('test', 'DeprecationWarning');\nThrown:\n[DeprecationWarning: test] { name: 'DeprecationWarning' }\n")])])]),e("h2",{attrs:{id:"process-title"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-title"}},[t._v("#")]),t._v(" process.title")]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.title")]),t._v(" property returns the current process title (i.e. returns\nthe current value of "),e("code",[t._v("ps")]),t._v("). Assigning a new value to "),e("code",[t._v("process.title")]),t._v(" modifies\nthe current value of "),e("code",[t._v("ps")]),t._v(".")]),t._v(" "),e("p",[t._v("When a new value is assigned, different platforms will impose different maximum\nlength restrictions on the title. Usually such restrictions are quite limited.\nFor instance, on Linux and macOS, "),e("code",[t._v("process.title")]),t._v(" is limited to the size of the\nbinary name plus the length of the command line arguments because setting the\n"),e("code",[t._v("process.title")]),t._v(" overwrites the "),e("code",[t._v("argv")]),t._v(" memory of the process. Node.js v0.8\nallowed for longer process title strings by also overwriting the "),e("code",[t._v("environ")]),t._v("\nmemory but that was potentially insecure and confusing in some (rather obscure)\ncases.")]),t._v(" "),e("h2",{attrs:{id:"process-tracedeprecation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-tracedeprecation"}},[t._v("#")]),t._v(" process.traceDeprecation")]),t._v(" "),e("ul",[e("li",[t._v("{boolean}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.traceDeprecation")]),t._v(" property indicates whether the\n"),e("code",[t._v("--trace-deprecation")]),t._v(" flag is set on the current Node.js process. See the\ndocumentation for the "),e("a",{attrs:{href:"#process_event_warning"}},[e("code",[t._v("'warning'")]),t._v(" event")]),t._v(" and the\n"),e("a",{attrs:{href:"#process_process_emitwarning_warning_type_code_ctor"}},[e("code",[t._v("emitWarning()")]),t._v(" method")]),t._v(" for more information about this\nflag's behavior.")]),t._v(" "),e("h2",{attrs:{id:"process-umask-mask"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-umask-mask"}},[t._v("#")]),t._v(" process.umask([mask])")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("mask")]),t._v(" {number}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.umask()")]),t._v(" method sets or returns the Node.js process's file mode\ncreation mask. Child processes inherit the mask from the parent process. Invoked\nwithout an argument, the current mask is returned, otherwise the umask is set to\nthe argument value and the previous mask is returned.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newmask "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0o022")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldmask "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("umask")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newmask"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Changed umask from ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("oldmask"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" to ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("newmask"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[e("router-link",{attrs:{to:"/node/worker_threads.html#worker_threads_class_worker"}},[e("code",[t._v("Worker")])]),t._v(" threads are able to read the umask, however attempting to set the\numask will result in a thrown exception.")],1),t._v(" "),e("h2",{attrs:{id:"process-uptime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-uptime"}},[t._v("#")]),t._v(" process.uptime()")]),t._v(" "),e("ul",[e("li",[t._v("Returns: {number}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.uptime()")]),t._v(" method returns the number of seconds the current Node.js\nprocess has been running.")]),t._v(" "),e("p",[t._v("The return value includes fractions of a second. Use "),e("code",[t._v("Math.floor()")]),t._v(" to get whole\nseconds.")]),t._v(" "),e("h2",{attrs:{id:"process-version"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-version"}},[t._v("#")]),t._v(" process.version")]),t._v(" "),e("ul",[e("li",[t._v("{string}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.version")]),t._v(" property returns the Node.js version string.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Version: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("version"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"process-versions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process-versions"}},[t._v("#")]),t._v(" process.versions")]),t._v(" "),e("ul",[e("li",[t._v("{Object}")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("process.versions")]),t._v(" property returns an object listing the version strings of\nNode.js and its dependencies. "),e("code",[t._v("process.versions.modules")]),t._v(" indicates the current\nABI version, which is increased whenever a C++ API changes. Node.js will refuse\nto load modules that were compiled against a different module ABI version.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("versions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Will generate an object similar to:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("{ node: '11.13.0',\n  v8: '7.0.276.38-node.18',\n  uv: '1.27.0',\n  zlib: '1.2.11',\n  brotli: '1.0.7',\n  ares: '1.15.0',\n  modules: '67',\n  nghttp2: '1.34.0',\n  napi: '4',\n  llhttp: '1.1.1',\n  openssl: '1.1.1b',\n  cldr: '34.0',\n  icu: '63.1',\n  tz: '2018e',\n  unicode: '11.0' }\n")])])]),e("h2",{attrs:{id:"exit-codes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exit-codes"}},[t._v("#")]),t._v(" Exit Codes")]),t._v(" "),e("p",[t._v("Node.js will normally exit with a "),e("code",[t._v("0")]),t._v(" status code when no more async\noperations are pending. The following status codes are used in other\ncases:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("1")]),t._v(" "),e("strong",[t._v("Uncaught Fatal Exception")]),t._v(": There was an uncaught exception,\nand it was not handled by a domain or an "),e("a",{attrs:{href:"#process_event_uncaughtexception"}},[e("code",[t._v("'uncaughtException'")])]),t._v(" event\nhandler.")]),t._v(" "),e("li",[e("code",[t._v("2")]),t._v(": Unused (reserved by Bash for builtin misuse)")]),t._v(" "),e("li",[e("code",[t._v("3")]),t._v(" "),e("strong",[t._v("Internal JavaScript Parse Error")]),t._v(": The JavaScript source code\ninternal in Node.js's bootstrapping process caused a parse error. This\nis extremely rare, and generally can only happen during development\nof Node.js itself.")]),t._v(" "),e("li",[e("code",[t._v("4")]),t._v(" "),e("strong",[t._v("Internal JavaScript Evaluation Failure")]),t._v(": The JavaScript\nsource code internal in Node.js's bootstrapping process failed to\nreturn a function value when evaluated. This is extremely rare, and\ngenerally can only happen during development of Node.js itself.")]),t._v(" "),e("li",[e("code",[t._v("5")]),t._v(" "),e("strong",[t._v("Fatal Error")]),t._v(": There was a fatal unrecoverable error in V8.\nTypically a message will be printed to stderr with the prefix "),e("code",[t._v("FATAL ERROR")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("6")]),t._v(" "),e("strong",[t._v("Non-function Internal Exception Handler")]),t._v(": There was an\nuncaught exception, but the internal fatal exception handler\nfunction was somehow set to a non-function, and could not be called.")]),t._v(" "),e("li",[e("code",[t._v("7")]),t._v(" "),e("strong",[t._v("Internal Exception Handler Run-Time Failure")]),t._v(": There was an\nuncaught exception, and the internal fatal exception handler\nfunction itself threw an error while attempting to handle it. This\ncan happen, for example, if an "),e("a",{attrs:{href:"#process_event_uncaughtexception"}},[e("code",[t._v("'uncaughtException'")])]),t._v(" or\n"),e("code",[t._v("domain.on('error')")]),t._v(" handler throws an error.")]),t._v(" "),e("li",[e("code",[t._v("8")]),t._v(": Unused. In previous versions of Node.js, exit code 8 sometimes\nindicated an uncaught exception.")]),t._v(" "),e("li",[e("code",[t._v("9")]),t._v(" "),e("strong",[t._v("Invalid Argument")]),t._v(": Either an unknown option was specified,\nor an option requiring a value was provided without a value.")]),t._v(" "),e("li",[e("code",[t._v("10")]),t._v(" "),e("strong",[t._v("Internal JavaScript Run-Time Failure")]),t._v(": The JavaScript\nsource code internal in Node.js's bootstrapping process threw an error\nwhen the bootstrapping function was called. This is extremely rare,\nand generally can only happen during development of Node.js itself.")]),t._v(" "),e("li",[e("code",[t._v("12")]),t._v(" "),e("strong",[t._v("Invalid Debug Argument")]),t._v(": The "),e("code",[t._v("--inspect")]),t._v(" and/or "),e("code",[t._v("--inspect-brk")]),t._v("\noptions were set, but the port number chosen was invalid or unavailable.")]),t._v(" "),e("li",[e("code",[t._v(">128")]),t._v(" "),e("strong",[t._v("Signal Exits")]),t._v(": If Node.js receives a fatal signal such as\n"),e("code",[t._v("SIGKILL")]),t._v(" or "),e("code",[t._v("SIGHUP")]),t._v(", then its exit code will be "),e("code",[t._v("128")]),t._v(" plus the\nvalue of the signal code. This is a standard POSIX practice, since\nexit codes are defined to be 7-bit integers, and signal exits set\nthe high-order bit, and then contain the value of the signal code.\nFor example, signal "),e("code",[t._v("SIGABRT")]),t._v(" has value "),e("code",[t._v("6")]),t._v(", so the expected exit\ncode will be "),e("code",[t._v("128")]),t._v(" + "),e("code",[t._v("6")]),t._v(", or "),e("code",[t._v("134")]),t._v(".")])])])}),[],!1,null,null,null);s.default=a.exports}}]);