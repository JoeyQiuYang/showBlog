(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{231:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"zlib"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib"}},[t._v("#")]),t._v(" Zlib")]),t._v(" "),a("blockquote",[a("p",[t._v("Stability: 2 - Stable")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("zlib")]),t._v(" module provides compression functionality implemented using Gzip and\nDeflate/Inflate, as well as Brotli. It can be accessed using:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zlib "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zlib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Compressing or decompressing a stream (such as a file) can be accomplished by\npiping the source stream data through a "),a("code",[t._v("zlib")]),t._v(" stream into a destination stream:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" gzip "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGzip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" inp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input.txt.gz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ninp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gzip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle error")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle error")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("It is also possible to compress or decompress data in a single step:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.................................'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nzlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deflate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base64'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle error")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eJzT0yMAAGTvBe8='")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base64'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nzlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle error")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"threadpool-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#threadpool-usage"}},[t._v("#")]),t._v(" Threadpool Usage")]),t._v(" "),a("p",[t._v("All zlib APIs, except those that are explicitly synchronous, use libuv's\nthreadpool. This can lead to surprising effects in some applications, such as\nsubpar performance (which can be mitigated by adjusting the "),a("router-link",{attrs:{to:"/node/cli.html#cli_uv_threadpool_size_size"}},[t._v("pool size")]),t._v(")\nand/or unrecoverable and catastrophic memory fragmentation.")],1),t._v(" "),a("h2",{attrs:{id:"compressing-http-requests-and-responses"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compressing-http-requests-and-responses"}},[t._v("#")]),t._v(" Compressing HTTP requests and responses")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("zlib")]),t._v(" module can be used to implement support for the "),a("code",[t._v("gzip")]),t._v(", "),a("code",[t._v("deflate")]),t._v("\nand "),a("code",[t._v("br")]),t._v(" content-encoding mechanisms defined by\n"),a("a",{attrs:{href:"https://tools.ietf.org/html/rfc7230#section-4.2",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("The HTTP "),a("a",{attrs:{href:"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Accept-Encoding")]),a("OutboundLink")],1),t._v(" header is used within an http request to identify\nthe compression encodings accepted by the client. The "),a("a",{attrs:{href:"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Content-Encoding")]),a("OutboundLink")],1),t._v("\nheader is used to identify the compression encodings actually applied to a\nmessage.")]),t._v(" "),a("p",[t._v("The examples given below are drastically simplified to show the basic concept.\nUsing "),a("code",[t._v("zlib")]),t._v(" encoding can be expensive, and the results ought to be cached.\nSee "),a("a",{attrs:{href:"#zlib_memory_usage_tuning"}},[t._v("Memory Usage Tuning")]),t._v(" for more information on the speed/memory/compression\ntradeoffs involved in "),a("code",[t._v("zlib")]),t._v(" usage.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Client request example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zlib "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zlib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" request "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'example.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                           path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                           port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                           headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Accept-Encoding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'br,gzip,deflate'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'response'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" output "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'example.com_index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content-encoding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'br'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBrotliDecompress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Or, just use zlib.createUnzip() to handle both of the following cases:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gzip'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGunzip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deflate'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createInflate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// server example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Running a gzip operation on every request is quite expensive.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It would be much more efficient to cache the compressed buffer.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zlib "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zlib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" raw "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Store both a compressed and an uncompressed version of the resource.")]),t._v("\n  response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vary: Accept-Encoding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" acceptEncoding "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accept-encoding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("acceptEncoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    acceptEncoding "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note: This is not a conformant accept-encoding parser.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// See https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\bdeflate\\b/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("acceptEncoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Encoding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deflate'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    raw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDeflate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\bgzip\\b/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("acceptEncoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Encoding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gzip'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    raw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGzip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\bbr\\b/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("acceptEncoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Encoding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'br'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    raw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBrotliCompress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    raw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1337")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("By default, the "),a("code",[t._v("zlib")]),t._v(" methods will throw an error when decompressing\ntruncated data. However, if it is known that the data is incomplete, or\nthe desire is to inspect only the beginning of a compressed file, it is\npossible to suppress the default error handling by changing the flushing\nmethod that is used to decompress the last chunk of input data:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is a truncated version of the buffer from the above examples")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eJzT0yMA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base64'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nzlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For Brotli, the equivalent is zlib.constants.BROTLI_OPERATION_FLUSH.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" finishFlush"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constants"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Z_SYNC_FLUSH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle error")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This will not change the behavior in other error-throwing situations, e.g.\nwhen the input data has an invalid format. Using this method, it will not be\npossible to determine whether the input ended prematurely or lacks the\nintegrity checks, making it necessary to manually check that the\ndecompressed result is valid.")]),t._v(" "),a("h2",{attrs:{id:"memory-usage-tuning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memory-usage-tuning"}},[t._v("#")]),t._v(" Memory Usage Tuning")]),t._v(" "),a("h3",{attrs:{id:"for-zlib-based-streams"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-zlib-based-streams"}},[t._v("#")]),t._v(" For zlib-based streams")]),t._v(" "),a("p",[t._v("From "),a("code",[t._v("zlib/zconf.h")]),t._v(", modified to Node.js's usage:")]),t._v(" "),a("p",[t._v("The memory requirements for deflate are (in bytes):")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("windowBits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("memLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("That is: 128K for "),a("code",[t._v("windowBits")]),t._v(" = 15 + 128K for "),a("code",[t._v("memLevel")]),t._v(" = 8\n(default values) plus a few kilobytes for small objects.")]),t._v(" "),a("p",[t._v("For example, to reduce the default memory requirements from 256K to 128K, the\noptions should be set to:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" windowBits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" memLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This will, however, generally degrade compression.")]),t._v(" "),a("p",[t._v("The memory requirements for inflate are (in bytes) "),a("code",[t._v("1 << windowBits")]),t._v(".\nThat is, 32K for "),a("code",[t._v("windowBits")]),t._v(" = 15 (default value) plus a few kilobytes\nfor small objects.")]),t._v(" "),a("p",[t._v("This is in addition to a single internal output slab buffer of size\n"),a("code",[t._v("chunkSize")]),t._v(", which defaults to 16K.")]),t._v(" "),a("p",[t._v("The speed of "),a("code",[t._v("zlib")]),t._v(" compression is affected most dramatically by the\n"),a("code",[t._v("level")]),t._v(" setting. A higher level will result in better compression, but\nwill take longer to complete. A lower level will result in less\ncompression, but will be much faster.")]),t._v(" "),a("p",[t._v("In general, greater memory usage options will mean that Node.js has to make\nfewer calls to "),a("code",[t._v("zlib")]),t._v(" because it will be able to process more data on\neach "),a("code",[t._v("write")]),t._v(" operation. So, this is another factor that affects the\nspeed, at the cost of memory usage.")]),t._v(" "),a("h3",{attrs:{id:"for-brotli-based-streams"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-brotli-based-streams"}},[t._v("#")]),t._v(" For Brotli-based streams")]),t._v(" "),a("p",[t._v("There are equivalents to the zlib options for Brotli-based streams, although\nthese options have different ranges than the zlib ones:")]),t._v(" "),a("ul",[a("li",[t._v("zlib’s "),a("code",[t._v("level")]),t._v(" option matches Brotli’s "),a("code",[t._v("BROTLI_PARAM_QUALITY")]),t._v(" option.")]),t._v(" "),a("li",[t._v("zlib’s "),a("code",[t._v("windowBits")]),t._v(" option matches Brotli’s "),a("code",[t._v("BROTLI_PARAM_LGWIN")]),t._v(" option.")])]),t._v(" "),a("p",[t._v("See "),a("a",{attrs:{href:"#zlib_brotli_constants"}},[t._v("below")]),t._v(" for more details on Brotli-specific options.")]),t._v(" "),a("h2",{attrs:{id:"flushing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flushing"}},[t._v("#")]),t._v(" Flushing")]),t._v(" "),a("p",[t._v("Calling "),a("a",{attrs:{href:"#zlib_zlib_flush_kind_callback"}},[a("code",[t._v(".flush()")])]),t._v(" on a compression stream will make "),a("code",[t._v("zlib")]),t._v(" return as much\noutput as currently possible. This may come at the cost of degraded compression\nquality, but can be useful when data needs to be available as soon as possible.")]),t._v(" "),a("p",[t._v("In the following example, "),a("code",[t._v("flush()")]),t._v(" is used to write a compressed partial\nHTTP response to the client:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zlib "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zlib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For the sake of simplicity, the Accept-Encoding checks are omitted.")]),t._v("\n  response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content-encoding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gzip'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" output "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGzip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("The current time is ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The data has been passed to zlib, but the compression algorithm may")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// have decided to buffer the data for more efficient compression.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Calling .flush() will make the data available as soon as the client")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// is ready to receive it.")]),t._v("\n      output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flush")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1337")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"constants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constants"}},[t._v("#")]),t._v(" Constants")]),t._v(" "),a("h3",{attrs:{id:"zlib-constants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-constants"}},[t._v("#")]),t._v(" zlib constants")]),t._v(" "),a("p",[t._v("All of the constants defined in "),a("code",[t._v("zlib.h")]),t._v(" are also defined on\n"),a("code",[t._v("require('zlib').constants")]),t._v(". In the normal course of operations, it will not be\nnecessary to use these constants. They are documented so that their presence is\nnot surprising. This section is taken almost directly from the\n"),a("a",{attrs:{href:"https://zlib.net/manual.html#Constants",target:"_blank",rel:"noopener noreferrer"}},[t._v("zlib documentation"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Previously, the constants were available directly from "),a("code",[t._v("require('zlib')")]),t._v(", for\ninstance "),a("code",[t._v("zlib.Z_NO_FLUSH")]),t._v(". Accessing the constants directly from the module is\ncurrently still possible but is deprecated.")]),t._v(" "),a("p",[t._v("Allowed flush values.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("zlib.constants.Z_NO_FLUSH")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_PARTIAL_FLUSH")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_SYNC_FLUSH")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_FULL_FLUSH")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_FINISH")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_BLOCK")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_TREES")])])]),t._v(" "),a("p",[t._v("Return codes for the compression/decompression functions. Negative\nvalues are errors, positive values are used for special but normal\nevents.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("zlib.constants.Z_OK")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_STREAM_END")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_NEED_DICT")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_ERRNO")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_STREAM_ERROR")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_DATA_ERROR")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_MEM_ERROR")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_BUF_ERROR")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_VERSION_ERROR")])])]),t._v(" "),a("p",[t._v("Compression levels.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("zlib.constants.Z_NO_COMPRESSION")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_BEST_SPEED")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_BEST_COMPRESSION")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_DEFAULT_COMPRESSION")])])]),t._v(" "),a("p",[t._v("Compression strategy.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("zlib.constants.Z_FILTERED")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_HUFFMAN_ONLY")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_RLE")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_FIXED")])]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.Z_DEFAULT_STRATEGY")])])]),t._v(" "),a("h3",{attrs:{id:"brotli-constants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brotli-constants"}},[t._v("#")]),t._v(" Brotli constants")]),t._v(" "),a("p",[t._v("There are several options and other constants available for Brotli-based\nstreams:")]),t._v(" "),a("h4",{attrs:{id:"flush-operations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flush-operations"}},[t._v("#")]),t._v(" Flush operations")]),t._v(" "),a("p",[t._v("The following values are valid flush operations for Brotli-based streams:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("zlib.constants.BROTLI_OPERATION_PROCESS")]),t._v(" (default for all operations)")]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.BROTLI_OPERATION_FLUSH")]),t._v(" (default when calling "),a("code",[t._v(".flush()")]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.BROTLI_OPERATION_FINISH")]),t._v(" (default for the last chunk)")]),t._v(" "),a("li",[a("code",[t._v("zlib.constants.BROTLI_OPERATION_EMIT_METADATA")]),t._v(" "),a("ul",[a("li",[t._v("This particular operation may be hard to use in a Node.js context,\nas the streaming layer makes it hard to know which data will end up\nin this frame. Also, there is currently no way to consume this data through\nthe Node.js API.")])])])]),t._v(" "),a("h4",{attrs:{id:"compressor-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compressor-options"}},[t._v("#")]),t._v(" Compressor options")]),t._v(" "),a("p",[t._v("There are several options that can be set on Brotli encoders, affecting\ncompression efficiency and speed. Both the keys and the values can be accessed\nas properties of the "),a("code",[t._v("zlib.constants")]),t._v(" object.")]),t._v(" "),a("p",[t._v("The most important options are:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("BROTLI_PARAM_MODE")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("BROTLI_MODE_GENERIC")]),t._v(" (default)")]),t._v(" "),a("li",[a("code",[t._v("BROTLI_MODE_TEXT")]),t._v(", adjusted for UTF-8 text")]),t._v(" "),a("li",[a("code",[t._v("BROTLI_MODE_FONT")]),t._v(", adjusted for WOFF 2.0 fonts")])])]),t._v(" "),a("li",[a("code",[t._v("BROTLI_PARAM_QUALITY")]),t._v(" "),a("ul",[a("li",[t._v("Ranges from "),a("code",[t._v("BROTLI_MIN_QUALITY")]),t._v(" to "),a("code",[t._v("BROTLI_MAX_QUALITY")]),t._v(",\nwith a default of "),a("code",[t._v("BROTLI_DEFAULT_QUALITY")]),t._v(".")])])]),t._v(" "),a("li",[a("code",[t._v("BROTLI_PARAM_SIZE_HINT")]),t._v(" "),a("ul",[a("li",[t._v("Integer value representing the expected input size;\ndefaults to "),a("code",[t._v("0")]),t._v(" for an unknown input size.")])])])]),t._v(" "),a("p",[t._v("The following flags can be set for advanced control over the compression\nalgorithm and memory usage tuning:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("BROTLI_PARAM_LGWIN")]),t._v(" "),a("ul",[a("li",[t._v("Ranges from "),a("code",[t._v("BROTLI_MIN_WINDOW_BITS")]),t._v(" to "),a("code",[t._v("BROTLI_MAX_WINDOW_BITS")]),t._v(",\nwith a default of "),a("code",[t._v("BROTLI_DEFAULT_WINDOW")]),t._v(", or up to\n"),a("code",[t._v("BROTLI_LARGE_MAX_WINDOW_BITS")]),t._v(" if the "),a("code",[t._v("BROTLI_PARAM_LARGE_WINDOW")]),t._v(" flag\nis set.")])])]),t._v(" "),a("li",[a("code",[t._v("BROTLI_PARAM_LGBLOCK")]),t._v(" "),a("ul",[a("li",[t._v("Ranges from "),a("code",[t._v("BROTLI_MIN_INPUT_BLOCK_BITS")]),t._v(" to "),a("code",[t._v("BROTLI_MAX_INPUT_BLOCK_BITS")]),t._v(".")])])]),t._v(" "),a("li",[a("code",[t._v("BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING")]),t._v(" "),a("ul",[a("li",[t._v("Boolean flag that decreases compression ratio in favour of\ndecompression speed.")])])]),t._v(" "),a("li",[a("code",[t._v("BROTLI_PARAM_LARGE_WINDOW")]),t._v(" "),a("ul",[a("li",[t._v("Boolean flag enabling “Large Window Brotli” mode (not compatible with the\nBrotli format as standardized in "),a("a",{attrs:{href:"https://www.rfc-editor.org/rfc/rfc7932.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC 7932"),a("OutboundLink")],1),t._v(").")])])]),t._v(" "),a("li",[a("code",[t._v("BROTLI_PARAM_NPOSTFIX")]),t._v(" "),a("ul",[a("li",[t._v("Ranges from "),a("code",[t._v("0")]),t._v(" to "),a("code",[t._v("BROTLI_MAX_NPOSTFIX")]),t._v(".")])])]),t._v(" "),a("li",[a("code",[t._v("BROTLI_PARAM_NDIRECT")]),t._v(" "),a("ul",[a("li",[t._v("Ranges from "),a("code",[t._v("0")]),t._v(" to "),a("code",[t._v("15 << NPOSTFIX")]),t._v(" in steps of "),a("code",[t._v("1 << NPOSTFIX")]),t._v(".")])])])]),t._v(" "),a("h4",{attrs:{id:"decompressor-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decompressor-options"}},[t._v("#")]),t._v(" Decompressor options")]),t._v(" "),a("p",[t._v("These advanced options are available for controlling decompression:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION")]),t._v(" "),a("ul",[a("li",[t._v("Boolean flag that affects internal memory allocation patterns.")])])]),t._v(" "),a("li",[a("code",[t._v("BROTLI_DECODER_PARAM_LARGE_WINDOW")]),t._v(" "),a("ul",[a("li",[t._v("Boolean flag enabling “Large Window Brotli” mode (not compatible with the\nBrotli format as standardized in "),a("a",{attrs:{href:"https://www.rfc-editor.org/rfc/rfc7932.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC 7932"),a("OutboundLink")],1),t._v(").")])])])]),t._v(" "),a("h2",{attrs:{id:"class-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-options"}},[t._v("#")]),t._v(" Class: Options")]),t._v(" "),a("p",[t._v("Each zlib-based class takes an "),a("code",[t._v("options")]),t._v(" object. All options are optional.")]),t._v(" "),a("p",[t._v("Some options are only relevant when compressing and are\nignored by the decompression classes.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("flush")]),t._v(" {integer} "),a("strong",[t._v("Default:")]),t._v(" "),a("code",[t._v("zlib.constants.Z_NO_FLUSH")])]),t._v(" "),a("li",[a("code",[t._v("finishFlush")]),t._v(" {integer} "),a("strong",[t._v("Default:")]),t._v(" "),a("code",[t._v("zlib.constants.Z_FINISH")])]),t._v(" "),a("li",[a("code",[t._v("chunkSize")]),t._v(" {integer} "),a("strong",[t._v("Default:")]),t._v(" "),a("code",[t._v("16 * 1024")])]),t._v(" "),a("li",[a("code",[t._v("windowBits")]),t._v(" {integer}")]),t._v(" "),a("li",[a("code",[t._v("level")]),t._v(" {integer} (compression only)")]),t._v(" "),a("li",[a("code",[t._v("memLevel")]),t._v(" {integer} (compression only)")]),t._v(" "),a("li",[a("code",[t._v("strategy")]),t._v(" {integer} (compression only)")]),t._v(" "),a("li",[a("code",[t._v("dictionary")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer} (deflate/inflate only,\nempty dictionary by default)")]),t._v(" "),a("li",[a("code",[t._v("info")]),t._v(" {boolean} (If "),a("code",[t._v("true")]),t._v(", returns an object with "),a("code",[t._v("buffer")]),t._v(" and "),a("code",[t._v("engine")]),t._v(".)")])]),t._v(" "),a("p",[t._v("See the "),a("a",{attrs:{href:"https://zlib.net/manual.html#Advanced",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("deflateInit2")]),t._v(" and "),a("code",[t._v("inflateInit2")]),a("OutboundLink")],1),t._v(" documentation for more\ninformation.")]),t._v(" "),a("h2",{attrs:{id:"class-brotlioptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-brotlioptions"}},[t._v("#")]),t._v(" Class: BrotliOptions")]),t._v(" "),a("p",[t._v("Each Brotli-based class takes an "),a("code",[t._v("options")]),t._v(" object. All options are optional.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("flush")]),t._v(" {integer} "),a("strong",[t._v("Default:")]),t._v(" "),a("code",[t._v("zlib.constants.BROTLI_OPERATION_PROCESS")])]),t._v(" "),a("li",[a("code",[t._v("finishFlush")]),t._v(" {integer} "),a("strong",[t._v("Default:")]),t._v(" "),a("code",[t._v("zlib.constants.BROTLI_OPERATION_FINISH")])]),t._v(" "),a("li",[a("code",[t._v("chunkSize")]),t._v(" {integer} "),a("strong",[t._v("Default:")]),t._v(" "),a("code",[t._v("16 * 1024")])]),t._v(" "),a("li",[a("code",[t._v("params")]),t._v(" {Object} Key-value object containing indexed "),a("a",{attrs:{href:"#zlib_brotli_constants"}},[t._v("Brotli parameters")]),t._v(".")])]),t._v(" "),a("p",[t._v("For example:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBrotliCompress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  chunkSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constants"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BROTLI_PARAM_MODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constants"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BROTLI_MODE_TEXT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constants"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BROTLI_PARAM_QUALITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constants"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BROTLI_PARAM_SIZE_HINT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("statSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"class-zlib-brotlicompress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-brotlicompress"}},[t._v("#")]),t._v(" Class: zlib.BrotliCompress")]),t._v(" "),a("p",[t._v("Compress data using the Brotli algorithm.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-brotlidecompress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-brotlidecompress"}},[t._v("#")]),t._v(" Class: zlib.BrotliDecompress")]),t._v(" "),a("p",[t._v("Decompress data using the Brotli algorithm.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-deflate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-deflate"}},[t._v("#")]),t._v(" Class: zlib.Deflate")]),t._v(" "),a("p",[t._v("Compress data using deflate.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-deflateraw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-deflateraw"}},[t._v("#")]),t._v(" Class: zlib.DeflateRaw")]),t._v(" "),a("p",[t._v("Compress data using deflate, and do not append a "),a("code",[t._v("zlib")]),t._v(" header.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-gunzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-gunzip"}},[t._v("#")]),t._v(" Class: zlib.Gunzip")]),t._v(" "),a("p",[t._v("Decompress a gzip stream.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-gzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-gzip"}},[t._v("#")]),t._v(" Class: zlib.Gzip")]),t._v(" "),a("p",[t._v("Compress data using gzip.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-inflate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-inflate"}},[t._v("#")]),t._v(" Class: zlib.Inflate")]),t._v(" "),a("p",[t._v("Decompress a deflate stream.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-inflateraw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-inflateraw"}},[t._v("#")]),t._v(" Class: zlib.InflateRaw")]),t._v(" "),a("p",[t._v("Decompress a raw deflate stream.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-unzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-unzip"}},[t._v("#")]),t._v(" Class: zlib.Unzip")]),t._v(" "),a("p",[t._v("Decompress either a Gzip- or Deflate-compressed stream by auto-detecting\nthe header.")]),t._v(" "),a("h2",{attrs:{id:"class-zlib-zlibbase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class-zlib-zlibbase"}},[t._v("#")]),t._v(" Class: zlib.ZlibBase")]),t._v(" "),a("p",[t._v("Not exported by the "),a("code",[t._v("zlib")]),t._v(" module. It is documented here because it is the base\nclass of the compressor/decompressor classes.")]),t._v(" "),a("p",[t._v("This class inherits from "),a("router-link",{attrs:{to:"/node/stream.html#stream_class_stream_transform"}},[a("code",[t._v("stream.Transform")])]),t._v(", allowing "),a("code",[t._v("zlib")]),t._v(" objects to be\nused in pipes and similar stream operations.")],1),t._v(" "),a("h3",{attrs:{id:"zlib-bytesread"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-bytesread"}},[t._v("#")]),t._v(" zlib.bytesRead")]),t._v(" "),a("blockquote",[a("p",[t._v("Stability: 0 - Deprecated: Use "),a("a",{attrs:{href:"#zlib_zlib_byteswritten"}},[a("code",[t._v("zlib.bytesWritten")])]),t._v(" instead.")])]),t._v(" "),a("ul",[a("li",[t._v("{number}")])]),t._v(" "),a("p",[t._v("Deprecated alias for "),a("a",{attrs:{href:"#zlib_zlib_byteswritten"}},[a("code",[t._v("zlib.bytesWritten")])]),t._v(". This original name was chosen\nbecause it also made sense to interpret the value as the number of bytes\nread by the engine, but is inconsistent with other streams in Node.js that\nexpose values under these names.")]),t._v(" "),a("h3",{attrs:{id:"zlib-byteswritten"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-byteswritten"}},[t._v("#")]),t._v(" zlib.bytesWritten")]),t._v(" "),a("ul",[a("li",[t._v("{number}")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("zlib.bytesWritten")]),t._v(" property specifies the number of bytes written to\nthe engine, before the bytes are processed (compressed or decompressed,\nas appropriate for the derived class).")]),t._v(" "),a("h3",{attrs:{id:"zlib-close-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-close-callback"}},[t._v("#")]),t._v(" zlib.close([callback])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("p",[t._v("Close the underlying handle.")]),t._v(" "),a("h3",{attrs:{id:"zlib-flush-kind-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-flush-kind-callback"}},[t._v("#")]),t._v(" zlib.flush([kind, ]callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("kind")]),t._v(" "),a("strong",[t._v("Default:")]),t._v(" "),a("code",[t._v("zlib.constants.Z_FULL_FLUSH")]),t._v(" for zlib-based streams,\n"),a("code",[t._v("zlib.constants.BROTLI_OPERATION_FLUSH")]),t._v(" for Brotli-based streams.")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("p",[t._v("Flush pending data. Don't call this frivolously, premature flushes negatively\nimpact the effectiveness of the compression algorithm.")]),t._v(" "),a("p",[t._v("Calling this only flushes data from the internal "),a("code",[t._v("zlib")]),t._v(" state, and does not\nperform flushing of any kind on the streams level. Rather, it behaves like a\nnormal call to "),a("code",[t._v(".write()")]),t._v(", i.e. it will be queued up behind other pending\nwrites and will only produce output when data is being read from the stream.")]),t._v(" "),a("h3",{attrs:{id:"zlib-params-level-strategy-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-params-level-strategy-callback"}},[t._v("#")]),t._v(" zlib.params(level, strategy, callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("level")]),t._v(" {integer}")]),t._v(" "),a("li",[a("code",[t._v("strategy")]),t._v(" {integer}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("p",[t._v("This function is only available for zlib-based streams, i.e. not Brotli.")]),t._v(" "),a("p",[t._v("Dynamically update the compression level and compression strategy.\nOnly applicable to deflate algorithm.")]),t._v(" "),a("h3",{attrs:{id:"zlib-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-reset"}},[t._v("#")]),t._v(" zlib.reset()")]),t._v(" "),a("p",[t._v("Reset the compressor/decompressor to factory defaults. Only applicable to\nthe inflate and deflate algorithms.")]),t._v(" "),a("h2",{attrs:{id:"zlib-constants-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-constants-2"}},[t._v("#")]),t._v(" zlib.constants")]),t._v(" "),a("p",[t._v("Provides an object enumerating Zlib-related constants.")]),t._v(" "),a("h2",{attrs:{id:"zlib-createbrotlicompress-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-createbrotlicompress-options"}},[t._v("#")]),t._v(" zlib.createBrotliCompress([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {brotli options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_brotlicompress"}},[a("code",[t._v("BrotliCompress")])]),t._v(" object.")]),t._v(" "),a("h2",{attrs:{id:"zlib-createbrotlidecompress-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-createbrotlidecompress-options"}},[t._v("#")]),t._v(" zlib.createBrotliDecompress([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {brotli options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_brotlidecompress"}},[a("code",[t._v("BrotliDecompress")])]),t._v(" object.")]),t._v(" "),a("h2",{attrs:{id:"zlib-createdeflate-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-createdeflate-options"}},[t._v("#")]),t._v(" zlib.createDeflate([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_deflate"}},[a("code",[t._v("Deflate")])]),t._v(" object.")]),t._v(" "),a("h2",{attrs:{id:"zlib-createdeflateraw-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-createdeflateraw-options"}},[t._v("#")]),t._v(" zlib.createDeflateRaw([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_deflateraw"}},[a("code",[t._v("DeflateRaw")])]),t._v(" object.")]),t._v(" "),a("p",[t._v("An upgrade of zlib from 1.2.8 to 1.2.11 changed behavior when "),a("code",[t._v("windowBits")]),t._v("\nis set to 8 for raw deflate streams. zlib would automatically set "),a("code",[t._v("windowBits")]),t._v("\nto 9 if was initially set to 8. Newer versions of zlib will throw an exception,\nso Node.js restored the original behavior of upgrading a value of 8 to 9,\nsince passing "),a("code",[t._v("windowBits = 9")]),t._v(" to zlib actually results in a compressed stream\nthat effectively uses an 8-bit window only.")]),t._v(" "),a("h2",{attrs:{id:"zlib-creategunzip-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-creategunzip-options"}},[t._v("#")]),t._v(" zlib.createGunzip([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_gunzip"}},[a("code",[t._v("Gunzip")])]),t._v(" object.")]),t._v(" "),a("h2",{attrs:{id:"zlib-creategzip-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-creategzip-options"}},[t._v("#")]),t._v(" zlib.createGzip([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_gzip"}},[a("code",[t._v("Gzip")])]),t._v(" object.\nSee "),a("a",{attrs:{href:"#zlib_zlib"}},[t._v("example")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"zlib-createinflate-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-createinflate-options"}},[t._v("#")]),t._v(" zlib.createInflate([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_inflate"}},[a("code",[t._v("Inflate")])]),t._v(" object.")]),t._v(" "),a("h2",{attrs:{id:"zlib-createinflateraw-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-createinflateraw-options"}},[t._v("#")]),t._v(" zlib.createInflateRaw([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_inflateraw"}},[a("code",[t._v("InflateRaw")])]),t._v(" object.")]),t._v(" "),a("h2",{attrs:{id:"zlib-createunzip-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-createunzip-options"}},[t._v("#")]),t._v(" zlib.createUnzip([options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Creates and returns a new "),a("a",{attrs:{href:"#zlib_class_zlib_unzip"}},[a("code",[t._v("Unzip")])]),t._v(" object.")]),t._v(" "),a("h2",{attrs:{id:"convenience-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#convenience-methods"}},[t._v("#")]),t._v(" Convenience Methods")]),t._v(" "),a("p",[t._v("All of these take a "),a("router-link",{attrs:{to:"/node/buffer.html#buffer_class_buffer"}},[a("code",[t._v("Buffer")])]),t._v(", "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("TypedArray")]),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("DataView")]),a("OutboundLink")],1),t._v(",\n"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ArrayBuffer")]),a("OutboundLink")],1),t._v(" or string as the first argument, an optional second argument\nto supply options to the "),a("code",[t._v("zlib")]),t._v(" classes and will call the supplied callback\nwith "),a("code",[t._v("callback(error, result)")]),t._v(".")],1),t._v(" "),a("p",[t._v("Every method has a "),a("code",[t._v("*Sync")]),t._v(" counterpart, which accept the same arguments, but\nwithout a callback.")]),t._v(" "),a("h3",{attrs:{id:"zlib-brotlicompress-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-brotlicompress-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.brotliCompress(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {brotli options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-brotlicompresssync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-brotlicompresssync-buffer-options"}},[t._v("#")]),t._v(" zlib.brotliCompressSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {brotli options}")])]),t._v(" "),a("p",[t._v("Compress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_brotlicompress"}},[a("code",[t._v("BrotliCompress")])]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"zlib-brotlidecompress-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-brotlidecompress-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.brotliDecompress(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {brotli options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-brotlidecompresssync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-brotlidecompresssync-buffer-options"}},[t._v("#")]),t._v(" zlib.brotliDecompressSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {brotli options}")])]),t._v(" "),a("p",[t._v("Decompress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_brotlidecompress"}},[a("code",[t._v("BrotliDecompress")])]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"zlib-deflate-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-deflate-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.deflate(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-deflatesync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-deflatesync-buffer-options"}},[t._v("#")]),t._v(" zlib.deflateSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Compress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_deflate"}},[a("code",[t._v("Deflate")])]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"zlib-deflateraw-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-deflateraw-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.deflateRaw(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-deflaterawsync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-deflaterawsync-buffer-options"}},[t._v("#")]),t._v(" zlib.deflateRawSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Compress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_deflateraw"}},[a("code",[t._v("DeflateRaw")])]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"zlib-gunzip-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-gunzip-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.gunzip(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-gunzipsync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-gunzipsync-buffer-options"}},[t._v("#")]),t._v(" zlib.gunzipSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Decompress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_gunzip"}},[a("code",[t._v("Gunzip")])]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"zlib-gzip-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-gzip-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.gzip(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-gzipsync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-gzipsync-buffer-options"}},[t._v("#")]),t._v(" zlib.gzipSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Compress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_gzip"}},[a("code",[t._v("Gzip")])]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"zlib-inflate-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-inflate-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.inflate(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-inflatesync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-inflatesync-buffer-options"}},[t._v("#")]),t._v(" zlib.inflateSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Decompress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_inflate"}},[a("code",[t._v("Inflate")])]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"zlib-inflateraw-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-inflateraw-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.inflateRaw(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-inflaterawsync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-inflaterawsync-buffer-options"}},[t._v("#")]),t._v(" zlib.inflateRawSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Decompress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_inflateraw"}},[a("code",[t._v("InflateRaw")])]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"zlib-unzip-buffer-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-unzip-buffer-options-callback"}},[t._v("#")]),t._v(" zlib.unzip(buffer[, options], callback)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")]),t._v(" "),a("li",[a("code",[t._v("callback")]),t._v(" {Function}")])]),t._v(" "),a("h3",{attrs:{id:"zlib-unzipsync-buffer-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zlib-unzipsync-buffer-options"}},[t._v("#")]),t._v(" zlib.unzipSync(buffer[, options])")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("buffer")]),t._v(" {Buffer|TypedArray|DataView|ArrayBuffer|string}")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" {zlib options}")])]),t._v(" "),a("p",[t._v("Decompress a chunk of data with "),a("a",{attrs:{href:"#zlib_class_zlib_unzip"}},[a("code",[t._v("Unzip")])]),t._v(".")])])}),[],!1,null,null,null);s.default=e.exports}}]);